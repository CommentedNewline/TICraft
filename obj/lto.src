	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_crc32
_crc32:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 12
	ld	sp, hl
	ld	iy, (ix + 9)
	ld	e, 0
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	c, BB0_4
	ld	bc, (ix + 6)
	ld	d, -1
	scf
	sbc	hl, hl
	ld	(ix - 3), hl
BB0_2:
	ld	(ix - 6), iy
	ld	iy, 0
	push	bc
	pop	hl
	ld	(ix - 9), hl
	push	af
	ld	a, (hl)
	ld	iyl, a
	pop	af
	ld	hl, (ix - 3)
	ld	e, d
	ld	bc, 255
	xor	a, a
	call	__land
	lea	bc, iy
	call	__lxor
	ld	c, 2
	call	__ishl
	push	hl
	pop	bc
	ld	iy, _crc32_tab
	add	iy, bc
	ld	hl, (iy)
	ld	(ix - 12), hl
	ld	e, (iy + 3)
	ld	iy, (ix - 6)
	ld	bc, (ix - 3)
	ld	a, d
	ld	l, 8
	call	__lshru
	ld	hl, (ix - 12)
	call	__lxor
	ld	(ix - 3), hl
	ld	d, e
	dec	iy
	ld	bc, (ix - 9)
	inc	bc
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_2
	ld	hl, (ix - 3)
	ld	e, d
	call	__lnot
	ld	sp, ix
	pop	ix
	ret
BB0_4:
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_handleUsbEvent
_handleUsbEvent:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	de, (ix + 6)
	ld	iy, 0
	dec	de
	ld	bc, 4
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB1_8
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	ld	bc, (ix + 12)
	ld	hl, 100
	ld	iy, JTI1_0
	add	iy, de
	add	iy, de
	add	iy, de
	ld	iy, (iy)
	jp	(iy)
BB1_2:
	ld	hl, 0
	ld	(ix - 3), hl
	push	bc
	pop	iy
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB1_6
	lea	bc, iy
	jr	BB1_7
BB1_4:
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	pop	de
BB1_5:
	ld	sp, ix
	pop	ix
	ret
BB1_6:
	pea	iy + 3
	call	_msd_Close
	pop	hl
	ld	de, 1795
	ld	iy, (ix + 12)
	lea	bc, iy
	add	iy, de
	ld	(iy), 0
BB1_7:
	push	bc
	pop	iy
	ld	hl, (ix - 3)
	ld	(iy), hl
	ld	iy, 0
BB1_8:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_2
	dl	BB1_4
	dl	BB1_5
	dl	BB1_7

	section	.text,"ax",@progbits
	public	_init_USB
_init_USB:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	iy, _global
	xor	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	(_global), a
	lea	de, iy
	inc	de
	ld	bc, 1796
	lea	hl, iy
	ldir
	ld	hl, 36106
	push	hl
	ld	hl, 0
	push	hl
	push	iy
	ld	hl, _handleUsbEvent
	push	hl
	call	_usb_Init
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_usberr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_6
	ld	a, -1
BB2_2:
	ld	de, (_global)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_7
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_7
	call	_os_GetCSC
	or	a, a
	jp	nz, BB2_14
	call	_usb_WaitForInterrupt
	ld	(_usberr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, -1
	jr	nz, BB2_2
BB2_6:
	ld	a, 0
	jr	BB2_2
BB2_7:
	bit	0, a
	jp	nz, BB2_14
	ld	hl, _global+3
	push	de
	push	hl
	call	_msd_Open
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	(_msderr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_14
	ld	a, 1
	ld	hl, _msdinfo
	ld	(_global+1795), a
	push	hl
	ld	hl, _global+3
	push	hl
	call	_msd_Info
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	(_msderr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_14
	ld	de, _partitions
	ld	hl, 32
	push	hl
	push	de
	ld	hl, _global+3
	push	hl
	call	_msd_FindPartitions
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(_num_partitions), a
	or	a, a
	jr	z, BB2_14
	ld	bc, _global+1027
	ld	iy, _partitions
BB2_12:
	ld	(ix - 6), iy
	ld	hl, (iy)
	ld	e, (iy + 3)
	push	de
	push	hl
	ld	hl, _global+3
	push	hl
	ld	hl, _msd_Write
	push	hl
	ld	hl, _msd_Read
	push	hl
	push	bc
	call	_fat_Open
	ld	iy, 18
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_15
	ld	hl, (ix - 3)
	inc	hl
	ld	a, (_num_partitions)
	ld	de, 0
	ld	e, a
	ld	iy, (ix - 6)
	lea	iy, iy + 8
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	ld	bc, _global+1027
	jr	c, BB2_12
BB2_14:
	xor	a, a
	ld	sp, ix
	pop	ix
	ret
BB2_15:
	ld	a, 1
	ld	(_global+1796), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_readFile
_readFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -335
	add	hl, sp
	ld	sp, hl
	lea	hl, ix - 70
	ld	bc, -332
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -326
	lea	hl, ix
	add	hl, bc
	push	ix
	ld	bc, -329
	add	ix, bc
	ld	(ix), hl
	pop	ix
	call	_usb_WaitForEvents
	ld	hl, 256
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 71), 0
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB3_2
	ld	bc, _.str.114
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	push	bc
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB3_2:
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_OpenFile
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_9
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_GetFileSize
	push	hl
	pop	iy
	pop	hl
	ld	bc, -512
	ld	hl, (ix + 12)
	add	hl, bc
	call	__iand
	push	hl
	pop	bc
	ld	d, 0
	lea	hl, iy
	ld	(ix - 3), bc
	push	ix
	ld	bc, -329
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	a, d
	ld	bc, (ix - 3)
	call	__lcmpu
	ccf
	sbc	a, a
	inc	a
	bit	0, a
	jr	nz, BB3_5
	push	bc
	pop	iy
BB3_5:
	ld	bc, -335
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	bit	0, a
	ld	hl, 0
	jr	nz, BB3_7
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	(iy), d
BB3_7:
	push	hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_SetFileBlockOffset
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	l, 9
	ld	de, -335
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -329
	add	ix, de
	ld	a, (ix)
	pop	ix
	call	__lshru
	push	bc
	pop	hl
	ld	e, a
	ld	bc, 1
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	ix
	ld	de, -335
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -329
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	hl, (ix + 15)
	push	hl
	ld	bc, (ix - 3)
	push	bc
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_ReadFile
	push	hl
	pop	bc
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	de, -335
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 3), bc
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	xor	a, a
	ld	bc, (ix - 3)
	call	__lcmpu
	jr	z, BB3_10
	ld	a, 0
	jr	BB3_11
BB3_9:
	xor	a, a
	ld	sp, ix
	pop	ix
	ret
BB3_10:
	ld	a, -1
BB3_11:
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	bc, -332
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_fat_CloseFile
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_writeFile
_writeFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -332
	add	hl, sp
	ld	sp, hl
	ld	bc, -326
	lea	hl, ix
	add	hl, bc
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	call	_usb_WaitForEvents
	ld	hl, 256
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 71), 0
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB4_2
	ld	bc, _.str.114
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	push	bc
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB4_2:
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Delete
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Create
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB4_7
	lea	hl, ix - 70
	ld	bc, -332
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_OpenFile
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB4_8
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, hl
	push	hl
	push	de
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_SetFileSize
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB4_11
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_SetFileBlockOffset
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	c, 9
	ld	hl, (ix + 12)
	call	__ishru
	push	hl
	pop	de
	inc	de
	ld	(ix - 3), bc
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	hl, (ix + 15)
	push	hl
	push	de
	ld	de, -332
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_fat_WriteFile
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	jr	z, BB4_12
	ld	a, 0
	jr	BB4_13
BB4_7:
	ld	hl, _.str.1
	jr	BB4_9
BB4_8:
	ld	hl, _.str.2
BB4_9:
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
BB4_10:
	pop	hl
	xor	a, a
	ld	sp, ix
	pop	ix
	ret
BB4_11:
	ld	hl, _.str.3
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_CloseFile
	jr	BB4_10
BB4_12:
	ld	a, -1
BB4_13:
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	bc, -332
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_fat_CloseFile
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_createDirectory
_createDirectory:
	push	ix
	ld	ix, 0
	add	ix, sp
	call	_usb_WaitForEvents
	ld	hl, 16
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Create
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	ld	a, 1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_getSizeOf
_getSizeOf:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -335
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	ld	bc, -335
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	lea	hl, ix - 70
	push	ix
	ld	bc, -332
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -326
	lea	hl, ix
	add	hl, bc
	push	ix
	ld	bc, -329
	add	ix, bc
	ld	(ix), hl
	pop	ix
	call	_usb_WaitForEvents
	ld	hl, 256
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 71), 0
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB6_2
	ld	bc, _.str.114
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	push	bc
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB6_2:
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_OpenFile
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB6_4
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_GetFileSize
	ld	bc, -335
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_CloseFile
	pop	hl
BB6_4:
	ld	bc, -335
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_deleteFile
_deleteFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -265
	add	hl, sp
	ld	sp, hl
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	ld	bc, -265
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	call	_usb_WaitForEvents
	ld	hl, 256
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 7), 0
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB7_2
	ld	bc, _.str.114
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	push	bc
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB7_2:
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Delete
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_close_USB
_close_USB:
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB8_2
	call	_usb_WaitForEvents
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
BB8_2:
	ld	a, (_global+1795)
	bit	0, a
	call	nz, _usb_WaitForEvents
	jp	_usb_Cleanup
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6clamp07Fixed24
__Z6clamp07Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	iy, (ix + 6)
	ld	de, 0
	ld	hl, (ix + 9)
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB9_2
	ld	(iy), de
	lea	hl, iy
	pop	ix
	ret
BB9_2:
	lea	hl, ix + 9
	ld	a, (hl)
	ld	(iy), a
	ld	a, (ix + 10)
	ld	(iy + 1), a
	ld	a, (ix + 11)
	ld	(iy + 2), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7clamp017Fixed24
__Z7clamp017Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	de, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, -8388608
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB10_2
	push	de
	pop	iy
	or	a, a
	sbc	hl, hl
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
BB10_2:
	push	de
	pop	bc
	ld	de, 4097
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB10_4
	ld	hl, 4096
	push	bc
	pop	iy
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
BB10_4:
	lea	hl, ix + 9
	ld	a, (hl)
	push	bc
	pop	iy
	ld	(iy), a
	ld	a, (ix + 10)
	ld	(iy + 1), a
	ld	a, (ix + 11)
	ld	(iy + 2), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3div7Fixed24S_
__Z3div7Fixed24S_:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	push	de
	push	hl
	call	_fp_div
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3sqr7Fixed24
__Z3sqr7Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 9)
	push	hl
	call	_fp_sqr
	pop	de
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4sqrtR7Fixed24
__Z4sqrtR7Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 9)
	ld	hl, (hl)
	push	hl
	call	_fp_sqrt
	pop	de
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11print_fixedR7Fixed24
__Z11print_fixedR7Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 8
	ld	sp, hl
	ld	hl, (ix + 6)
	ld	bc, 15
	ld	(ix - 1), b
	ld	iy, (_digits)
	ld	de, (hl)
	push	de
	pop	hl
	call	__iand
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 2), a
	ld	c, 4
	push	de
	pop	hl
	call	__ishru
	ld	bc, 15
	call	__iand
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 3), a
	ld	c, 8
	push	de
	pop	hl
	call	__ishru
	ld	bc, 15
	call	__iand
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 4), a
	ld	c, 12
	push	de
	pop	hl
	call	__ishru
	ld	(ix - 5), 46
	ld	bc, 15
	call	__iand
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 6), a
	ld	c, 16
	push	de
	pop	hl
	call	__ishru
	ld	bc, 15
	call	__iand
	push	hl
	pop	bc
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 7), a
	ld	c, 20
	ex	de, hl
	call	__ishru
	push	hl
	pop	de
	add	iy, de
	ld	a, (iy)
	ld	(ix - 8), a
	pea	ix - 8
	call	_os_PutStrFull
	pop	hl
	ld	iy, -3145600
	call	_os_NewLine
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3absR7Fixed24
__Z3absR7Fixed24:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 9)
	ld	de, (hl)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	iy, (ix + 6)
	ld	(iy), hl
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11exitOverlayi
__Z11exitOverlayi:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	iy, (ix + 6)
	ld	hl, -3132938
	xor	a, a
	ld	(-3132938), a
	push	hl
	pop	de
	inc	de
	ld	bc, 69089
	ldir
	push	iy
	call	_exit
	pop	hl
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 44
	ld	sp, hl
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, __Z15texturePackMenuv
	push	hl
	ld	hl, _gfx_End
	push	hl
	call	_ti_SetGCBehavior
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	_ti_CleanAll
	call	_ti_MemChk
	ld	de, 71027
	or	a, a
	sbc	hl, de
	jr	nc, BB17_5
	ld	hl, _.str.4
	push	hl
	call	_os_PutStrFull
	pop	hl
BB17_2:
	call	_os_GetCSC
	ld	l, a
	or	a, a
	jr	z, BB17_2
	ld	a, l
	cp	a, 9
	jp	nz, BB17_247
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
BB17_5:
	lea	hl, ix - 10
	ld	(ix - 25), hl
	ld	iy, (-3136121)
	ld	(_objects), iy
	ld	de, 3000
	lea	hl, iy
	add	hl, de
	ld	(_zSortedObjects), hl
	ld	de, 6000
	add	iy, de
	ld	(_cursorBackground), iy
	call	__Z15texturePackMenuv
	ld	hl, __Z8gfxStartv
	push	hl
	ld	hl, _gfx_End
	push	hl
	call	_ti_SetGCBehavior
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	__Z11initPalettev
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	xor	a, a
	ld	(ix - 26), a
BB17_6:
	ld	a, (ix - 26)
	and	a, 1
	ld	(ix - 29), a
BB17_7:
	ld	hl, 10
	push	hl
	ld	hl, (ix - 25)
	push	hl
	call	__Z8mainMenuPcj
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	bit	0, a
	jp	z, BB17_246
BB17_8:
	call	__Z8fillDirtv
	ld	hl, 105
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, _.str.1.5
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.1.5
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.107
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.107
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.108
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.108
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB17_9:
	call	_os_GetCSC
	cp	a, 35
	jp	nc, BB17_8
	ld	de, 0
	ld	e, a
	ld	hl, JTI17_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB17_11:
	bit	0, (ix - 29)
	jp	nz, BB17_246
	jp	BB17_7
BB17_12:
	ld	hl, _.str.111
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.111
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.5
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.5
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.6
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.6
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.7
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.7
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.8
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.8
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.9
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.9
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	jr	BB17_14
BB17_13:
	or	a, a
	sbc	hl, hl
BB17_14:
	push	hl
	ld	hl, (ix - 25)
	push	hl
	call	__Z9checkSavePKcb
	ld	(ix - 22), a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	__Z8fillDirtv
	ld	hl, (_cursorBackground)
	push	hl
	pop	iy
	ld	de, 6402
	add	iy, de
	ld	(ix - 29), iy
	ld	(hl), -96
	ld	(iy), -96
	ld	iy, (_cursorBackground)
	ld	(iy + 1), 40
	inc	de
	add	hl, de
	ld	(hl), 40
	ld	hl, (_cursorBackground)
	ld	de, 0
	push	de
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 160
	push	hl
	ld	hl, (ix - 29)
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 4
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.10
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 5
	push	de
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 40
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.11
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.11
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.12
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.12
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.13
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.13
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.14
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.14
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.15
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.15
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.16
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.16
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.17
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.17
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.18
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.18
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.19
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.19
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.20
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.20
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.21
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.21
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.22
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.22
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.23
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.23
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.24
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.24
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.25
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.25
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.26
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.26
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.27
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.27
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.28
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 32), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 32)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.28
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	bit	0, (ix - 22)
	jr	z, BB17_16
	call	__Z4loadv
	ld	iy, (_numberOfObjects)
	ld	bc, 3
	jp	BB17_21
BB17_16:
	ld	hl, 81920
	ld	(_playerCursor+49), hl
	ld	(_playerCursor+52), hl
	ld	(_playerCursor+55), hl
	ld	hl, -1048576
	ld	(_angleX), hl
	ld	a, 65
	ld	(_angleX+3), a
	ld	hl, 3407872
	ld	(_angleY), hl
	inc	a
	ld	(_angleY+3), a
	ld	hl, 3547
	ld	(_cx), hl
	ld	hl, 2048
	ld	(_sx), hl
	ld	hl, 2896
	ld	(_cy), hl
	ld	(_sy), hl
	ld	hl, -409600
	ld	(_cameraXYZ), hl
	ld	de, 614400
	ld	(_cameraXYZ+3), de
	ld	(_cameraXYZ+6), hl
	ld	a, 10
	ld	(_selectedObject), a
	ld	hl, (_numberOfObjects)
	push	hl
	pop	de
	ld	bc, 1000
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	push	hl
	pop	iy
	ld	(ix - 22), hl
	ld	bc, 3
	jp	nc, BB17_22
	or	a, a
	sbc	hl, hl
	ld	(ix - 22), hl
	push	de
	pop	iy
BB17_18:
	lea	hl, iy
	ld	de, 1000
	or	a, a
	sbc	hl, de
	jp	nc, BB17_20
	ld	hl, 20
	push	hl
	ld	hl, (ix - 22)
	push	hl
	pea	ix - 16
	call	_div
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 60
	push	hl
	call	__Znwj
	push	hl
	pop	iy
	ld	(ix - 32), iy
	pop	hl
	ld	hl, (ix - 13)
	ld	bc, 81920
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 16)
	call	__imulu
	ld.sis	bc, 0
	ld	(iy + 4), c
	ld	(iy + 5), b
	ld	(iy + 10), c
	ld	(iy + 11), b
	ld	(iy + 16), c
	ld	(iy + 17), b
	ld	(iy + 22), c
	ld	(iy + 23), b
	ld	(iy + 28), c
	ld	(iy + 29), b
	ld	(iy + 34), c
	ld	(iy + 35), b
	ld	(iy + 40), c
	ld	(iy + 41), b
	ld	(iy + 46), c
	ld	(iy + 47), b
	ld	(iy + 49), de
	ld	de, 0
	ld	(iy + 52), de
	ld	(iy + 55), hl
	ld	(iy + 48), 10
	ld	(iy + 59), b
	ld	(iy + 58), 1
	ld	de, (_objects)
	ld	iy, (_numberOfObjects)
	lea	hl, iy
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	ld	bc, 3
	ld	de, (ix - 32)
	ld	(hl), de
	inc	iy
	ld	(_numberOfObjects), iy
BB17_20:
	ld	hl, (ix - 22)
	inc	hl
	ld	(ix - 22), hl
	ld	de, 400
	or	a, a
	sbc	hl, de
	jp	nz, BB17_18
BB17_21:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	push	hl
	pop	de
	push	hl
	pop	iy
	ld	(ix - 22), hl
	jr	z, BB17_23
BB17_22:
	ld	hl, (_objects)
	ld	(ix - 32), iy
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	bc, 3
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	iy, (ix - 32)
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_22
BB17_23:
	ld	hl, (_zSortedObjects)
	ld	(ix - 22), hl
	ld	iy, (_objects)
	ex	de, hl
	call	__imulu
	push	hl
	push	iy
	ld	hl, (ix - 22)
	push	hl
	call	_memcpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_objects)
	ld	de, (_numberOfObjects)
	ld	bc, __Z8xComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, (_zSortedObjects)
	ld	de, (_numberOfObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 0
	push	de
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 160
	push	hl
	ld	hl, (ix - 29)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	iy, (_cursorBackground)
	ld	(iy + 1), 1
	ld	hl, (_cursorBackground)
	ld	(hl), 1
	ld	hl, _.str.29
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 22), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 22)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.29
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 4
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.30
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 5
	push	de
	push	hl
	ld	hl, _.str.30
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB17_24:
	call	_os_GetCSC
	or	a, a
	jr	z, BB17_24
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_27:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_27
BB17_28:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB17_29:
	call	__Z10drawCursorv
BB17_30:
	call	_os_GetCSC
	dec	a
	cp	a, 56
	jr	nc, BB17_30
	ld	de, 0
	ld	e, a
	ld	hl, JTI17_1
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB17_32:
	call	__Z11selectBlockv
	jr	BB17_30
BB17_33:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 64
	jr	BB17_38
BB17_34:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 64
	jr	BB17_36
BB17_35:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, -64
BB17_36:
	push	hl
	ld	hl, -6291456
	jr	BB17_39
BB17_37:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -64
BB17_38:
	push	hl
	ld	hl, -6291456
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
BB17_39:
	push	hl
	call	__Z12rotateCameraff
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	jp	BB17_30
BB17_40:
	ld	iy, (_playerCursor+52)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	ld	de, -81920
	jr	BB17_44
BB17_42:
	ld	iy, (_playerCursor+52)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	de, 81920
BB17_44:
	add	iy, de
	ld	(_playerCursor+52), iy
	jp	BB17_29
BB17_45:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	m, BB17_153
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	m, BB17_70
	ld	a, 65
	call	__fcmp
	jp	m, BB17_97
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	m, BB17_128
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_148
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_74
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_102
	ld	bc, 7831552
	call	__fcmp
	jp	p, BB17_153
	jp	BB17_131
BB17_53:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	m, BB17_131
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	m, BB17_153
	ld	a, 65
	call	__fcmp
	jp	m, BB17_70
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	m, BB17_97
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_128
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_148
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_74
	ld	bc, 7831552
	call	__fcmp
	jp	p, BB17_131
	jp	BB17_102
BB17_61:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	m, BB17_102
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	m, BB17_131
	ld	a, 65
	call	__fcmp
	jp	m, BB17_153
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	m, BB17_70
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_97
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_128
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_148
	ld	iy, (_playerCursor+49)
	ld	bc, 7831552
	call	__fcmp
	ld	de, -8388608
	lea	hl, iy
	jp	p, BB17_103
	jp	BB17_124
BB17_69:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	p, BB17_96
BB17_70:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
BB17_71:
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	de, 81920
	jp	BB17_126
BB17_73:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	p, BB17_101
BB17_74:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	jp	BB17_124
BB17_75:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	m, BB17_128
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	m, BB17_148
	ld	a, 65
	call	__fcmp
	jp	m, BB17_74
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	m, BB17_102
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_131
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_153
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_70
	ld	bc, 7831552
	call	__fcmp
	jp	m, BB17_97
	jp	BB17_128
BB17_83:
	ld	hl, _playerCursor
	ld	(ix - 16), hl
	ld	hl, (_objects)
	ld	de, (_numberOfObjects)
	ld	bc, __Z8xComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	pea	ix - 16
	call	_bsearch
	ld	(ix - 22), hl
	ld	hl, 15
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	de, (ix - 22)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB17_107
	ld	de, (_numberOfObjects)
	jp	BB17_117
BB17_85:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	jp	m, BB17_97
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	m, BB17_128
	ld	a, 65
	call	__fcmp
	jp	m, BB17_148
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	m, BB17_74
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_102
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_131
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_153
	ld	iy, (_playerCursor+49)
	ld	bc, 7831552
	call	__fcmp
	ld	de, -8388608
	lea	hl, iy
	jp	m, BB17_71
	jr	BB17_98
BB17_93:
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	e, a
	ld	bc, -7929856
	ld	a, -62
	call	__fcmp
	ld	bc, -8388608
	jp	p, BB17_122
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	add	hl, bc
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
BB17_95:
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, bc
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	jp	BB17_151
BB17_96:
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	p, BB17_127
BB17_97:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
BB17_98:
	add	hl, de
	ld	bc, -86016
	or	a, a
	sbc	hl, bc
	jp	nc, BB17_29
	ld	hl, (_playerCursor+55)
	push	hl
	pop	bc
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	ld	de, 81920
	add	iy, de
	ld	(_playerCursor+49), iy
	ld	de, -81920
	jr	BB17_106
BB17_101:
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	p, BB17_130
BB17_102:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
BB17_103:
	add	hl, de
	ld	bc, 86017
	or	a, a
	sbc	hl, bc
	jp	c, BB17_29
	ld	hl, (_playerCursor+55)
	push	hl
	pop	bc
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	de, -81920
	add	iy, de
	ld	(_playerCursor+49), iy
	ld	de, 81920
BB17_106:
	push	bc
	pop	hl
	jp	BB17_159
BB17_107:
	ld	hl, (_objects)
	ld	(ix - 32), hl
	ld	hl, (_playerCursor+49)
	ld	(ix - 38), hl
	push	de
	pop	iy
	ld	bc, 3
	add	iy, bc
BB17_108:
	lea	bc, iy
	ld	hl, (ix - 32)
	ld	(ix - 29), de
	or	a, a
	sbc	hl, de
	ld	(ix - 35), bc
	jr	nc, BB17_110
	ld	iy, (ix - 29)
	lea	hl, iy - 3
	ld	(ix - 22), hl
	ld	iy, (iy - 3)
	ld	hl, (iy + 49)
	push	bc
	pop	iy
	ld	de, -3
	add	iy, de
	ld	de, (ix - 22)
	ld	bc, (ix - 38)
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 35)
	jr	z, BB17_108
BB17_110:
	ld	de, (_numberOfObjects)
	ld	bc, 3
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 32)
	add	hl, bc
	push	hl
	pop	bc
	ld	iy, (ix - 29)
	lea	hl, iy
	ld	(ix - 22), bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nc, BB17_117
	ld	(ix - 32), de
	ld	iy, (_playerCursor+52)
	ld	(ix - 41), iy
	ld	bc, (_playerCursor+55)
	ld	(ix - 44), bc
	ld	de, (ix - 35)
	ld	bc, (ix - 22)
BB17_112:
	ld	(ix - 29), hl
	ld	iy, (hl)
	ld	hl, (iy + 49)
	ld	bc, (ix - 38)
	or	a, a
	sbc	hl, bc
	jr	nz, BB17_116
	ld	hl, (iy + 52)
	ld	bc, (ix - 41)
	or	a, a
	sbc	hl, bc
	jr	nz, BB17_115
	ld	hl, (iy + 55)
	ld	bc, (ix - 44)
	or	a, a
	sbc	hl, bc
	jp	z, BB17_173
BB17_115:
	ld	iy, (ix - 29)
	lea	iy, iy + 3
	ex	de, hl
	ld	bc, 3
	add	hl, bc
	ex	de, hl
	lea	hl, iy
	ld	bc, (ix - 22)
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	c, BB17_112
BB17_116:
	ld	de, (ix - 32)
BB17_117:
	ex	de, hl
	ld	de, 1000
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	hl, 60
	push	hl
	call	__Znwj
	push	hl
	pop	de
	pop	hl
	ld	hl, (_playerCursor+49)
	ld	(ix - 22), hl
	ld	hl, (_playerCursor+52)
	ld	(ix - 29), hl
	ld	bc, (_playerCursor+55)
	ld	a, (_selectedObject)
	push	de
	pop	iy
	ld.sis	hl, 0
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	(iy + 10), l
	ld	(iy + 11), h
	ld	(iy + 16), l
	ld	(iy + 17), h
	ld	(iy + 22), l
	ld	(iy + 23), h
	ld	(iy + 28), l
	ld	(iy + 29), h
	ld	(iy + 34), l
	ld	(iy + 35), h
	ld	(iy + 40), l
	ld	(iy + 41), h
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld	hl, (ix - 22)
	ld	(iy + 49), hl
	ld	hl, (ix - 29)
	ld	(iy + 52), hl
	ld	(iy + 55), bc
	ld	(iy + 48), a
	ld	(iy + 59), 0
	ld	(iy + 58), 1
	ld	(ix - 19), de
	ld	(ix - 29), de
	push	de
	call	__ZN6object14generatePointsEv
	pop	hl
	ld	iy, (_objects)
	ld	de, (_numberOfObjects)
	ld	bc, 3
	push	de
	pop	hl
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	ld	(ix - 22), iy
	add	iy, de
	ld	de, -8388608
	push	bc
	pop	hl
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jp	c, BB17_139
	ld	(ix - 38), iy
	ld	de, (_playerCursor+49)
	push	bc
	pop	hl
	ld	bc, 3
	call	__imulu
	ld	(ix - 32), hl
	ld	iy, (ix - 22)
	ld	(ix - 35), de
BB17_120:
	ld	(ix - 22), iy
	ld	iy, (iy)
	ld	hl, (iy + 49)
	push	de
	pop	iy
	ld	bc, -8388608
	add	iy, bc
	add	hl, bc
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB17_140
	ld	iy, (ix - 22)
	lea	iy, iy + 3
	ld	bc, -3
	ld	hl, (ix - 32)
	add	hl, bc
	ld	(ix - 32), hl
	lea	hl, iy
	ld	de, (ix - 38)
	or	a, a
	sbc	hl, de
	ld	de, (ix - 35)
	jr	c, BB17_120
	jp	BB17_141
BB17_122:
	ld	bc, -4980736
	ld	a, -63
	call	__fcmp
	jp	p, BB17_135
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	de, -8388608
BB17_124:
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	ld	de, -81920
BB17_126:
	add	iy, de
	ld	(_playerCursor+49), iy
	jp	BB17_29
BB17_127:
	ld	a, 65
	call	__fcmp
	jp	p, BB17_147
BB17_128:
	ld	iy, (_playerCursor+55)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
BB17_129:
	ld	de, -81920
	jr	BB17_134
BB17_130:
	ld	a, 65
	call	__fcmp
	jp	p, BB17_152
BB17_131:
	ld	iy, (_playerCursor+55)
	ld	de, -8388608
	lea	hl, iy
BB17_132:
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	de, 81920
BB17_134:
	add	iy, de
	ld	(_playerCursor+55), iy
	jp	BB17_29
BB17_135:
	ld	a, 65
	call	__fcmp
	jp	p, BB17_160
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, bc
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	de, -81920
	add	iy, de
	ld	(_playerCursor+49), iy
	ld	de, 81920
	jp	BB17_158
BB17_139:
	ld	hl, (ix - 29)
	ld	iy, (ix - 22)
	ld	(iy), hl
	ld	iy, (_zSortedObjects)
	jp	BB17_145
BB17_140:
	ld	hl, (ix - 32)
	push	hl
	ld	iy, (ix - 22)
	push	iy
	pea	iy + 3
	call	_memmove
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	iy, (ix - 22)
BB17_141:
	ld	hl, (ix - 29)
	ld	(iy), hl
	ld	hl, (_zSortedObjects)
	push	hl
	pop	iy
BB17_142:
	ld	(ix - 35), hl
	pea	ix - 19
	ld	(ix - 22), iy
	push	iy
	call	__Z15distanceComparePKvS0_
	ld	(ix - 29), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	bc, 3
	ld	iy, (_zSortedObjects)
	ld	hl, (_numberOfObjects)
	ld	(ix - 32), hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	hl, -8388608
	push	hl
	pop	bc
	ld	hl, (ix - 29)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_144
	ld	iy, (ix - 22)
	lea	iy, iy + 3
	ld	hl, (ix - 35)
	ld	bc, 3
	add	hl, bc
	push	hl
	pop	bc
	lea	hl, iy
	or	a, a
	sbc	hl, de
	push	bc
	pop	hl
	ld	bc, (ix - 32)
	jr	c, BB17_142
	jr	BB17_145
BB17_144:
	ex	de, hl
	ld	de, (ix - 35)
	or	a, a
	sbc	hl, de
	push	hl
	ld	iy, (ix - 22)
	push	iy
	pea	iy + 3
	call	_memmove
	ld	iy, (ix - 22)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, (ix - 32)
BB17_145:
	ld	hl, (ix - 19)
	ld	(iy), hl
	inc	bc
	ld	(_numberOfObjects), bc
	ld	hl, (ix - 19)
	push	hl
	call	__ZN6object16generatePolygonsEv
BB17_146:
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	jp	BB17_29
BB17_147:
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	p, BB17_162
BB17_148:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
BB17_149:
	add	hl, de
	ld	bc, 86017
	or	a, a
	sbc	hl, bc
	jp	c, BB17_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, de
	or	a, a
	sbc	hl, bc
	jp	c, BB17_29
BB17_151:
	ld	hl, -81920
	jr	BB17_157
BB17_152:
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	p, BB17_166
BB17_153:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
BB17_154:
	add	hl, de
	ld	bc, -86016
	or	a, a
	sbc	hl, bc
	jp	nc, BB17_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, de
	or	a, a
	sbc	hl, bc
	jp	nc, BB17_29
BB17_156:
	ld	hl, 81920
BB17_157:
	ex	de, hl
	add	iy, de
	ld	(_playerCursor+49), iy
BB17_158:
	ld	hl, (ix - 22)
BB17_159:
	add	hl, de
	ld	(_playerCursor+55), hl
	jp	BB17_29
BB17_160:
	ld	bc, -7929856
	ld	a, 66
	call	__fcmp
	jp	p, BB17_170
	ld	iy, (_playerCursor+55)
	lea	hl, iy
	ld	de, -8388608
	jp	BB17_132
BB17_162:
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_74
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_102
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_131
	ld	iy, (_playerCursor+49)
	ld	bc, 7831552
	call	__fcmp
	ld	de, -8388608
	lea	hl, iy
	jp	m, BB17_154
	jp	BB17_71
BB17_166:
	ld	bc, -2031616
	call	__fcmp
	jp	m, BB17_70
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	m, BB17_97
	ld	bc, 4882432
	call	__fcmp
	jp	m, BB17_128
	ld	iy, (_playerCursor+49)
	ld	bc, 7831552
	call	__fcmp
	ld	de, -8388608
	lea	hl, iy
	jp	m, BB17_149
	jp	BB17_124
BB17_170:
	ld	bc, -2031616
	call	__fcmp
	jp	p, BB17_183
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, bc
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	jp	BB17_156
BB17_173:
	ld	(ix - 38), de
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	ld	de, (ix - 32)
	push	de
	push	hl
	ld	hl, (ix - 29)
	push	hl
	call	_bsearch
	push	hl
	pop	bc
	ld	hl, 15
	add	hl, sp
	ld	sp, hl
	push	bc
	pop	iy
	ld	de, 3
	add	iy, de
BB17_174:
	ld	(ix - 32), iy
	ld	iy, (_zSortedObjects)
	lea	hl, iy
	ld	(ix - 22), bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_177
	ld	iy, (ix - 22)
	lea	de, iy - 3
	ld	(ix - 35), de
	ld	hl, (ix - 29)
	push	hl
	push	de
	call	__Z15distanceComparePKvS0_
	ld	bc, (ix - 35)
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	iy, (ix - 32)
	ld	de, -3
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_174
	ld	iy, (_zSortedObjects)
BB17_177:
	ld	hl, (_numberOfObjects)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	bc, (ix - 22)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nc, BB17_248
BB17_178:
	ld	(ix - 22), bc
	ld	hl, (ix - 29)
	push	hl
	push	bc
	call	__Z15distanceComparePKvS0_
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 22)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB17_248
	ex	de, hl
	ld	iy, (hl)
	ld	de, (_playerCursor+49)
	ld	hl, (iy + 49)
	or	a, a
	sbc	hl, de
	jr	nz, BB17_182
	ld	de, (_playerCursor+52)
	ld	hl, (iy + 52)
	or	a, a
	sbc	hl, de
	jr	nz, BB17_182
	ld	de, (_playerCursor+55)
	ld	hl, (iy + 55)
	or	a, a
	sbc	hl, de
	jp	z, BB17_192
BB17_182:
	ld	bc, 3
	ld	iy, (ix - 22)
	lea	iy, iy + 3
	lea	de, iy
	ld	iy, (_zSortedObjects)
	ld	hl, (_numberOfObjects)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 22), iy
	ld	iy, (ix - 32)
	ld	bc, 3
	add	iy, bc
	push	de
	pop	hl
	ld	bc, (ix - 22)
	or	a, a
	sbc	hl, bc
	ld	(ix - 32), iy
	push	de
	pop	bc
	jp	c, BB17_178
	jp	BB17_248
BB17_183:
	ld	bc, 1933312
	ld	a, 67
	call	__fcmp
	jp	p, BB17_185
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	de, -8388608
	jp	BB17_71
BB17_185:
	ld	bc, 4882432
	call	__fcmp
	jp	p, BB17_189
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB17_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 22), hl
	add	hl, bc
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	ld	de, 81920
	add	iy, de
	ld	(_playerCursor+49), iy
	ld	de, -81920
	jp	BB17_158
BB17_189:
	ld	bc, 7831552
	call	__fcmp
	ld	de, 86017
	jp	p, BB17_191
	ld	iy, (_playerCursor+55)
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	jp	BB17_129
BB17_191:
	ld	iy, (_playerCursor+49)
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, de
	jp	c, BB17_29
	jp	BB17_95
BB17_192:
	ld	bc, 3
	ld	iy, (_zSortedObjects)
	ld	hl, (_numberOfObjects)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy
	ld	de, (ix - 32)
	or	a, a
	sbc	hl, de
	push	hl
	ld	iy, (ix - 22)
	pea	iy + 3
	push	iy
	call	_memmove
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 29)
	ld	hl, (hl)
	ld	(ix - 22), hl
	ld	iy, (_objects)
	ld	hl, (_numberOfObjects)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy
	ld	de, (ix - 38)
	or	a, a
	sbc	hl, de
	push	hl
	ld	iy, (ix - 29)
	pea	iy + 3
	push	iy
	call	_memmove
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	dec	hl
	ld	(_numberOfObjects), hl
	ld	hl, (ix - 22)
	push	hl
	call	__ZN6object12deleteObjectEv
	jp	BB17_146
BB17_193:
	ld	hl, (_sy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ), hl
	ld	hl, (_cy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ+6)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ+6), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_196
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_195:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_195
BB17_196:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_198:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_198
	jp	BB17_28
BB17_199:
	ld	hl, (_cy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ), hl
	ld	hl, (_sy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ+6)
	add	hl, de
	ld	(_cameraXYZ+6), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_202
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_201:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_201
BB17_202:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_204:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_204
	jp	BB17_28
BB17_205:
	ld	hl, (_cy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ)
	add	hl, de
	ld	(_cameraXYZ), hl
	ld	hl, (_sy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ+6)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ+6), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_208
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_207:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_207
BB17_208:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_210:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_210
	jp	BB17_28
BB17_211:
	ld	hl, (_sy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ)
	add	hl, de
	ld	(_cameraXYZ), hl
	ld	hl, (_cy)
	push	hl
	ld	hl, 163840
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cameraXYZ+6)
	add	hl, de
	ld	(_cameraXYZ+6), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_214
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_213:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_213
BB17_214:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_216:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_216
	jp	BB17_28
BB17_217:
	ld	hl, (_cameraXYZ+3)
	ld	de, -81920
	add	hl, de
	ld	(_cameraXYZ+3), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_220
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_219:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_219
BB17_220:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_222:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_222
	jp	BB17_28
BB17_223:
	ld	hl, (_sy)
	push	hl
	ld	hl, 347557
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_playerCursor+49)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ), hl
	ld	hl, (_playerCursor+52)
	ld	de, 307200
	add	hl, de
	ld	(_cameraXYZ+3), hl
	ld	hl, (_cy)
	push	hl
	ld	hl, 347557
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_playerCursor+55)
	or	a, a
	sbc	hl, de
	ld	(_cameraXYZ+6), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_226
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_225:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_225
BB17_226:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_228:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_228
	jp	BB17_28
BB17_229:
	ld	hl, (_cameraXYZ+3)
	ld	de, 81920
	add	hl, de
	ld	(_cameraXYZ+3), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB17_232
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_231:
	ld	(ix - 29), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_231
BB17_232:
	ld	hl, (_zSortedObjects)
	ld	bc, __Z15distanceComparePKvS0_
	push	bc
	ld	bc, 3
	push	bc
	push	de
	push	hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_234:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_234
	jp	BB17_28
BB17_235:
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_28
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_237:
	ld	(ix - 29), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 29)
	pop	hl
	ld	hl, (ix - 22)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_237
	jp	BB17_28
BB17_238:
	ld	a, 1
	ld	(ix - 26), a
	jr	BB17_240
BB17_239:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, (ix - 25)
	push	hl
	call	__Z4savePKc
	pop	hl
BB17_240:
	ld	de, (_numberOfObjects)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_245
	ld	hl, (_objects)
	ld	(ix - 32), hl
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 22), hl
BB17_242:
	ld	(ix - 29), iy
	lea	bc, iy
	ld	hl, (ix - 32)
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_244
	push	hl
	call	__ZdlPv
	pop	hl
	ld	hl, (_objects)
	ld	(ix - 32), hl
	ld	de, (_numberOfObjects)
BB17_244:
	ld	hl, (ix - 22)
	inc	hl
	ld	bc, 3
	ld	iy, (ix - 29)
	add	iy, bc
	ld	(ix - 22), hl
	or	a, a
	sbc	hl, de
	jr	c, BB17_242
BB17_245:
	or	a, a
	sbc	hl, hl
	ld	(_numberOfObjects), hl
	ld	a, (ix - 26)
	and	a, 1
	bit	0, a
	jp	z, BB17_6
BB17_246:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, -2
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_gfx_End
	xor	a, a
	ld	(-3132938), a
	ld	hl, -3132938
	push	hl
	pop	de
	inc	de
	ld	bc, 69089
	ldir
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
BB17_247:
	ld	hl, 1
	ld	sp, ix
	pop	ix
	ret
BB17_248:
	call	_gfx_End
	xor	a, a
	ld	(-3132938), a
	ld	hl, -3132938
	push	hl
	pop	de
	inc	de
	ld	bc, 69089
	ldir
	ld	hl, 1
	push	hl
	call	_exit
	pop	hl
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI17_0
JTI17_0:
	dl	BB17_9
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_11
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_12
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_8
	dl	BB17_13
	private	JTI17_1
JTI17_1:
	dl	BB17_193
	dl	BB17_199
	dl	BB17_205
	dl	BB17_211
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_32
	dl	BB17_30
	dl	BB17_40
	dl	BB17_42
	dl	BB17_30
	dl	BB17_30
	dl	BB17_238
	dl	BB17_30
	dl	BB17_30
	dl	BB17_45
	dl	BB17_53
	dl	BB17_61
	dl	BB17_30
	dl	BB17_33
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_69
	dl	BB17_83
	dl	BB17_73
	dl	BB17_30
	dl	BB17_34
	dl	BB17_35
	dl	BB17_217
	dl	BB17_30
	dl	BB17_85
	dl	BB17_75
	dl	BB17_93
	dl	BB17_30
	dl	BB17_37
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_223
	dl	BB17_239
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_30
	dl	BB17_235
	dl	BB17_229

	section	.text,"ax",@progbits
	public	__Z15texturePackMenuv
__Z15texturePackMenuv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 81
	ld	sp, hl
	ld	hl, 0
	ld	de, 0
	ld	bc, -1
	ld	(ix - 56), bc
	lea	bc, ix - 35
	ld	(ix - 38), bc
	ld	(ix - 35), hl
	push	de
	call	__Znaj
	ld	(ix - 47), hl
	pop	hl
	ld	hl, _.str.33
	push	hl
	ld	hl, (ix - 38)
	push	hl
	call	_ti_Detect
	push	hl
	pop	bc
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB18_8
	ld	de, _.str.125
	lea	hl, ix - 32
	ld	(ix - 59), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 41), hl
BB18_2:
	push	de
	ld	(ix - 50), bc
	push	bc
	call	_ti_Open
	ld	e, a
	ld	(ix - 44), de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	push	de
	ld	hl, 1
	push	hl
	call	_ti_SetArchiveStatus
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 44)
	push	hl
	call	_ti_GetDataPtr
	ld	(ix - 53), hl
	pop	hl
	ld	hl, (ix - 44)
	push	hl
	call	_ti_Close
	pop	hl
	ld	iy, (ix - 53)
	ld	hl, (iy + 17)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB18_6
	ld	de, (ix - 41)
	inc	de
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	iy
	ld	(ix - 53), de
	ex	de, hl
	ld	bc, 5592406
	or	a, a
	sbc	hl, bc
	ld	hl, -1
	jr	nc, BB18_5
	lea	hl, iy
BB18_5:
	push	hl
	call	__Znaj
	push	hl
	pop	de
	pop	hl
	ld	hl, (ix - 41)
	ld	bc, 3
	call	__imulu
	push	hl
	ld	hl, (ix - 47)
	push	hl
	ld	(ix - 44), de
	push	de
	call	_memcpy
	ld	hl, (ix - 47)
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, __ZdaPv
	pop	hl
	ld	hl, (ix - 50)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	push	hl
	call	__Znaj
	push	hl
	pop	iy
	pop	hl
	ld	hl, (ix - 41)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 44)
	add	hl, bc
	ld	(hl), iy
	ld	hl, (ix - 50)
	push	hl
	push	iy
	call	_strcpy
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 53)
	ld	(ix - 41), hl
	ld	hl, (ix - 44)
	ld	(ix - 47), hl
BB18_6:
	ld	hl, _.str.33
	push	hl
	ld	hl, (ix - 38)
	push	hl
	call	_ti_Detect
	push	hl
	pop	bc
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, _.str.125
	jp	nz, BB18_2
	ld	de, (ix - 41)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_11
BB18_8:
	call	_gfx_End
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.31
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.35
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.32
	push	hl
	call	_os_PutStrFull
	pop	hl
BB18_9:
	call	_os_GetCSC
	or	a, a
	jr	z, BB18_9
BB18_10:
	xor	a, a
	ld	(-3132938), a
	ld	hl, -3132938
	push	hl
	pop	de
	inc	de
	ld	bc, 69089
	ldir
	ld	hl, 1
	push	hl
	call	_exit
	pop	hl
BB18_11:
	push	de
	pop	hl
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	iy, 2796203
	ex	de, hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB18_13
	ld	(ix - 56), bc
BB18_13:
	ld	hl, (ix - 56)
	push	hl
	call	__Znaj
	pop	de
	ld	bc, (ix - 47)
	ld	(ix - 68), hl
	ld	(ix - 38), hl
	ld	de, (ix - 41)
BB18_14:
	ld	(ix - 53), de
	push	bc
	pop	hl
	ld	(ix - 50), hl
	ld	hl, (hl)
	ld	de, _.str.125
	push	de
	push	hl
	call	_ti_Open
	ld	e, a
	ld	(ix - 44), de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	push	de
	call	_ti_GetDataPtr
	pop	de
	ld	iy, (ix - 38)
	ld	(iy), hl
	ld	hl, (ix - 44)
	push	hl
	call	_ti_GetSize
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	iy, (ix - 38)
	ld	(iy + 3), de
	ld	hl, (ix - 44)
	push	hl
	call	_ti_Close
	ld	de, (ix - 53)
	ld	bc, (ix - 50)
	pop	hl
	dec	de
	ld	iy, (ix - 38)
	lea	iy, iy + 6
	ld	(ix - 38), iy
	push	bc
	pop	iy
	lea	iy, iy + 3
	lea	bc, iy
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_14
	ld	de, 1
	ld	bc, (ix - 41)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB18_17
	ld	hl, -6
	add	hl, sp
	ld	sp, hl
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, 6
	ld	hl, (ix - 68)
	ldir
	call	__Z17verifyTexturePack9packEntry
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	bit	0, a
	ld	hl, 0
	jp	z, BB18_10
	jp	BB18_142
BB18_17:
	ld	hl, 1
	push	hl
	ld	(ix - 41), bc
	call	_os_FontSelect
	pop	hl
	ld	hl, (ix - 41)
	ld	de, -6
	add	hl, de
	ld	(ix - 81), hl
	ld	hl, -2883584
	inc	hl
	ld	(ix - 72), hl
	xor	a, a
	ld	(ix - 69), a
	sbc	hl, hl
	push	hl
	pop	bc
BB18_18:
	ld	(ix - 56), bc
	ld	(ix - 50), hl
	xor	a, a
	ld	(-2883584), a
	ld	de, (ix - 72)
	ld	hl, -2883584
	ld	bc, 153599
	ldir
	ld	hl, 65535
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	hl, _.str.36
	push	hl
	call	_os_FontGetWidth
	push	hl
	pop	de
	pop	hl
	ld	hl, 320
	or	a, a
	sbc	hl, de
	ld	a, 1
	ld	c, a
	call	__ishru
	ld	de, 4
	push	de
	push	hl
	ld	hl, _.str.36
	push	hl
	call	_os_FontDrawText
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.37
	push	hl
	call	_os_FontGetWidth
	push	hl
	pop	de
	pop	hl
	ld	hl, 320
	or	a, a
	sbc	hl, de
	ld	c, 1
	call	__ishru
	ld	de, 23
	push	de
	push	hl
	ld	hl, _.str.37
	push	hl
	call	_os_FontDrawText
	ld	bc, (ix - 50)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	push	bc
	pop	hl
	ld	de, (ix - 41)
	or	a, a
	sbc	hl, de
	jp	nc, BB18_34
	ld	hl, -2857984
	ld	(ix - 62), hl
	ld	(ix - 38), bc
	ld	iy, 0
BB18_20:
	ld	(ix - 53), iy
	ld	hl, (ix - 38)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 68)
	add	iy, de
	ld	bc, (ix - 53)
	push	bc
	pop	hl
	ld	de, (ix - 56)
	or	a, a
	sbc	hl, de
	ld	a, -1
	jr	z, BB18_22
	ld	a, 0
BB18_22:
	ld	hl, (iy)
	ld	(ix - 38), hl
	ld	l, a
	rrc	l
	sbc.sis	hl, hl
	ld	e, l
	ld	d, h
	bit	0, a
	ld	hl, 65535
	ld	iy, 0
	jr	nz, BB18_24
	lea	hl, iy
BB18_24:
	ld	(ix - 75), hl
	push	bc
	pop	hl
	ld	bc, 12800
	call	__imulu
	add	hl, bc
	inc	c
	call	__ishl
	push	hl
	pop	bc
	ld	hl, -2883584
	add	hl, bc
	ld	(ix - 78), hl
BB18_25:
	lea	bc, iy
	ld	hl, (ix - 62)
	add	hl, bc
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, 2
	add	iy, bc
	lea	hl, iy
	ld	bc, 640
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_25
	ld	hl, (ix - 53)
	ld	bc, 40
	call	__imulu
	push	hl
	pop	iy
	ld	hl, 198
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	(ix - 65), iy
	lea	hl, iy
	ld	de, 160
	or	a, a
	sbc	hl, de
	jr	nc, BB18_28
	ld	bc, 38
BB18_28:
	inc	bc
	ld	(ix - 44), bc
	ld	hl, (ix - 78)
	push	hl
	pop	iy
BB18_29:
	ld	bc, 640
	add	iy, bc
	lea	de, iy
	ldir
	ld	hl, (ix - 44)
	dec	hl
	ld	(ix - 44), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nz, BB18_29
	ld	hl, (ix - 53)
	ld	de, (ix - 56)
	or	a, a
	sbc	hl, de
	ld	hl, 0
	jr	z, BB18_32
	ld	hl, 65535
BB18_32:
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	ld	hl, (ix - 75)
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	de, 44
	ld	hl, (ix - 65)
	add	hl, de
	ld	(ix - 65), hl
	ld	de, 640
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883576
	push	hl
	pop	iy
	add	iy, de
	ld	(ix - 44), iy
	ld	hl, (ix - 38)
	ld	de, 16405
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 640
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16469
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 1280
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16533
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 1920
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16597
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 2560
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16661
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 3200
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16725
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 3840
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16789
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 4480
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16853
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 5120
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16917
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 5760
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 16981
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 6400
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17045
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 7040
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17109
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 7680
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17173
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 8320
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17237
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 8960
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17301
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 9600
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17365
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 10240
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17429
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 10880
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17493
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 11520
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17557
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 12160
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17621
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 12800
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17685
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 13440
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17749
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 14080
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17813
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 14720
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17877
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 15360
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 17941
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 16000
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18005
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 16640
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18069
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 17280
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18133
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 17920
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18197
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 18560
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18261
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	iy, (ix - 44)
	ld	de, 19200
	add	iy, de
	ld	hl, (ix - 38)
	ld	de, 18325
	add	hl, de
	lea	de, iy
	ld	bc, 64
	ldir
	ld	de, 19840
	ld	hl, (ix - 44)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 38)
	lea	hl, iy
	ld	de, 18389
	add	hl, de
	push	bc
	pop	de
	ld	bc, 64
	ldir
	ld	de, 18453
	add	iy, de
	ld	hl, 32
	push	hl
	push	iy
	ld	hl, (ix - 59)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 1), 0
	ld	hl, (ix - 65)
	push	hl
	ld	hl, 40
	push	hl
	ld	hl, (ix - 59)
	push	hl
	call	_os_FontDrawText
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	iy, (ix - 53)
	inc	iy
	lea	hl, iy
	ld	bc, (ix - 50)
	add	hl, bc
	ld	(ix - 38), hl
	ld	de, 25600
	ld	hl, (ix - 62)
	add	hl, de
	ld	(ix - 62), hl
	ld	hl, (ix - 53)
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nc, BB18_34
	ld	hl, (ix - 38)
	ld	de, (ix - 41)
	or	a, a
	sbc	hl, de
	jp	c, BB18_20
BB18_34:
	xor	a, a
	ld	(ix - 38), a
BB18_35:
	ld	(ix - 50), bc
BB18_36:
	call	_os_GetCSC
	cp	a, 50
	jp	nc, BB18_132
	ld	de, 0
	ld	e, a
	ld	hl, JTI18_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB18_38:
	ld	bc, (ix - 50)
	push	bc
	pop	iy
	ld	de, (ix - 56)
	add	iy, de
	lea	hl, iy
	inc	hl
	ld	de, (ix - 41)
	or	a, a
	sbc	hl, de
	jp	nc, BB18_83
	ld	hl, (ix - 56)
	ld	de, 4
	or	a, a
	sbc	hl, de
	jp	nc, BB18_83
	lea	hl, iy
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 68)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 62), hl
	ld	de, (ix - 56)
	push	de
	pop	hl
	ld	bc, 40
	call	__imulu
	ld	(ix - 53), hl
	ex	de, hl
	ld	de, 12800
	push	de
	pop	bc
	call	__imulu
	add	hl, bc
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, -2883584
	add	iy, de
	ld	(iy), 0
	lea	hl, iy
	inc	hl
	ex	de, hl
	lea	hl, iy
	ld	bc, 639
	ldir
	lea	bc, iy
	ld	hl, 640
	ex	de, hl
	push	bc
	pop	hl
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	lea	hl, iy
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 1280
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 1920
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 2560
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 3200
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 3840
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 4480
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 5120
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 5760
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 6400
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 7040
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 7680
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 8320
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 8960
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 9600
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 10240
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 10880
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 11520
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 12160
	add	hl, de
	ld	(ix - 75), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 12800
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 75)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 13440
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 14080
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 14720
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 15360
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 16000
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 16640
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 17280
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 17920
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 18560
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 19200
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 19840
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 20480
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 21120
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 21760
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 22400
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 23040
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 23680
	add	hl, de
	ld	(ix - 65), hl
	ex	de, hl
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	lea	hl, iy
	ld	de, 24320
	add	hl, de
	ld	(ix - 44), hl
	ex	de, hl
	ld	hl, (ix - 65)
	ld	bc, 640
	ldir
	ld	de, 24960
	add	iy, de
	lea	de, iy
	ld	hl, (ix - 44)
	ld	bc, 640
	ldir
	ld	hl, 65535
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetDrawBGColor
	ld	iy, (ix - 53)
	pop	hl
	lea	hl, iy
	ld	de, 44
	add	hl, de
	ld	(ix - 44), hl
	lea	hl, iy
	ld	de, -196
	add	hl, de
	ld	de, -272
	or	a, a
	sbc	hl, de
	jp	c, BB18_52
	lea	hl, iy
	ld	de, 76
	add	hl, de
	ld	(ix - 65), hl
	ld	hl, (ix - 44)
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 44)
	jr	nc, BB18_43
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB18_43:
	add	iy, de
	ld	(ix - 53), iy
	lea	hl, iy
	ld	de, 8388564
	or	a, a
	sbc	hl, de
	ld	iy, (ix - 65)
	jr	c, BB18_45
	ld	iy, 32
BB18_45:
	ld	(ix - 65), iy
	add	iy, bc
	ld	hl, 240
	ld	(ix - 75), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 240
	or	a, a
	sbc	hl, bc
	jr	nc, BB18_47
	ld	de, (ix - 65)
BB18_47:
	ex	de, hl
	ld	bc, 252
	call	__iand
	ld	a, l
	or	a, a
	ld	iy, (ix - 53)
	jr	z, BB18_52
	ld	(ix - 65), hl
	ld	hl, (ix - 75)
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883576
	add	hl, de
	ld	(ix - 75), hl
	ld	hl, (ix - 44)
	ld	bc, -32
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 8388564
	or	a, a
	sbc	hl, bc
	jr	c, BB18_50
	ld	de, 0
BB18_50:
	ex	de, hl
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, (ix - 62)
	add	iy, de
	ld	de, 16405
	add	iy, de
	ld	hl, (ix - 65)
	ld	de, (ix - 75)
BB18_51:
	ld	(ix - 65), hl
	ld	(ix - 75), de
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	de, 640
	ld	hl, (ix - 75)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 65)
	lea	iy, iy + 64
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_51
BB18_52:
	ld	de, 18453
	ld	iy, (ix - 62)
	add	iy, de
	ld	hl, 32
	push	hl
	push	iy
	ld	hl, (ix - 59)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 1), 0
	ld	hl, (ix - 44)
	push	hl
	ld	hl, 40
	push	hl
	ld	hl, (ix - 59)
	push	hl
	call	_os_FontDrawText
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	iy, (ix - 56)
	inc	iy
	lea	hl, iy
	ld	de, (ix - 50)
	add	hl, de
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 68)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 56), hl
	ld	(ix - 62), iy
	lea	hl, iy
	ld	bc, 40
	call	__imulu
	ld	(ix - 44), hl
	ld	de, -200
	add	hl, de
	ld	de, -280
	or	a, a
	sbc	hl, de
	jp	c, BB18_63
	ld	bc, (ix - 44)
	push	bc
	pop	hl
	ld	de, 80
	add	hl, de
	ld	(ix - 53), hl
	push	bc
	pop	iy
	ld	de, -8388608
	add	iy, de
	lea	hl, iy
	ld	de, 8388569
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	jr	nc, BB18_55
	ld	de, -40
BB18_55:
	push	de
	pop	hl
	ld	bc, 40
	add	hl, bc
	ld	(ix - 65), hl
	lea	hl, iy
	ld	bc, 8388568
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 53)
	jr	c, BB18_57
	ld	hl, 40
BB18_57:
	ld	(ix - 53), hl
	ld	bc, (ix - 65)
	add	hl, bc
	ld	(ix - 78), hl
	ld	hl, 200
	or	a, a
	sbc	hl, de
	ld	(ix - 75), hl
	push	bc
	pop	hl
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	iy, -2883584
	add	iy, de
	ld	(iy), -1
	lea	hl, iy
	inc	hl
	ex	de, hl
	ld	(ix - 65), iy
	lea	hl, iy
	dec	bc
	ldir
	ld	hl, (ix - 78)
	ld	de, 240
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 75)
	jr	nc, BB18_59
	ld	hl, (ix - 53)
BB18_59:
	ld	bc, 255
	add	hl, bc
	call	__iand
	push	hl
	pop	bc
	dec	bc
	push	bc
	pop	hl
	ld	de, 239
	or	a, a
	sbc	hl, de
	jr	c, BB18_61
	ld	bc, 239
BB18_61:
	inc	bc
	ld	hl, (ix - 65)
	push	hl
	pop	iy
BB18_62:
	ld	(ix - 53), bc
	ld	bc, 640
	add	iy, bc
	lea	de, iy
	ldir
	ld	bc, (ix - 53)
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nz, BB18_62
BB18_63:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	ld	hl, 65535
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	iy, (ix - 44)
	lea	hl, iy
	ld	de, 44
	add	hl, de
	ld	(ix - 53), hl
	lea	hl, iy
	ld	de, -196
	add	hl, de
	ld	de, -272
	or	a, a
	sbc	hl, de
	jp	c, BB18_130
	lea	hl, iy
	ld	de, 76
	add	hl, de
	ld	(ix - 65), hl
	ld	hl, (ix - 53)
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 53)
	jr	nc, BB18_66
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB18_66:
	add	iy, de
	ld	(ix - 44), iy
	lea	hl, iy
	ld	de, 8388564
	or	a, a
	sbc	hl, de
	ld	iy, (ix - 65)
	jr	c, BB18_68
	ld	iy, 32
BB18_68:
	ld	(ix - 65), iy
	add	iy, bc
	ld	hl, 240
	ld	(ix - 75), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 240
	or	a, a
	sbc	hl, bc
	jr	nc, BB18_70
	ld	de, (ix - 65)
BB18_70:
	ex	de, hl
	ld	bc, 252
	call	__iand
	ld	a, l
	or	a, a
	ld	iy, (ix - 44)
	jp	z, BB18_130
	ld	(ix - 65), hl
	ld	hl, (ix - 75)
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883576
	add	hl, de
	ld	(ix - 75), hl
	ld	hl, (ix - 53)
	ld	bc, -32
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 8388564
	or	a, a
	sbc	hl, bc
	jr	c, BB18_73
	ld	de, 0
BB18_73:
	ex	de, hl
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, (ix - 56)
	add	iy, de
	ld	de, 16405
	add	iy, de
	ld	hl, (ix - 65)
	ld	de, (ix - 75)
BB18_74:
	ld	(ix - 65), hl
	ld	(ix - 75), de
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	de, 640
	ld	hl, (ix - 75)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 65)
	lea	iy, iy + 64
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_74
	jp	BB18_130
BB18_75:
	ld	bc, (ix - 50)
	push	bc
	pop	iy
	ld	de, 5
	add	iy, de
	lea	hl, iy
	ld	de, (ix - 41)
	or	a, a
	sbc	hl, de
	jp	nc, BB18_83
	jp	BB18_139
BB18_76:
	ld	de, (ix - 56)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB18_84
	or	a, a
	sbc	hl, hl
	jp	BB18_131
BB18_78:
	ld	bc, (ix - 50)
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	ccf
	sbc	a, a
	push	bc
	pop	hl
	ld	de, -5
	add	hl, de
	bit	0, a
	jr	nz, BB18_80
	push	bc
	pop	hl
BB18_80:
	bit	0, a
	ld	a, 1
	jr	nz, BB18_82
	ld	a, (ix - 38)
BB18_82:
	push	hl
	pop	bc
	ld	(ix - 38), a
BB18_83:
	ld	a, (ix - 38)
	and	a, 1
	bit	0, a
	jp	z, BB18_35
	jp	BB18_133
BB18_84:
	ld	hl, (ix - 50)
	add	hl, de
	push	de
	pop	iy
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 68)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 62), hl
	lea	hl, iy
	ld	bc, 40
	call	__imulu
	ld	(ix - 44), hl
	ld	de, -200
	add	hl, de
	ld	de, -280
	or	a, a
	sbc	hl, de
	jp	c, BB18_95
	ld	bc, (ix - 44)
	push	bc
	pop	hl
	ld	de, 80
	add	hl, de
	ld	(ix - 53), hl
	push	bc
	pop	iy
	ld	de, -8388608
	add	iy, de
	lea	hl, iy
	ld	de, 8388569
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	jr	nc, BB18_87
	ld	de, -40
BB18_87:
	push	de
	pop	hl
	ld	bc, 40
	add	hl, bc
	ld	(ix - 65), hl
	lea	hl, iy
	ld	bc, 8388568
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 53)
	jr	c, BB18_89
	ld	hl, 40
BB18_89:
	ld	(ix - 53), hl
	ld	bc, (ix - 65)
	add	hl, bc
	ld	(ix - 78), hl
	ld	hl, 200
	or	a, a
	sbc	hl, de
	ld	(ix - 75), hl
	push	bc
	pop	hl
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	iy, -2883584
	add	iy, de
	ld	(iy), 0
	lea	hl, iy
	inc	hl
	ex	de, hl
	ld	(ix - 65), iy
	lea	hl, iy
	dec	bc
	ldir
	ld	hl, (ix - 78)
	ld	de, 240
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 75)
	jr	nc, BB18_91
	ld	hl, (ix - 53)
BB18_91:
	ld	bc, 255
	add	hl, bc
	call	__iand
	push	hl
	pop	bc
	dec	bc
	push	bc
	pop	hl
	ld	de, 239
	or	a, a
	sbc	hl, de
	jr	c, BB18_93
	ld	bc, 239
BB18_93:
	inc	bc
	ld	hl, (ix - 65)
	push	hl
	pop	iy
BB18_94:
	ld	(ix - 53), bc
	ld	bc, 640
	add	iy, bc
	lea	de, iy
	ldir
	ld	bc, (ix - 53)
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nz, BB18_94
BB18_95:
	ld	hl, 65535
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	iy, (ix - 44)
	lea	hl, iy
	ld	de, 44
	add	hl, de
	ld	(ix - 53), hl
	lea	hl, iy
	ld	de, -196
	add	hl, de
	ld	de, -272
	or	a, a
	sbc	hl, de
	jp	c, BB18_107
	lea	hl, iy
	ld	de, 76
	add	hl, de
	ld	(ix - 65), hl
	ld	hl, (ix - 53)
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 53)
	jr	nc, BB18_98
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB18_98:
	add	iy, de
	ld	(ix - 44), iy
	lea	hl, iy
	ld	de, 8388564
	or	a, a
	sbc	hl, de
	ld	iy, (ix - 65)
	jr	c, BB18_100
	ld	iy, 32
BB18_100:
	ld	(ix - 65), iy
	add	iy, bc
	ld	hl, 240
	ld	(ix - 75), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 240
	or	a, a
	sbc	hl, bc
	jr	nc, BB18_102
	ld	de, (ix - 65)
BB18_102:
	ex	de, hl
	ld	bc, 252
	call	__iand
	ld	a, l
	or	a, a
	ld	iy, (ix - 44)
	jr	z, BB18_107
	ld	(ix - 65), hl
	ld	hl, (ix - 75)
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883576
	add	hl, de
	ld	(ix - 75), hl
	ld	hl, (ix - 53)
	ld	bc, -32
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 8388564
	or	a, a
	sbc	hl, bc
	jr	c, BB18_105
	ld	de, 0
BB18_105:
	ex	de, hl
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, (ix - 62)
	add	iy, de
	ld	de, 16405
	add	iy, de
	ld	hl, (ix - 65)
	ld	de, (ix - 75)
BB18_106:
	ld	(ix - 65), hl
	ld	(ix - 75), de
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	de, 640
	ld	hl, (ix - 75)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 65)
	lea	iy, iy + 64
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_106
BB18_107:
	ld	de, 18453
	ld	iy, (ix - 62)
	add	iy, de
	ld	hl, 32
	push	hl
	push	iy
	ld	hl, (ix - 59)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 1), 0
	ld	hl, (ix - 53)
	push	hl
	ld	hl, 40
	push	hl
	ld	hl, (ix - 59)
	push	hl
	call	_os_FontDrawText
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	iy, (ix - 56)
	dec	iy
	lea	hl, iy
	ld	de, (ix - 50)
	add	hl, de
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 68)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 56), hl
	ld	(ix - 62), iy
	lea	hl, iy
	ld	bc, 40
	call	__imulu
	ld	(ix - 44), hl
	ld	de, -200
	add	hl, de
	ld	de, -280
	or	a, a
	sbc	hl, de
	jp	c, BB18_118
	ld	bc, (ix - 44)
	push	bc
	pop	hl
	ld	de, 80
	add	hl, de
	ld	(ix - 53), hl
	push	bc
	pop	iy
	ld	de, -8388608
	add	iy, de
	lea	hl, iy
	ld	de, 8388569
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	jr	nc, BB18_110
	ld	de, -40
BB18_110:
	push	de
	pop	hl
	ld	bc, 40
	add	hl, bc
	ld	(ix - 65), hl
	lea	hl, iy
	ld	bc, 8388568
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 53)
	jr	c, BB18_112
	ld	hl, 40
BB18_112:
	ld	(ix - 53), hl
	ld	bc, (ix - 65)
	add	hl, bc
	ld	(ix - 78), hl
	ld	hl, 200
	or	a, a
	sbc	hl, de
	ld	(ix - 75), hl
	push	bc
	pop	hl
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	iy, -2883584
	add	iy, de
	ld	(iy), -1
	lea	hl, iy
	inc	hl
	ex	de, hl
	ld	(ix - 65), iy
	lea	hl, iy
	dec	bc
	ldir
	ld	hl, (ix - 78)
	ld	de, 240
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 75)
	jr	nc, BB18_114
	ld	hl, (ix - 53)
BB18_114:
	ld	bc, 255
	add	hl, bc
	call	__iand
	push	hl
	pop	bc
	dec	bc
	push	bc
	pop	hl
	ld	de, 239
	or	a, a
	sbc	hl, de
	jr	c, BB18_116
	ld	bc, 239
BB18_116:
	inc	bc
	ld	hl, (ix - 65)
	push	hl
	pop	iy
BB18_117:
	ld	(ix - 53), bc
	ld	bc, 640
	add	iy, bc
	lea	de, iy
	ldir
	ld	bc, (ix - 53)
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nz, BB18_117
BB18_118:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	ld	hl, 65535
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	iy, (ix - 44)
	lea	hl, iy
	ld	de, 44
	add	hl, de
	ld	(ix - 53), hl
	lea	hl, iy
	ld	de, -196
	add	hl, de
	ld	de, -272
	or	a, a
	sbc	hl, de
	jp	c, BB18_130
	lea	hl, iy
	ld	de, 76
	add	hl, de
	ld	(ix - 65), hl
	ld	hl, (ix - 53)
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 53)
	jr	nc, BB18_121
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB18_121:
	add	iy, de
	ld	(ix - 44), iy
	lea	hl, iy
	ld	de, 8388564
	or	a, a
	sbc	hl, de
	ld	iy, (ix - 65)
	jr	c, BB18_123
	ld	iy, 32
BB18_123:
	ld	(ix - 65), iy
	add	iy, bc
	ld	hl, 240
	ld	(ix - 75), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 240
	or	a, a
	sbc	hl, bc
	jr	nc, BB18_125
	ld	de, (ix - 65)
BB18_125:
	ex	de, hl
	ld	bc, 252
	call	__iand
	ld	a, l
	or	a, a
	ld	iy, (ix - 44)
	jr	z, BB18_130
	ld	(ix - 65), hl
	ld	hl, (ix - 75)
	ld	bc, 640
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883576
	add	hl, de
	ld	(ix - 75), hl
	ld	hl, (ix - 53)
	ld	bc, -32
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	ld	bc, 8388564
	or	a, a
	sbc	hl, bc
	jr	c, BB18_128
	ld	de, 0
BB18_128:
	ex	de, hl
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, (ix - 56)
	add	iy, de
	ld	de, 16405
	add	iy, de
	ld	hl, (ix - 65)
	ld	de, (ix - 75)
BB18_129:
	ld	(ix - 65), hl
	ld	(ix - 75), de
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	de, 640
	ld	hl, (ix - 75)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 65)
	lea	iy, iy + 64
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB18_129
BB18_130:
	ld	de, 18453
	ld	iy, (ix - 56)
	add	iy, de
	ld	hl, 32
	push	hl
	push	iy
	ld	hl, (ix - 59)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 1), 0
	ld	hl, (ix - 53)
	push	hl
	ld	hl, 40
	push	hl
	ld	hl, (ix - 59)
	push	hl
	call	_os_FontDrawText
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 62)
BB18_131:
	ld	(ix - 56), hl
BB18_132:
	ld	bc, (ix - 50)
	ld	a, (ix - 38)
	and	a, 1
	bit	0, a
	jp	z, BB18_35
BB18_133:
	push	bc
	pop	iy
BB18_134:
	ld	bc, (ix - 56)
BB18_135:
	ld	a, (ix - 69)
	and	a, 1
	bit	0, a
	lea	hl, iy
	jp	z, BB18_18
	jr	BB18_141
BB18_136:
	ld	hl, (ix - 50)
	ld	de, (ix - 56)
	add	hl, de
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 68)
	add	hl, de
	ld	iy, -6
	add	iy, sp
	ld	sp, iy
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ldir
	call	__Z17verifyTexturePack9packEntry
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	bit	0, a
	ld	a, 1
	jr	nz, BB18_138
	ld	a, (ix - 69)
BB18_138:
	ld	(ix - 69), a
	ld	iy, (ix - 50)
	jr	BB18_134
BB18_139:
	lea	hl, iy
	ld	de, (ix - 56)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 81)
	or	a, a
	sbc	hl, bc
	ld	(ix - 38), hl
	ex	de, hl
	ld	de, (ix - 41)
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 56)
	jr	c, BB18_135
	ld	bc, (ix - 38)
	jr	BB18_135
BB18_141:
	add	iy, bc
	lea	hl, iy
BB18_142:
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 47)
	add	hl, de
	ld	(ix - 38), hl
	ld	de, (hl)
	push	de
	call	_strlen
	pop	de
	inc	hl
	push	hl
	call	__Znaj
	pop	de
	ld	(_texturePackName), hl
	ld	iy, (ix - 38)
	ld	de, (iy)
	push	de
	push	hl
	call	_strcpy
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	de, 2
	ld	bc, (ix - 41)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	push	bc
	pop	hl
	jr	nc, BB18_144
	ld	hl, 1
BB18_144:
	ld	iy, (ix - 47)
BB18_145:
	ld	(ix - 41), hl
	ld	(ix - 38), iy
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, __ZdaPv
	pop	hl
	ld	hl, (ix - 41)
	dec	hl
	ld	iy, (ix - 38)
	lea	iy, iy + 3
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 47)
	jr	nz, BB18_145
	push	de
	call	__ZdaPv
	ld	sp, ix
	pop	ix
	ret
BB18_147:
	xor	a, a
	ld	(-3132938), a
	ld	hl, -3132938
	push	hl
	pop	de
	inc	de
	ld	bc, 69089
	ldir
	or	a, a
	sbc	hl, hl
	push	hl
	call	_exit
	pop	hl
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI18_0
JTI18_0:
	dl	BB18_36
	dl	BB18_38
	dl	BB18_78
	dl	BB18_75
	dl	BB18_76
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_136
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_147
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_75
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_38
	dl	BB18_136
	dl	BB18_76
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_78
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_132
	dl	BB18_147

	section	.text,"ax",@progbits
	public	__Z10drawCursorv
__Z10drawCursorv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 27
	ld	sp, hl
	ld	hl, _playerCursor
	push	hl
	call	__ZN6object14generatePointsEv
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_playerCursor+58)
	bit	0, a
	jp	z, BB19_88
	ld	bc, _playerCursor+2
	ld	iy, _playerCursor+6
	ld	hl, _playerCursor
	ld	de, (hl)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	(ix - 6), de
	ld	l, e
	ld	(ix - 12), hl
	push	bc
	pop	hl
	ld	hl, (hl)
	ld	(ix - 9), hl
	ld	l, h
	ld	(ix - 24), l
	rlc	l
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	(ix - 21), de
	ld	c, e
	ld	de, -8388608
	ld	iy, (ix - 12)
	add	iy, de
	push	bc
	pop	hl
	add	hl, de
	ld	(ix - 18), hl
	ld	(ix - 15), iy
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 12)
	jr	c, BB19_3
	push	bc
	pop	hl
BB19_3:
	ld	(ix - 27), hl
	ld	hl, (ix - 3)
	ld	h, (ix - 24)
	ld	(ix - 3), hl
	ld.sis	de, -32768
	ld	iy, (ix - 6)
	add.sis	iy, de
	ld	hl, (ix - 21)
	add.sis	hl, de
	ld	e, iyl
	ld	d, iyh
	or	a, a
	sbc.sis	hl, de
	ld	hl, (ix - 12)
	ld	(ix - 6), hl
	jr	c, BB19_5
	ld	hl, (ix - 27)
	ld	(ix - 6), hl
BB19_5:
	ld	hl, (ix - 3)
	ld	de, (ix - 9)
	ld	l, e
	ld	(ix - 3), hl
	ld	iy, _playerCursor+8
	ld	hl, (ix - 15)
	ld	de, (ix - 18)
	or	a, a
	sbc	hl, de
	jr	c, BB19_7
	ld	(ix - 12), bc
BB19_7:
	ld	bc, (iy)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	(ix - 21), bc
	ld	e, c
	ld	iy, (ix - 3)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 18), hl
	ld	(ix - 15), iy
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 3)
	jr	c, BB19_9
	push	de
	pop	hl
BB19_9:
	ld	(ix - 24), hl
	ld	iy, (ix - 9)
	ld.sis	hl, -32768
	ld	c, l
	ld	b, h
	add.sis	iy, bc
	ld	hl, (ix - 21)
	add.sis	hl, bc
	ld	c, iyl
	ld	b, iyh
	or	a, a
	sbc.sis	hl, bc
	ld	hl, (ix - 3)
	ld	(ix - 9), hl
	jr	c, BB19_11
	ld	hl, (ix - 24)
	ld	(ix - 9), hl
BB19_11:
	ld	iy, _playerCursor+12
	ld	hl, (ix - 15)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_13
	ld	(ix - 3), de
BB19_13:
	ld	bc, (iy)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_15
	push	de
	pop	hl
BB19_15:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_17
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_17:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_19
	ld	(ix - 12), de
BB19_19:
	ld	hl, _playerCursor+14
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_21
	push	de
	pop	hl
BB19_21:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_23
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_23:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_25
	ld	(ix - 3), de
BB19_25:
	ld	hl, _playerCursor+18
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_27
	push	de
	pop	hl
BB19_27:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_29
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_29:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_31
	ld	(ix - 12), de
BB19_31:
	ld	hl, _playerCursor+20
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_33
	push	de
	pop	hl
BB19_33:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_35
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_35:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_37
	ld	(ix - 3), de
BB19_37:
	ld	hl, _playerCursor+24
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_39
	push	de
	pop	hl
BB19_39:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_41
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_41:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_43
	ld	(ix - 12), de
BB19_43:
	ld	hl, _playerCursor+26
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_45
	push	de
	pop	hl
BB19_45:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_47
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_47:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_49
	ld	(ix - 3), de
BB19_49:
	ld	hl, _playerCursor+30
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_51
	push	de
	pop	hl
BB19_51:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_53
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_53:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_55
	ld	(ix - 12), de
BB19_55:
	ld	hl, _playerCursor+32
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_57
	push	de
	pop	hl
BB19_57:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_59
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_59:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_61
	ld	(ix - 3), de
BB19_61:
	ld	hl, _playerCursor+36
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_63
	push	de
	pop	hl
BB19_63:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_65
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_65:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_67
	ld	(ix - 12), de
BB19_67:
	ld	hl, _playerCursor+38
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_69
	push	de
	pop	hl
BB19_69:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_71
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_71:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_73
	ld	(ix - 3), de
BB19_73:
	ld	hl, _playerCursor+42
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB19_75
	push	de
	pop	hl
BB19_75:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_77
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB19_77:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_79
	ld	(ix - 12), de
BB19_79:
	ld	hl, _playerCursor+44
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB19_81
	push	de
	pop	hl
BB19_81:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB19_83
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB19_83:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB19_85
	ld	(ix - 3), de
BB19_85:
	ld	de, (ix - 12)
	dec	de
	ld	bc, (ix - 3)
	dec	bc
	ld	hl, (ix - 6)
	ld	(ix - 3), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	inc	de
	ld	hl, (ix - 9)
	ld	(ix - 6), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	inc	iy
	lea	hl, iy
	ld	(ix - 9), de
	push	de
	pop	bc
	call	__imulu
	ld	de, -8388608
	add	hl, de
	ld	de, -8323582
	or	a, a
	sbc	hl, de
	jr	nc, BB19_87
	ld	hl, (ix - 9)
	ld	a, l
	ld	hl, (_cursorBackground)
	ld	(hl), a
	ld	a, iyl
	ld	iy, (_cursorBackground)
	ld	(iy + 1), a
	ld	de, (ix - 3)
	ld	(_playerCursorX), de
	ld	bc, (ix - 6)
	ld	(_playerCursorY), bc
	ld	hl, (_cursorBackground)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB19_87:
	ld	hl, _playerCursor
	push	hl
	call	__ZN6object16generatePolygonsEv
	pop	hl
BB19_88:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11selectBlockv
__Z11selectBlockv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 21
	ld	sp, hl
	ld	l, 24
	ld	(ix - 3), hl
	xor	a, a
	ld	(ix - 6), a
	ld	l, 20
	ld	(ix - 9), hl
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	call	_shadeScreen
	ld	hl, (_cursorBackground)
	ld	(hl), 16
	ld	iy, (_cursorBackground)
	ld	(iy + 1), 16
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 156
	push	hl
	ld	hl, 176
	push	hl
	ld	hl, 42
	push	hl
	ld	hl, 72
	push	hl
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	de, 0
	ld	hl, _textures
	ld	(ix - 12), hl
	push	de
	pop	bc
BB20_1:
	ld	a, (_selectedObject)
	ld	e, a
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 15), bc
	jr	nz, BB20_3
	ld	hl, -2
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 15)
	ld	bc, 7
	call	__iand
	ld	de, 20
	push	de
	pop	bc
	call	__imulu
	ld	(ix - 18), hl
	push	hl
	pop	iy
	ld	bc, 80
	add	iy, bc
	ld	hl, (ix - 15)
	ld	a, 3
	ld	c, a
	call	__ishru
	ld	bc, 24
	call	__imulu
	ld	bc, 50
	add	hl, bc
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	jr	BB20_4
BB20_3:
	push	bc
	pop	hl
	ld	bc, 7
	call	__iand
	ld	bc, 20
	call	__imulu
	ld	(ix - 18), hl
BB20_4:
	ld	iy, (_cursorBackground)
	ld	(ix - 21), iy
	lea	de, iy + 2
	ld	hl, (ix - 12)
	ld	iy, (hl)
	ld	hl, (iy + 3)
	ld	bc, 256
	ldir
	ld	de, 82
	ld	iy, (ix - 18)
	add	iy, de
	ld	a, (ix - 6)
	ld	b, 3
	call	__bshru
	ld	hl, (ix - 3)
	ld	h, a
	ld	(ix - 3), hl
	mlt	hl
	ld	a, l
	add	a, 52
	ld	l, a
	push	hl
	push	iy
	ld	hl, (ix - 21)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, (ix - 15)
	inc	bc
	ld	iy, (ix - 12)
	lea	iy, iy + 3
	ld	(ix - 12), iy
	ld	a, (ix - 6)
	inc	a
	ld	(ix - 6), a
	push	bc
	pop	hl
	ld	de, 48
	or	a, a
	sbc	hl, de
	ld	de, 0
	jp	nz, BB20_1
	jp	BB20_6
BB20_5:
	ld	(ix - 12), a
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	and	a, 7
	ld	l, a
	ld	bc, 20
	call	__imulu
	push	hl
	pop	iy
	ld	hl, 80
	push	hl
	pop	bc
	add	iy, bc
	ex	de, hl
	ld	a, 3
	ld	c, a
	call	__ishru
	ld	de, 24
	push	de
	pop	bc
	call	__imulu
	ld	de, 50
	add	hl, de
	ld	de, 20
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	iy, (_cursorBackground)
	ld	(ix - 6), iy
	lea	de, iy + 2
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _textures
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy + 3)
	ld	bc, 256
	ldir
	ld	c, a
	and	a, 7
	ld	de, (ix - 9)
	ld	d, a
	ld	(ix - 9), de
	mlt	de
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, 82
	add	hl, de
	ld	a, c
	ld	e, 3
	ld	b, e
	call	__bshru
	ld	de, (ix - 3)
	ld	d, a
	ld	(ix - 3), de
	mlt	de
	ld	a, e
	add	a, 52
	ld	e, a
	push	de
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedObject)
	add	a, (ix - 12)
	ld	(_selectedObject), a
	ld	hl, -2
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	and	a, 7
	ld	l, a
	ld	(ix - 6), hl
	ld	bc, 20
	call	__imulu
	push	hl
	pop	iy
	ld	bc, 80
	add	iy, bc
	ex	de, hl
	ld	c, 3
	call	__ishru
	ld	bc, 24
	call	__imulu
	ld	de, 50
	add	hl, de
	ld	de, 20
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	iy, (_cursorBackground)
	ld	(ix - 12), iy
	lea	de, iy + 2
	ld	a, (_selectedObject)
	ld	hl, (ix - 6)
	ld	l, a
	ld	(ix - 6), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _textures
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy + 3)
	ld	bc, 256
	ldir
	ld	c, a
	and	a, 7
	ld	h, a
	ld	de, (ix - 9)
	ld	l, e
	mlt	hl
	ld	iy, (ix - 6)
	ex	de, hl
	ld	iyl, e
	ex	de, hl
	ld	de, 82
	add	iy, de
	ld	a, c
	ld	b, 3
	call	__bshru
	ld	h, a
	ld	de, (ix - 3)
	ld	l, e
	mlt	hl
	ld	a, l
	add	a, 52
	ld	l, a
	push	hl
	push	iy
	ld	hl, (ix - 12)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB20_6:
	call	_os_GetCSC
	dec	a
	ld	de, 0
	cp	a, 35
	jr	nc, BB20_6
	ld	e, a
	ld	hl, JTI20_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB20_8:
	ld	a, (_selectedObject)
	cp	a, 40
	ld	a, 8
	jp	c, BB20_5
	ld	a, -40
	jp	BB20_5
BB20_10:
	ld	a, (_selectedObject)
	ld	e, a
	neg
	ld	l, a
	ld	a, e
	cp	a, 47
	ld	a, 1
	jp	c, BB20_5
	ld	a, l
	jp	BB20_5
BB20_12:
	ld	a, (_selectedObject)
	cp	a, 8
	ld	a, 40
	jp	c, BB20_5
	ld	a, -8
	jp	BB20_5
BB20_14:
	ld	a, (_selectedObject)
	or	a, a
	ld	a, 47
	jp	z, BB20_5
	ld	a, -1
	jp	BB20_5
BB20_16:
	ld	hl, (_texPalette)
	ld	de, 510
	add	hl, de
	ld	hl, (hl)
	ld	iy, -1899522
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	(ix - 3), hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB20_19
	ld	de, 0
BB20_18:
	ld	(ix - 6), de
	ld	hl, (_zSortedObjects)
	ld	de, (ix - 3)
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	de, (ix - 6)
	pop	hl
	inc	de
	ld	iy, (_numberOfObjects)
	ld	bc, 3
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	push	de
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB20_18
BB20_19:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	sp, ix
	pop	ix
	jp	__Z10drawCursorv
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI20_0
JTI20_0:
	dl	BB20_8
	dl	BB20_14
	dl	BB20_10
	dl	BB20_12
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_16
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_16
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_10
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_8
	dl	BB20_6
	dl	BB20_12
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_6
	dl	BB20_14

	section	.text,"ax",@progbits
	public	__Z13drawSelectioni
__Z13drawSelectioni:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 12
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	and	a, 7
	ld	l, a
	ld	bc, 20
	call	__imulu
	push	hl
	pop	iy
	ld	bc, 80
	add	iy, bc
	ex	de, hl
	ld	c, 3
	call	__ishru
	ld	bc, 24
	call	__imulu
	ld	de, 50
	add	hl, de
	ld	de, 20
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	iy, (_cursorBackground)
	ld	(ix - 3), iy
	lea	de, iy + 2
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _textures
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy + 3)
	ld	bc, 256
	ldir
	ld	c, a
	and	a, 7
	ld	e, 20
	ld	d, a
	ld	(ix - 6), de
	mlt	de
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, 82
	add	hl, de
	ld	a, c
	ld	b, 3
	call	__bshru
	ld	e, 24
	ld	d, a
	ld	(ix - 9), de
	mlt	de
	ld	a, e
	add	a, 52
	ld	e, a
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedObject)
	ld	l, (ix + 6)
	add	a, l
	ld	(_selectedObject), a
	ld	hl, -2
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_selectedObject)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	and	a, 7
	ld	l, a
	ld	(ix - 3), hl
	ld	bc, 20
	call	__imulu
	push	hl
	pop	iy
	ld	bc, 80
	add	iy, bc
	ex	de, hl
	ld	c, 3
	call	__ishru
	ld	bc, 24
	call	__imulu
	ld	de, 50
	add	hl, de
	ld	de, 20
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	iy, (_cursorBackground)
	ld	(ix - 12), iy
	lea	de, iy + 2
	ld	a, (_selectedObject)
	ld	hl, (ix - 3)
	ld	l, a
	ld	(ix - 3), hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _textures
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy + 3)
	ld	bc, 256
	ldir
	ld	c, a
	and	a, 7
	ld	hl, (ix - 6)
	ld	h, a
	mlt	hl
	ld	iy, (ix - 3)
	ex	de, hl
	ld	iyl, e
	ex	de, hl
	ld	de, 82
	add	iy, de
	ld	a, c
	ld	b, 3
	call	__bshru
	ld	hl, (ix - 9)
	ld	h, a
	mlt	hl
	ld	a, l
	add	a, 52
	ld	l, a
	push	hl
	push	iy
	ld	hl, (ix - 12)
	push	hl
	call	_gfx_Sprite_NoClip
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z17verifyTexturePack9packEntry
__Z17verifyTexturePack9packEntry:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 13
	ld	sp, hl
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.38
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	de, (ix + 6)
	ld	hl, _.str.33
	push	hl
	push	de
	call	_strcmp
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB22_8
	xor	a, a
	ld	iy, (ix + 6)
	ld	hl, (iy + 17)
	ld.sis	de, 3
	sbc.sis	hl, de
	jp	nz, BB22_10
	ld	bc, (ix + 9)
	push	bc
	pop	de
	add	iy, de
	ld	de, (iy - 4)
	ld	l, (iy - 1)
	push	bc
	pop	iy
	ld	(ix - 4), l
	ld	bc, -4
	add	iy, bc
	ld	bc, -8388608
	lea	hl, iy
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jp	c, BB22_13
	ld	(ix - 13), de
	ld	d, -1
	ld	bc, -1
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
BB22_4:
	ld	(ix - 7), bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 10), hl
	push	bc
	pop	hl
	ld	e, d
	ld	bc, 255
	xor	a, a
	call	__land
	ld	bc, (ix - 10)
	call	__lxor
	ld	c, 2
	call	__ishl
	push	hl
	pop	bc
	lea	hl, iy
	ld	iy, _crc32_tab
	add	iy, bc
	ld	bc, (iy)
	ld	(ix - 10), bc
	ld	e, (iy + 3)
	push	hl
	pop	iy
	ld	bc, (ix - 7)
	ld	a, d
	ld	l, 8
	call	__lshru
	ld	hl, (ix - 10)
	call	__lxor
	push	hl
	pop	bc
	ld	d, e
	ld	hl, (ix - 3)
	dec	hl
	inc	iy
	ld	(ix - 3), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB22_4
	push	bc
	pop	hl
	ld	e, d
	call	__lnot
	push	hl
	pop	bc
	ld	a, e
	ld	de, (ix - 13)
	ex	de, hl
	ld	e, (ix - 4)
	call	__lcmpu
	jp	z, BB22_14
BB22_6:
	call	_gfx_End
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.31
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.41
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.32
	push	hl
	call	_os_PutStrFull
	pop	hl
BB22_7:
	call	_os_GetCSC
	or	a, a
	jr	z, BB22_7
	jr	BB22_12
BB22_8:
	call	_gfx_End
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.31
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.39
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.32
	push	hl
	call	_os_PutStrFull
	pop	hl
BB22_9:
	call	_os_GetCSC
	or	a, a
	jr	z, BB22_9
	jr	BB22_12
BB22_10:
	call	_gfx_End
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.31
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.40
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.32
	push	hl
	call	_os_PutStrFull
	pop	hl
BB22_11:
	call	_os_GetCSC
	or	a, a
	jr	z, BB22_11
BB22_12:
	xor	a, a
	ld	sp, ix
	pop	ix
	ret
BB22_13:
	ld	bc, 0
	ex	de, hl
	ld	e, (ix - 4)
	call	__lcmpu
	jp	nz, BB22_6
BB22_14:
	ld	a, 1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9getBufferv
__Z9getBufferv:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10moveCursorh
__Z10moveCursorh:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	a, (ix + 6)
	ld	de, 0
	cp	a, 10
	jp	nc, BB24_30
	ld	bc, -81920
	ld	e, a
	ld	hl, JTI24_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB24_2:
	ld	iy, (_playerCursor+52)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB24_29
	ld	de, 81920
	add	iy, de
	ld	(_playerCursor+52), iy
	jp	BB24_29
BB24_4:
	ld	iy, (_playerCursor+52)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB24_29
	add	iy, bc
	ld	(_playerCursor+52), iy
	jp	BB24_29
BB24_6:
	ld	iy, (_playerCursor+55)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB24_29
	ld	de, 81920
	add	iy, de
	ld	(_playerCursor+55), iy
	jp	BB24_29
BB24_8:
	ld	iy, (_playerCursor+55)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB24_29
	add	iy, bc
	ld	(_playerCursor+55), iy
	jp	BB24_29
BB24_10:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB24_29
	ld	de, 81920
	add	iy, de
	ld	(_playerCursor+49), iy
	jp	BB24_29
BB24_12:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB24_29
	add	iy, bc
	ld	(_playerCursor+49), iy
	jp	BB24_29
BB24_14:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jp	c, BB24_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 3), hl
	ld	de, -8388608
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB24_29
	add	iy, bc
	ld	(_playerCursor+49), iy
	ld	de, 81920
	jp	BB24_27
BB24_17:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jp	nc, BB24_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 3), hl
	ld	de, -8388608
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jr	c, BB24_29
	ld	de, 81920
	add	iy, de
	jr	BB24_23
BB24_20:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jr	c, BB24_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 3), hl
	ld	de, -8388608
	add	hl, de
	ld	de, 86017
	or	a, a
	sbc	hl, de
	jr	c, BB24_29
	add	iy, bc
BB24_23:
	ld	(_playerCursor+49), iy
	ld	hl, (ix - 3)
	add	hl, bc
	jr	BB24_28
BB24_24:
	ld	iy, (_playerCursor+49)
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	ld	de, -86016
	or	a, a
	sbc	hl, de
	jr	nc, BB24_29
	ld	hl, (_playerCursor+55)
	ld	(ix - 3), hl
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, de
	jr	nc, BB24_29
	ld	hl, 81920
	ex	de, hl
	add	iy, de
	ld	(_playerCursor+49), iy
BB24_27:
	ld	hl, (ix - 3)
	add	hl, de
BB24_28:
	ld	(_playerCursor+55), hl
BB24_29:
	call	__Z10drawCursorv
BB24_30:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI24_0
JTI24_0:
	dl	BB24_2
	dl	BB24_4
	dl	BB24_6
	dl	BB24_8
	dl	BB24_10
	dl	BB24_12
	dl	BB24_14
	dl	BB24_17
	dl	BB24_24
	dl	BB24_20

	section	.text,"ax",@progbits
	public	__Z10drawBufferv
__Z10drawBufferv:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12redrawScreenv
__Z12redrawScreenv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	de, 0
	ld	bc, 3
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB26_3
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 3), hl
BB26_2:
	ld	hl, (_objects)
	ld	(ix - 6), iy
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	bc, 3
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	iy, (ix - 6)
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jr	c, BB26_2
BB26_3:
	ld	iy, (_zSortedObjects)
	ld	hl, __Z15distanceComparePKvS0_
	push	hl
	push	bc
	push	de
	push	iy
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	ld	iy, 0
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB26_6
	ld	(ix - 3), iy
BB26_5:
	ld	(ix - 6), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 6)
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jr	c, BB26_5
BB26_6:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	sp, ix
	pop	ix
	jp	__Z10drawCursorv
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16texturePackErrorPKc
__Z16texturePackErrorPKc:
	push	ix
	ld	ix, 0
	add	ix, sp
	call	_gfx_End
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.31
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, _.str.32
	push	hl
	call	_os_PutStrFull
	pop	hl
BB27_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB27_1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15fontPrintStringPKct
__Z15fontPrintStringPKct:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 6)
	push	hl
	call	_os_FontGetWidth
	push	hl
	pop	de
	pop	hl
	ld	hl, 320
	or	a, a
	sbc	hl, de
	ld	c, 1
	call	__ishru
	ld	a, (ix + 9)
	ld	e, a
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_os_FontDrawText
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z24drawTexturePackSelectionP11texturePackib
__Z24drawTexturePackSelectionP11texturePackib:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 56
	ld	sp, hl
	ld	hl, (ix + 9)
	ld	a, (ix + 12)
	ld	iy, 40
	ld	de, 0
	ld	bc, 65535
	ld	(ix - 41), bc
	lea	bc, iy
	call	__imulu
	ld	(ix - 35), hl
	ld	l, a
	ld	c, 15
	call	__sshl
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	add.sis	iy, iy
	sbc.sis	hl, hl
	ld	c, l
	ld	b, h
	bit	0, a
	jr	nz, BB29_2
	ld	hl, 65535
	ex	de, hl
BB29_2:
	ld	(ix - 44), de
	ld	de, -200
	bit	0, a
	jr	nz, BB29_4
	or	a, a
	sbc	hl, hl
	ld	(ix - 41), hl
BB29_4:
	ld	hl, (ix - 35)
	add	hl, de
	ld	de, -280
	or	a, a
	sbc	hl, de
	jp	c, BB29_17
	ld	(ix - 47), bc
	ld	de, 80
	ld	bc, (ix - 35)
	push	bc
	pop	hl
	add	hl, de
	ld	(ix - 38), hl
	push	bc
	pop	iy
	ld	de, -8388608
	add	iy, de
	ld	de, 8388569
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB29_7
	ld	bc, -40
BB29_7:
	push	bc
	pop	hl
	ld	de, 40
	add	hl, de
	ld	(ix - 56), hl
	lea	hl, iy
	ld	de, 8388568
	or	a, a
	sbc	hl, de
	jr	c, BB29_9
	ld	hl, 40
	ld	(ix - 38), hl
BB29_9:
	ld	hl, (ix - 38)
	ld	de, (ix - 56)
	add	hl, de
	ld	(ix - 53), hl
	ld	hl, 200
	or	a, a
	sbc	hl, bc
	ld	(ix - 50), hl
	ld	bc, 640
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	ld	hl, -2883584
	add	hl, de
	ld	iy, 0
BB29_10:
	lea	bc, iy
	push	hl
	pop	de
	add	hl, bc
	ld	bc, (ix - 47)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	bc, 2
	add	iy, bc
	lea	hl, iy
	ld	bc, 640
	or	a, a
	sbc	hl, bc
	ex	de, hl
	jr	nz, BB29_10
	push	hl
	pop	iy
	ld	hl, (ix - 53)
	ld	de, 240
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 50)
	jr	nc, BB29_13
	ld	hl, (ix - 38)
BB29_13:
	ld	bc, 255
	add	hl, bc
	call	__iand
	push	hl
	pop	bc
	dec	bc
	ld	de, 239
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	c, BB29_15
	ld	bc, 239
BB29_15:
	inc	bc
	lea	hl, iy
BB29_16:
	ld	(ix - 38), bc
	ld	de, 640
	add	iy, de
	lea	de, iy
	ld	bc, 640
	ldir
	ld	bc, (ix - 38)
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	nz, BB29_16
BB29_17:
	lea	hl, ix - 32
	ld	(ix - 38), hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_SetDrawFGColor
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	iy, (ix - 35)
	lea	hl, iy
	ld	de, 44
	add	hl, de
	ld	(ix - 41), hl
	lea	hl, iy
	ld	de, -196
	add	hl, de
	ld	de, -272
	or	a, a
	sbc	hl, de
	jp	c, BB29_29
	ld	de, 76
	lea	hl, iy
	add	hl, de
	ld	(ix - 44), hl
	ld	bc, (ix - 41)
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	ld	(ix - 47), bc
	jr	nc, BB29_20
	or	a, a
	sbc	hl, hl
	ld	(ix - 47), hl
BB29_20:
	ld	de, 240
	ld	bc, -8388608
	add	iy, bc
	ld	bc, 8388564
	ld	(ix - 35), iy
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	iy, (ix - 44)
	jr	c, BB29_22
	ld	iy, 32
BB29_22:
	ld	(ix - 44), iy
	ld	bc, (ix - 47)
	add	iy, bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	lea	hl, iy
	ld	de, 240
	or	a, a
	sbc	hl, de
	jr	nc, BB29_24
	ld	bc, (ix - 44)
BB29_24:
	push	bc
	pop	hl
	ld	bc, 252
	call	__iand
	ld	a, l
	or	a, a
	ld	de, (ix - 35)
	jr	z, BB29_29
	ld	(ix - 44), hl
	ld	iy, -2883576
	ld	de, -32
	ld	bc, 640
	ld	hl, (ix - 47)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 47), iy
	ld	hl, (ix - 41)
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 35)
	ld	bc, 8388564
	or	a, a
	sbc	hl, bc
	jr	c, BB29_27
	ld	de, 0
BB29_27:
	ld	c, 1
	ex	de, hl
	call	__ishl
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, 16405
	add	iy, de
	ld	de, (ix - 44)
	ld	bc, (ix - 47)
BB29_28:
	ld	(ix - 44), de
	push	bc
	pop	de
	ld	(ix - 47), de
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	de, (ix - 44)
	ld	bc, 640
	ld	hl, (ix - 47)
	add	hl, bc
	push	hl
	pop	bc
	lea	iy, iy + 64
	dec	de
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB29_28
BB29_29:
	ld	de, 18453
	ld	hl, (ix + 6)
	add	hl, de
	ld	de, 32
	push	de
	push	hl
	ld	hl, (ix - 38)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 1), 0
	ld	hl, (ix - 41)
	push	hl
	ld	hl, 40
	push	hl
	ld	hl, (ix - 38)
	push	hl
	call	_os_FontDrawText
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z19printStringCenteredPKci
__Z19printStringCenteredPKci:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_PrintStringXY
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z30printStringAndMoveDownCenteredPKc
__Z30printStringAndMoveDownCenteredPKc:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object16generatePolygonsEv
__ZN6object16generatePolygonsEv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 96
	ld	sp, hl
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jp	z, BB32_29
	ld	hl, __ZL12cubePolygons
	ld	bc, 60
	lea	iy, ix - 60
	lea	de, ix - 66
	ld	(ix - 96), de
	ld	(ix - 81), iy
	lea	de, iy
	ldir
	ld	bc, 0
BB32_2:
	push	bc
	pop	de
	ld	(ix - 84), de
	ld	hl, (ix - 81)
	add	hl, de
	ld	(ix - 87), hl
	ld	iy, (hl)
	ld	(ix - 75), iy
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	de, 6
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	add	iy, de
	ld	bc, (iy)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	bc, (iy + 2)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, c
	ld	(ix - 72), hl
	ld	hl, (iy + 4)
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	(ix - 78), bc
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 75)
	ld	l, (iy + 1)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	add	iy, bc
	ld	bc, (iy)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, c
	add	hl, de
	ld	(ix - 69), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	de, (ix - 72)
	add	hl, de
	ld	(ix - 72), hl
	ld	bc, (iy + 4)
	ld	de, 0
	ex	de, hl
	ld	l, c
	ld	h, b
	ld	de, (ix - 78)
	add	hl, de
	ld	(ix - 78), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 75)
	ld	l, (iy + 2)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	c, e
	ld	hl, (ix - 69)
	add	hl, bc
	ld	(ix - 69), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	c, e
	ld	hl, (ix - 72)
	add	hl, bc
	ld	(ix - 72), hl
	ld	hl, (iy + 4)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	hl, (ix - 78)
	add	hl, de
	ld	(ix - 78), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 75)
	ld	l, (iy + 3)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	c, e
	ld	hl, (ix - 69)
	add	hl, bc
	ld	(ix - 69), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	c, e
	ld	hl, (ix - 72)
	add	hl, bc
	ld	(ix - 72), hl
	ld	hl, (iy + 4)
	ld	iy, 0
	lea	de, iy
	ld	e, l
	ld	d, h
	ld	iy, (ix - 78)
	add	iy, de
	ld	hl, (ix - 69)
	ld	bc, 4
	call	__idivs
	ld	(ix - 69), hl
	ld	hl, (ix - 72)
	call	__idivs
	push	hl
	pop	de
	lea	hl, iy
	ld	c, 2
	call	__ishru
	ld	iy, (ix - 87)
	ld	bc, (ix - 69)
	ld	(iy + 6), c
	ld	(iy + 7), b
	ld	(iy + 8), e
	ld	(iy + 9), d
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	de, 10
	ld	hl, (ix - 84)
	add	hl, de
	push	hl
	pop	bc
	ld	de, 60
	or	a, a
	sbc	hl, de
	jp	nz, BB32_2
	ld	hl, __Z8zComparePKvS0_
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, 6
	push	hl
	ld	hl, (ix - 81)
	push	hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 69), hl
	call	_qsort
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
BB32_4:
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	de, (ix - 69)
	ld	iy, (ix - 81)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 72), hl
	ld	a, (iy + 3)
	ld	(ix - 84), a
	ld	de, (iy + 4)
	ld	hl, (iy + 6)
	ld	(ix - 90), hl
	ld	hl, (iy + 8)
	ld	(ix - 78), hl
	ld	l, e
	ld	h, d
	ld	c, 3
	call	__sshru
	ld	(ix - 75), hl
	ld	iy, (ix + 6)
	bit	0, (iy + 59)
	jp	nz, BB32_26
	ld	l, e
	ld	h, d
	ld.sis	de, 12
	or	a, a
	sbc.sis	hl, de
	jp	c, BB32_27
	ld	de, (ix - 90)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	(ix - 93), hl
	ld	hl, (ix - 78)
	ld	c, h
	ld	a, c
	rlc	a
	sbc	hl, hl
	ld	(ix - 87), hl
	ld	l, e
	ld	h, d
	ld.sis	de, 320
	or	a, a
	sbc.sis	hl, de
	jr	nc, BB32_10
	ld	hl, (ix - 78)
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld.sis	hl, -32768
	ld	e, l
	ld	d, h
	add.sis	iy, de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	or	a, a
	sbc.sis	hl, de
	jr	c, BB32_10
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, -32528
	or	a, a
	sbc.sis	hl, de
	jr	nc, BB32_10
	ld	hl, (ix - 78)
	push	hl
	ld	hl, (ix - 93)
	push	hl
	ld	(ix - 90), c
	call	_gfx_GetPixel
	ld	c, (ix - 90)
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	d, 0
	ld	hl, (ix - 75)
	or	a, a
	sbc.sis	hl, de
	jp	c, BB32_26
BB32_10:
	ld	de, (ix - 87)
	ld	d, c
	ld	hl, (ix - 78)
	ld	e, l
	ld	(ix - 87), de
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 72)
	ld	l, (iy)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	add	iy, bc
	ld	bc, (iy)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, c
	ld	bc, 3
	call	__imulu
	ld	de, (ix - 93)
	add	hl, de
	ld	(ix - 78), hl
	ld	iy, (iy + 2)
	ld	a, iyh
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 87)
	add	iy, de
	ld	hl, (ix - 78)
	ld	de, 1280
	or	a, a
	sbc	hl, de
	jr	nc, BB32_14
	lea	bc, iy
	ld	hl, -8388608
	ex	de, hl
	add	iy, de
	ld	(ix - 90), iy
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB32_14
	ld	hl, (ix - 90)
	ld	de, -8387648
	or	a, a
	sbc	hl, de
	jr	nc, BB32_14
	push	bc
	pop	hl
	ld	c, 2
	call	__ishru
	push	hl
	pop	de
	ld	hl, (ix - 78)
	call	__ishru
	push	de
	push	hl
	call	_gfx_GetPixel
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	d, 0
	ld	hl, (ix - 75)
	or	a, a
	sbc.sis	hl, de
	jp	c, BB32_26
BB32_14:
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 72)
	ld	l, (iy + 1)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	bc, 3
	call	__imulu
	ld	de, (ix - 93)
	add	hl, de
	ld	(ix - 78), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 87)
	add	iy, de
	ld	hl, (ix - 78)
	ld	de, 1280
	or	a, a
	sbc	hl, de
	jr	nc, BB32_18
	lea	bc, iy
	ld	hl, -8388608
	ex	de, hl
	add	iy, de
	ld	(ix - 90), iy
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB32_18
	ld	hl, (ix - 90)
	ld	de, -8387648
	or	a, a
	sbc	hl, de
	jr	nc, BB32_18
	push	bc
	pop	hl
	ld	c, 2
	call	__ishru
	push	hl
	pop	de
	ld	hl, (ix - 78)
	call	__ishru
	push	de
	push	hl
	call	_gfx_GetPixel
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	d, 0
	ld	hl, (ix - 75)
	or	a, a
	sbc.sis	hl, de
	jp	c, BB32_26
BB32_18:
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 72)
	ld	l, (iy + 2)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	bc, 3
	call	__imulu
	ld	de, (ix - 93)
	add	hl, de
	ld	(ix - 78), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 87)
	add	iy, de
	ld	hl, (ix - 78)
	ld	de, 1280
	or	a, a
	sbc	hl, de
	jr	nc, BB32_22
	lea	bc, iy
	ld	hl, -8388608
	ex	de, hl
	add	iy, de
	ld	(ix - 90), iy
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB32_22
	ld	hl, (ix - 90)
	ld	de, -8387648
	or	a, a
	sbc	hl, de
	jr	nc, BB32_22
	push	bc
	pop	hl
	ld	c, 2
	call	__ishru
	push	hl
	pop	de
	ld	hl, (ix - 78)
	call	__ishru
	push	de
	push	hl
	call	_gfx_GetPixel
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	d, 0
	ld	hl, (ix - 75)
	or	a, a
	sbc.sis	hl, de
	jp	c, BB32_26
BB32_22:
	ld	iy, (ix - 72)
	or	a, a
	sbc	hl, hl
	ld	l, (iy + 3)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	bc, 3
	call	__imulu
	ld	de, (ix - 93)
	add	hl, de
	ld	(ix - 72), hl
	ld	de, (iy + 2)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 87)
	add	iy, de
	ld	hl, (ix - 72)
	ld	de, 1280
	or	a, a
	sbc	hl, de
	jr	nc, BB32_27
	lea	bc, iy
	ld	hl, -8388608
	ex	de, hl
	add	iy, de
	ld	(ix - 78), iy
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB32_27
	ld	hl, (ix - 78)
	ld	de, -8387648
	or	a, a
	sbc	hl, de
	jr	nc, BB32_27
	push	bc
	pop	hl
	ld	c, 2
	call	__ishru
	push	hl
	pop	de
	ld	hl, (ix - 72)
	call	__ishru
	push	de
	push	hl
	call	_gfx_GetPixel
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	d, 0
	ld	hl, (ix - 75)
	or	a, a
	sbc.sis	hl, de
	jr	nc, BB32_27
BB32_26:
	ld	hl, (ix + 6)
	ld	(ix - 66), hl
	ld	hl, (ix - 75)
	ld	(ix - 63), l
	ld	(ix - 62), h
	ld	a, (ix - 84)
	ld	(ix - 61), a
	ld	hl, -6
	add	hl, sp
	ld	sp, hl
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	hl, (ix - 96)
	ld	bc, 6
	ldir
	call	__Z13renderPolygon18transformedPolygon
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB32_27:
	ld	hl, (ix - 69)
	ld	de, 10
	add	hl, de
	ld	(ix - 69), hl
	ld	de, 60
	or	a, a
	sbc	hl, de
	jp	nz, BB32_4
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB32_29:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8zComparePKvS0_
__Z8zComparePKvS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	iy, (ix + 6)
	ld	bc, (iy + 4)
	ld	de, 0
	push	de
	pop	hl
	ld	l, c
	ld	h, b
	ld	iy, (ix + 9)
	ld	bc, (iy + 4)
	ld	e, c
	ld	d, b
	or	a, a
	sbc	hl, de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z13renderPolygon18transformedPolygon
__Z13renderPolygon18transformedPolygon:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 55
	ld	sp, hl
	ld	iy, __ZL12cubePolygons
	ld	l, 0
	ld	(ix - 27), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 21), hl
	ld	a, (ix + 11)
	ld	(ix - 36), a
	ld	l, a
	ld	(ix - 33), hl
	ld	bc, 10
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	iy, (iy)
	ld	(ix - 3), iy
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 6
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 6), hl
	ld	hl, (iy + 2)
	ld	(ix - 24), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 1)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 18), hl
	ld	hl, (iy + 2)
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 2)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 15), hl
	ld	hl, (iy + 2)
	ld	(ix - 12), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 30), hl
	ld	hl, (iy + 2)
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 48)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _textures
	add	hl, de
	ld	iy, (hl)
	ld	hl, (ix - 33)
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy
	add	hl, de
	ld	iy, (ix + 6)
	bit	0, (iy + 59)
	jp	nz, BB34_3
	ld	(ix - 33), hl
	ld	iy, (ix - 30)
	ld.sis	de, 318
	ld	hl, (ix - 6)
	ld	c, e
	ld	b, d
	or	a, a
	sbc.sis	hl, de
	jp	c, BB34_4
	ld	a, 1
	jp	BB34_5
BB34_3:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, (ix - 6)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	(ix - 6), hl
	ld	de, (ix - 24)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, e
	ld	(ix - 21), iy
	ld	de, (ix - 18)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	b, a
	ld	c, e
	ld	(ix - 18), bc
	ld	de, (ix - 9)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	(ix - 24), hl
	push	hl
	push	bc
	push	iy
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_Line
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	de, (ix - 15)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	push	hl
	pop	bc
	ld	(ix - 9), bc
	ld	de, (ix - 12)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	(ix - 12), hl
	push	hl
	push	bc
	ld	hl, (ix - 24)
	push	hl
	ld	hl, (ix - 18)
	push	hl
	call	_gfx_Line
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	de, (ix - 30)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	push	hl
	pop	bc
	ld	(ix - 15), bc
	ld	de, (ix - 3)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	ld	(ix - 3), hl
	push	hl
	push	bc
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_gfx_Line
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_gfx_Line
	ld	hl, 12
	jp	BB34_39
BB34_4:
	ld.sis	de, 239
	ld	hl, (ix - 24)
	or	a, a
	sbc.sis	hl, de
	ccf
	sbc	a, a
	ld	e, a
	ld	hl, (ix - 18)
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
	ld	e, a
	ld	hl, (ix - 9)
	ld.sis	bc, 239
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
	ld	e, a
	ld	hl, (ix - 15)
	ld.sis	bc, 318
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
	ld	e, a
	ld	hl, (ix - 12)
	ld.sis	bc, 239
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
	ld	e, a
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 318
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
	ld	e, a
	ld	hl, (ix - 3)
	ld.sis	bc, 239
	or	a, a
	sbc.sis	hl, bc
	ccf
	sbc	a, a
	ld	l, a
	ld	a, e
	or	a, l
BB34_5:
	ld	(ix - 40), a
	ld	a, (ix - 36)
	cp	a, 2
	ld	e, -1
	ld	c, 0
	ld	l, e
	jp	nz, BB34_18
	cp	a, 5
	jp	nz, BB34_19
BB34_7:
	ld	a, l
	or	a, e
	bit	0, a
	jr	z, BB34_9
BB34_8:
	ld	l, 126
	ld	(ix - 27), hl
BB34_9:
	ld	de, 0
	ld	hl, (ix - 33)
	ld	hl, (hl)
	ld	(ix - 39), hl
	push	de
	pop	hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	push	de
	pop	bc
	push	de
	pop	iy
	ld	de, (ix - 6)
	ld	c, e
	ld	b, d
	ld	(ix - 46), bc
	or	a, a
	sbc	hl, bc
	ld	a, 12
	ld	c, a
	call	__ishl
	ld	(ix - 30), hl
	lea	hl, iy
	ld	bc, (ix - 3)
	ld	l, c
	ld	h, b
	lea	de, iy
	ld	bc, (ix - 24)
	ld	e, c
	ld	d, b
	ld	(ix - 49), de
	or	a, a
	sbc	hl, de
	ld	c, a
	call	__ishl
	ld	(ix - 33), hl
	lea	hl, iy
	ld	bc, (ix - 15)
	ld	l, c
	ld	h, b
	lea	de, iy
	ld	bc, (ix - 18)
	ld	e, c
	ld	d, b
	ld	(ix - 52), de
	or	a, a
	sbc	hl, de
	ld	c, a
	call	__ishl
	ld	(ix - 24), hl
	lea	de, iy
	push	de
	pop	hl
	ld	bc, (ix - 12)
	ld	l, c
	ld	h, b
	ld	bc, (ix - 9)
	ld	e, c
	ld	d, b
	ld	(ix - 18), de
	or	a, a
	sbc	hl, de
	ld	c, a
	call	__ishl
	ld	(ix - 36), hl
	ld	de, (ix - 30)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 3), hl
	ld	de, (ix - 33)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 30)
	jr	c, BB34_11
	ld	hl, (ix - 33)
BB34_11:
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	call	_fp_to_int
	ld	(ix - 3), hl
	pop	hl
	ld	de, (ix - 24)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 6), hl
	ld	de, (ix - 36)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 24)
	jr	c, BB34_13
	ld	hl, (ix - 36)
BB34_13:
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, -8388608
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix - 6)
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB34_15
	ld	bc, (ix - 6)
BB34_15:
	ld	(ix - 3), bc
	push	bc
	pop	hl
	ld	a, 12
	ld	c, a
	call	__ishl
	ld	de, 4096
	add	hl, de
	push	hl
	push	de
	call	_fp_div
	ld	(ix - 15), hl
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	c, 4
	call	__ishl
	dec	hl
	ld	(ix - 43), hl
	ld	hl, (ix - 46)
	ld	c, 12
	call	__ishl
	ld	(ix - 6), hl
	ld	hl, (ix - 52)
	call	__ishl
	ld	(ix - 12), hl
	ld	hl, (ix - 49)
	call	__ishl
	ld	(ix - 9), hl
	ld	hl, (ix - 18)
	call	__ishl
	ld	(ix - 18), hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 30)
	push	hl
	call	_fp_mul
	ld	(ix - 30), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 33)
	push	hl
	call	_fp_mul
	ld	(ix - 33), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	call	_fp_mul
	ld	(ix - 24), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 36)
	push	hl
	call	_fp_mul
	ld	(ix - 36), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 9)
	ld	(ix - 15), hl
	bit	0, (ix - 40)
	jr	z, BB34_20
	ld	de, (ix - 3)
	push	de
	pop	hl
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB34_22
	ld	hl, (ix - 6)
	jp	BB34_36
BB34_18:
	ld	l, c
	cp	a, 5
	jp	z, BB34_7
BB34_19:
	ld	e, c
	ld	a, l
	or	a, e
	bit	0, a
	jp	nz, BB34_8
	jp	BB34_9
BB34_20:
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, de
	push	bc
	pop	hl
	jp	nc, BB34_33
	ld	hl, (ix - 6)
	jp	BB34_37
BB34_22:
	inc	de
BB34_23:
	ld	hl, (ix - 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), de
	jr	nc, BB34_25
	ld	hl, (ix - 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB34_27
	jp	BB34_32
BB34_25:
	ld	hl, (ix - 6)
	ld	de, 1306625
	or	a, a
	sbc	hl, de
	ld	de, (ix - 3)
	jr	c, BB34_27
	ld	hl, (ix - 12)
	add	hl, bc
	ld	de, -7081983
	or	a, a
	sbc	hl, de
	ld	de, (ix - 3)
	jp	nc, BB34_32
BB34_27:
	ld	hl, (ix - 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB34_29
	ld	hl, (ix - 18)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB34_31
	jp	BB34_32
BB34_29:
	ld	hl, (ix - 9)
	ld	de, 978945
	or	a, a
	sbc	hl, de
	ld	de, (ix - 3)
	jr	c, BB34_31
	ld	hl, (ix - 18)
	add	hl, bc
	ld	de, -7409663
	or	a, a
	sbc	hl, de
	ld	de, (ix - 3)
	jr	nc, BB34_32
BB34_31:
	ld	hl, (ix - 6)
	push	hl
	call	_fp_to_int
	ld	(ix - 46), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_to_int
	ld	(ix - 49), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	ld	(ix - 52), hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	call	_fp_to_int
	ld	(ix - 55), hl
	pop	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_to_int_floor
	pop	de
	ld	c, 4
	call	__ishl
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 27)
	push	de
	push	hl
	ld	hl, (ix - 55)
	push	hl
	ld	hl, (ix - 52)
	push	hl
	ld	hl, (ix - 49)
	push	hl
	ld	hl, (ix - 46)
	push	hl
	call	_drawTextureLineNewA
	ld	de, (ix - 3)
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
BB34_32:
	ld	bc, (ix - 30)
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	hl, (ix - 12)
	ld	bc, (ix - 24)
	add	hl, bc
	ld	(ix - 12), hl
	ld	bc, (ix - 33)
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 9), hl
	ld	hl, (ix - 18)
	ld	bc, (ix - 36)
	add	hl, bc
	ld	(ix - 18), hl
	ld	hl, (ix - 21)
	ld	bc, (ix - 43)
	add	hl, bc
	ld	bc, -8388608
	ld	(ix - 21), hl
	dec	de
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB34_23
	jp	BB34_35
BB34_33:
	inc	hl
BB34_34:
	ld	(ix - 3), hl
	ld	hl, (ix - 6)
	push	hl
	call	_fp_to_int
	ld	(ix - 46), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_to_int
	ld	(ix - 49), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	ld	(ix - 52), hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	call	_fp_to_int
	ld	(ix - 55), hl
	pop	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_to_int_floor
	pop	de
	ld	c, 4
	call	__ishl
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 27)
	push	de
	push	hl
	ld	hl, (ix - 55)
	push	hl
	ld	hl, (ix - 52)
	push	hl
	ld	hl, (ix - 49)
	push	hl
	ld	hl, (ix - 46)
	push	hl
	call	_drawTextureLineNewA_NoClip
	ld	hl, (ix - 3)
	ld	iy, 21
	add	iy, sp
	ld	sp, iy
	ld	bc, (ix - 9)
	ld	de, (ix - 30)
	ld	iy, (ix - 6)
	add	iy, de
	ld	(ix - 6), iy
	ld	de, (ix - 24)
	ld	iy, (ix - 12)
	add	iy, de
	ld	(ix - 12), iy
	ld	de, (ix - 33)
	push	bc
	pop	iy
	add	iy, de
	ld	(ix - 9), iy
	ld	de, (ix - 36)
	ld	iy, (ix - 18)
	add	iy, de
	ld	(ix - 18), iy
	ld	de, (ix - 43)
	ld	iy, (ix - 21)
	add	iy, de
	ld	(ix - 21), iy
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB34_34
BB34_35:
	bit	0, (ix - 40)
	ld	hl, (ix - 6)
	jr	z, BB34_37
BB34_36:
	push	hl
	call	_fp_to_int
	ld	(ix - 3), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	ld	(ix - 9), hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	call	_fp_to_int
	pop	de
	ld	de, 240
	ld	iy, (ix - 39)
	add	iy, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 27)
	push	de
	push	iy
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_drawTextureLineNewA
	jr	BB34_38
BB34_37:
	push	hl
	call	_fp_to_int
	ld	(ix - 3), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	ld	(ix - 9), hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	call	_fp_to_int
	pop	de
	ld	de, 240
	ld	iy, (ix - 39)
	add	iy, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 27)
	push	de
	push	iy
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_drawTextureLineNewA_NoClip
BB34_38:
	ld	hl, 21
BB34_39:
	add	hl, sp
	ld	sp, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object12deleteObjectEv
__ZN6object12deleteObjectEv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 30
	ld	sp, hl
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jp	z, BB35_123
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix + 6)
	lea	hl, iy
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	(ix - 6), bc
	ld	e, c
	lea	bc, iy
	ld	hl, (iy + 2)
	ld	(ix - 9), hl
	ld	l, h
	ld	(ix - 18), l
	rlc	l
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	bc, (iy + 6)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	(ix - 15), bc
	ld	l, c
	ld	bc, -8388608
	push	de
	pop	iy
	add	iy, bc
	ld	(ix - 24), hl
	add	hl, bc
	ld	(ix - 21), hl
	ld	(ix - 12), iy
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	push	de
	pop	hl
	jr	c, BB35_3
	ld	hl, (ix - 24)
BB35_3:
	ld	(ix - 27), hl
	ld	hl, (ix - 3)
	ld	h, (ix - 18)
	ld	(ix - 3), hl
	ld.sis	bc, -32768
	ld	iy, (ix - 6)
	add.sis	iy, bc
	ld	hl, (ix - 15)
	add.sis	hl, bc
	ld	c, iyl
	ld	b, iyh
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 6), de
	jr	c, BB35_5
	ld	hl, (ix - 27)
	ld	(ix - 6), hl
BB35_5:
	ld	hl, (ix - 9)
	ld	bc, (ix - 3)
	ld	c, l
	ld	(ix - 3), bc
	ld	hl, (ix - 12)
	ld	bc, (ix - 21)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_7
	ld	de, (ix - 24)
BB35_7:
	ld	(ix - 12), de
	ld	iy, (ix + 6)
	ld	bc, (iy + 8)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	(ix - 21), bc
	ld	e, c
	ld	iy, (ix - 3)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 18), hl
	ld	(ix - 15), iy
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 3)
	jr	c, BB35_9
	push	de
	pop	hl
BB35_9:
	ld	(ix - 24), hl
	ld	iy, (ix - 9)
	ld.sis	hl, -32768
	ld	c, l
	ld	b, h
	add.sis	iy, bc
	ld	hl, (ix - 21)
	add.sis	hl, bc
	ld	c, iyl
	ld	b, iyh
	or	a, a
	sbc.sis	hl, bc
	ld	iy, (ix - 3)
	ld	(ix - 9), iy
	jr	c, BB35_11
	ld	hl, (ix - 24)
	ld	(ix - 9), hl
BB35_11:
	ld	hl, (ix - 15)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_13
	push	de
	pop	iy
BB35_13:
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	ld	bc, (iy + 12)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_15
	push	de
	pop	hl
BB35_15:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_17
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_17:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_19
	ld	(ix - 12), de
BB35_19:
	ld	iy, (ix + 6)
	ld	bc, (iy + 14)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_21
	push	de
	pop	hl
BB35_21:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_23
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_23:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_25
	ld	(ix - 3), de
BB35_25:
	ld	iy, (ix + 6)
	ld	bc, (iy + 18)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_27
	push	de
	pop	hl
BB35_27:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_29
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_29:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_31
	ld	(ix - 12), de
BB35_31:
	ld	iy, (ix + 6)
	ld	bc, (iy + 20)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_33
	push	de
	pop	hl
BB35_33:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_35
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_35:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_37
	ld	(ix - 3), de
BB35_37:
	ld	iy, (ix + 6)
	ld	bc, (iy + 24)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_39
	push	de
	pop	hl
BB35_39:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_41
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_41:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_43
	ld	(ix - 12), de
BB35_43:
	ld	iy, (ix + 6)
	ld	bc, (iy + 26)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_45
	push	de
	pop	hl
BB35_45:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_47
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_47:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_49
	ld	(ix - 3), de
BB35_49:
	ld	iy, (ix + 6)
	ld	bc, (iy + 30)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_51
	push	de
	pop	hl
BB35_51:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_53
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_53:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_55
	ld	(ix - 12), de
BB35_55:
	ld	iy, (ix + 6)
	ld	bc, (iy + 32)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_57
	push	de
	pop	hl
BB35_57:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_59
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_59:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_61
	ld	(ix - 3), de
BB35_61:
	ld	iy, (ix + 6)
	ld	bc, (iy + 36)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_63
	push	de
	pop	hl
BB35_63:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_65
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_65:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_67
	ld	(ix - 12), de
BB35_67:
	ld	iy, (ix + 6)
	ld	bc, (iy + 38)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_69
	push	de
	pop	hl
BB35_69:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_71
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_71:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_73
	ld	(ix - 3), de
BB35_73:
	ld	iy, (ix + 6)
	ld	bc, (iy + 42)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 6)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 6)
	jr	c, BB35_75
	push	de
	pop	hl
BB35_75:
	ld	(ix - 18), hl
	ld	iy, (ix - 12)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_77
	ld	hl, (ix - 18)
	ld	(ix - 6), hl
BB35_77:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_79
	ld	(ix - 12), de
BB35_79:
	ld	iy, (ix + 6)
	ld	bc, (iy + 44)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	d, a
	ld	e, c
	ld	iy, (ix - 9)
	ld	hl, -8388608
	push	hl
	pop	bc
	add	iy, bc
	push	de
	pop	hl
	add	hl, bc
	ld	(ix - 15), hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	c, BB35_81
	push	de
	pop	hl
BB35_81:
	ld	(ix - 18), hl
	ld	iy, (ix - 3)
	ld	bc, -8388608
	add	iy, bc
	ld	hl, (ix - 15)
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_83
	ld	hl, (ix - 18)
	ld	(ix - 9), hl
BB35_83:
	lea	hl, iy
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	ld	iy, (ix - 3)
	jr	c, BB35_85
	push	de
	pop	iy
BB35_85:
	ld	hl, (ix - 12)
	dec	hl
	ld	(ix - 12), hl
	ld	hl, (ix - 6)
	inc	hl
	dec	iy
	ld	(ix - 3), iy
	ld	bc, (ix - 9)
	inc	bc
	ld	(ix - 6), hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	(ix - 9), bc
	push	bc
	pop	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	(ix - 18), hl
	push	hl
	ld	hl, (ix - 15)
	push	hl
	push	iy
	ld	hl, (ix - 12)
	push	hl
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	_gfx_FillRectangle
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	de, (_numberOfObjects)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, 0
	jp	z, BB35_122
	ld	hl, (_zSortedObjects)
	ld	(ix - 30), hl
	lea	bc, iy
BB35_87:
	ld	(ix - 27), bc
	lea	bc, iy
	ld	hl, (ix - 30)
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 15), hl
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	ld	(ix - 24), iy
	ld	(ix - 21), de
	jp	z, BB35_121
	ld	hl, (ix - 15)
	ld	bc, (hl)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 12)
	ld	de, -8388608
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	ld	(ix - 18), bc
	or	a, a
	sbc	hl, bc
	jr	c, BB35_92
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_92
	ld	iy, (ix - 15)
	ld	bc, (iy + 2)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_92
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_92:
	ld	iy, (ix - 15)
	ld	bc, (iy + 6)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_96
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_96
	ld	iy, (ix - 15)
	ld	bc, (iy + 8)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_96
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_96:
	ld	iy, (ix - 15)
	ld	bc, (iy + 12)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_100
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_100
	ld	iy, (ix - 15)
	ld	bc, (iy + 14)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_100
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_100:
	ld	iy, (ix - 15)
	ld	bc, (iy + 18)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_104
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_104
	ld	iy, (ix - 15)
	ld	bc, (iy + 20)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_104
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_104:
	ld	iy, (ix - 15)
	ld	bc, (iy + 24)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_108
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_108
	ld	iy, (ix - 15)
	ld	bc, (iy + 26)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_108
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_108:
	ld	iy, (ix - 15)
	ld	bc, (iy + 30)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_112
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_112
	ld	iy, (ix - 15)
	ld	bc, (iy + 32)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_112
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB35_120
BB35_112:
	ld	iy, (ix - 15)
	ld	bc, (iy + 36)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_116
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_116
	ld	iy, (ix - 15)
	ld	bc, (iy + 38)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_116
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	nc, BB35_120
BB35_116:
	ld	iy, (ix - 15)
	ld	bc, (iy + 42)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	add	iy, de
	lea	hl, iy
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	c, BB35_121
	ld	hl, (ix - 6)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_121
	ld	iy, (ix - 15)
	ld	bc, (iy + 44)
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyh, a
	ld	iyl, c
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_121
	ld	hl, (ix - 9)
	add	hl, de
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB35_121
BB35_120:
	ld	hl, (ix - 15)
	push	hl
	call	__ZN6object16generatePolygonsEv
	pop	hl
	ld	hl, (_zSortedObjects)
	ld	(ix - 30), hl
	ld	hl, (_numberOfObjects)
	ld	(ix - 21), hl
BB35_121:
	ld	bc, (ix - 27)
	inc	bc
	ld	iy, (ix - 24)
	ld	de, 3
	add	iy, de
	push	bc
	pop	hl
	ld	de, (ix - 21)
	or	a, a
	sbc	hl, de
	jp	c, BB35_87
BB35_122:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	__ZdlPv
	pop	hl
BB35_123:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object14generatePointsEv
__ZN6object14generatePointsEv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 75
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	bc, 81920
	ld	(iy + 58), c
	ld	de, (_cameraXYZ)
	ld	hl, (iy + 49)
	sbc	hl, de
	ld	(ix - 6), hl
	add	hl, bc
	ld	(ix - 27), hl
	ld	de, (_cameraXYZ+3)
	ld	hl, (iy + 52)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	ld	de, -81920
	add	hl, de
	ld	(ix - 24), hl
	ld	de, (_cameraXYZ+6)
	ld	hl, (iy + 55)
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	add	hl, bc
	ld	(ix - 21), hl
	ld	hl, (_angleX)
	ld	a, (_angleX+3)
	ld	e, a
	ld	bc, 3407872
	ld	a, 66
	call	__fcmp
	jp	m, BB36_2
	ld	de, -8388608
	ld	hl, (ix - 3)
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jp	nc, BB36_4
BB36_2:
	ld	hl, (ix - 6)
	push	hl
	call	_fp_to_int
	ld	(ix - 12), hl
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 12)
	call	__imulu
	ld	(ix - 15), hl
	ld	hl, (ix - 3)
	push	hl
	call	_fp_to_int
	ld	(ix - 12), hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 12)
	call	__imulu
	ld	(ix - 12), hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	ld	(ix - 18), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 18)
	call	__imulu
	ld	iy, (ix - 12)
	ld	de, (ix - 15)
	add	iy, de
	lea	de, iy
	ld	(ix - 30), hl
	ld	(ix - 36), de
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	c, l
	ld	b, h
	pop	hl
	ld.sis	de, 2001
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	jr	c, BB36_5
	ld	iy, (ix + 6)
	ld	(iy + 4), c
	ld	(iy + 5), b
BB36_4:
	ld	sp, ix
	pop	ix
	ret
BB36_5:
	ld	(ix - 51), bc
	ld	hl, (_cy)
	ld	de, (ix - 9)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 39), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_sy)
	ld	de, (ix - 6)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	(ix - 45), hl
	ld	de, (ix - 39)
	add	hl, de
	ld	(ix - 33), hl
	ld	de, (_sx)
	or	a, a
	sbc	hl, hl
	sbc	hl, de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 18), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cx)
	ld	de, (ix - 33)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 18)
	add	hl, de
	ld	de, -8388608
	ld	(ix - 42), hl
	add	hl, de
	ld	de, 8306689
	ld	(ix - 54), hl
	or	a, a
	sbc	hl, de
	jp	c, BB36_4
	ld	hl, (_cy)
	ld	de, (ix - 6)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 48), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_sy)
	ld	de, (ix - 9)
	push	de
	push	hl
	call	_fp_mul
	push	hl
	pop	de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 48)
	ld	(ix - 75), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	hl, (ix - 42)
	ld	bc, 81920
	add	hl, bc
	ld	(ix - 6), hl
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ld	(ix - 57), de
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	de
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	jp	c, BB36_4
	ld	hl, (ix - 27)
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 27)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 6)
	call	__imulu
	ld	(ix - 69), hl
	ld	hl, (ix - 24)
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 24)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 6)
	call	__imulu
	ld	(ix - 72), hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_to_int
	pop	de
	ld	bc, (ix - 6)
	call	__imulu
	ld	(ix - 6), hl
	ld	hl, (_cy)
	ld	de, (ix - 27)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 60), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_sy)
	ld	de, (ix - 27)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 63), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cx)
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 27), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cx)
	ld	de, (ix - 24)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 9), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	de, (_sx)
	or	a, a
	sbc	hl, hl
	sbc	hl, de
	ld	de, (ix - 24)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 24), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cy)
	ld	de, (ix - 21)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 3), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_sy)
	ld	de, (ix - 21)
	push	de
	push	hl
	call	_fp_mul
	ld	(ix - 66), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (_sx)
	ld	de, (ix - 33)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 27)
	add	hl, de
	ld	(ix - 21), hl
	ld	de, -8388607
	ld	hl, (ix - 54)
	or	a, a
	sbc	hl, de
	jr	c, BB36_10
	ld	de, (ix - 21)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 54), hl
	ld	hl, (ix - 42)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, -8388608
	ld	iy, (ix - 54)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_10
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
BB36_10:
	ld	hl, (ix - 42)
	push	hl
	ld	hl, 701963
	push	hl
	call	_fp_div
	push	hl
	pop	de
	ld	(ix - 54), de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 57)
	push	hl
	push	de
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 42), hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 54)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 42)
	ld	(iy), e
	ld	(iy + 1), d
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (ix - 51)
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	hl, (_sx)
	ld	de, (ix - 33)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 9)
	add	hl, de
	ld	(ix - 42), hl
	ld	hl, (_cx)
	ld	de, (ix - 33)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 24)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jr	nz, BB36_14
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_14
	ld	de, (ix - 42)
	push	de
	pop	hl
	ld	(ix - 21), bc
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 33), hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	bc, (ix - 21)
	ld	de, -8388608
	ld	iy, (ix - 33)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_14
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
	ld	bc, (ix - 21)
BB36_14:
	push	bc
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 21), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 72)
	ld	de, (ix - 15)
	add	hl, de
	ld	(ix - 51), hl
	ld	de, (ix - 30)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 15), hl
	pop	hl
	ld	hl, (ix - 57)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 33), hl
	ld	hl, (ix - 42)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 33)
	ld	(iy + 18), e
	ld	(iy + 19), d
	ld	(iy + 20), l
	ld	(iy + 21), h
	ld	hl, (ix - 15)
	ld	(iy + 22), l
	ld	(iy + 23), h
	ld	hl, (ix - 60)
	ld	de, (ix - 75)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	hl, (ix - 63)
	ld	de, (ix - 39)
	add	hl, de
	ld	(ix - 21), hl
	ld	de, (_sx)
	push	hl
	push	de
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 27)
	add	hl, de
	ld	(ix - 39), hl
	ld	hl, (_cx)
	ld	de, (ix - 21)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 18)
	add	hl, de
	ld	(ix - 33), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 58)
	ld	de, (ix - 15)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 57), hl
	bit	0, a
	jr	nz, BB36_19
	ld	hl, (ix - 33)
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_19
	ld	hl, (ix - 33)
	ld	de, (ix - 57)
	or	a, a
	sbc	hl, de
	jr	c, BB36_19
	ld	de, (ix - 39)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 42), hl
	ld	hl, (ix - 33)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, -8388608
	ld	iy, (ix - 42)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_19
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
BB36_19:
	ld	hl, (ix - 33)
	push	hl
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 33), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 69)
	ld	de, (ix - 12)
	add	hl, de
	ld	(ix - 42), hl
	ld	de, (ix - 30)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 12), hl
	pop	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 33)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 54), hl
	ld	hl, (ix - 39)
	push	hl
	ld	hl, (ix - 33)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 54)
	ld	(iy + 6), e
	ld	(iy + 7), d
	ld	(iy + 8), l
	ld	(iy + 9), h
	ld	hl, (ix - 12)
	ld	(iy + 10), l
	ld	(iy + 11), h
	ld	hl, (_sx)
	ld	de, (ix - 21)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 9)
	add	hl, de
	ld	(ix - 33), hl
	ld	hl, (_cx)
	ld	de, (ix - 21)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 24)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jr	nz, BB36_24
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_24
	push	bc
	pop	hl
	ld	de, (ix - 57)
	or	a, a
	sbc	hl, de
	jr	c, BB36_24
	ld	de, (ix - 33)
	push	de
	pop	hl
	ld	(ix - 12), bc
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 21), hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	bc, (ix - 12)
	ld	de, -8388608
	ld	iy, (ix - 21)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_24
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
	ld	bc, (ix - 12)
BB36_24:
	push	bc
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 12), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	de, (ix - 69)
	ld	hl, (ix - 72)
	add	hl, de
	ld	(ix - 39), hl
	ld	de, (ix - 30)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 21), hl
	pop	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 15), hl
	ld	hl, (ix - 33)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 15)
	ld	(iy + 12), e
	ld	(iy + 13), d
	ld	(iy + 14), l
	ld	(iy + 15), h
	ld	hl, (ix - 21)
	ld	(iy + 16), l
	ld	(iy + 17), h
	ld	hl, (ix - 48)
	ld	de, (ix - 66)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix - 3)
	ld	de, (ix - 45)
	add	hl, de
	ld	(ix - 15), hl
	ld	de, (_sx)
	push	hl
	push	de
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 27)
	add	hl, de
	ld	(ix - 30), hl
	ld	hl, (_cx)
	ld	de, (ix - 15)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 18)
	add	hl, de
	ld	(ix - 21), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 58)
	ld	de, (ix - 12)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 45), hl
	bit	0, a
	jr	nz, BB36_29
	ld	hl, (ix - 21)
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_29
	ld	hl, (ix - 21)
	ld	de, (ix - 45)
	or	a, a
	sbc	hl, de
	jr	c, BB36_29
	ld	de, (ix - 30)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 33), hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, -8388608
	ld	iy, (ix - 33)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_29
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
BB36_29:
	ld	hl, (ix - 21)
	push	hl
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 21), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 6)
	ld	de, (ix - 36)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 33), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 36), hl
	ld	hl, (ix - 30)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 36)
	ld	(iy + 24), e
	ld	(iy + 25), d
	ld	(iy + 26), l
	ld	(iy + 27), h
	ld	hl, (ix - 33)
	ld	(iy + 28), l
	ld	(iy + 29), h
	ld	hl, (_sx)
	ld	de, (ix - 15)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 9)
	add	hl, de
	ld	(ix - 21), hl
	ld	hl, (_cx)
	ld	de, (ix - 15)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 24)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jr	nz, BB36_34
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_34
	push	bc
	pop	hl
	ld	de, (ix - 45)
	or	a, a
	sbc	hl, de
	jr	c, BB36_34
	ld	de, (ix - 21)
	push	de
	pop	hl
	ld	(ix - 15), bc
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 30), hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	bc, (ix - 15)
	ld	de, -8388608
	ld	iy, (ix - 30)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_34
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
	ld	bc, (ix - 15)
BB36_34:
	push	bc
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 15), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 6)
	ld	de, (ix - 51)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 30), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 12)
	ld	(iy + 42), e
	ld	(iy + 43), d
	ld	(iy + 44), l
	ld	(iy + 45), h
	ld	hl, (ix - 30)
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld	hl, (ix - 60)
	ld	de, (ix - 66)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix - 3)
	ld	de, (ix - 63)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, (_sx)
	push	hl
	push	de
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 27)
	add	hl, de
	ld	(ix - 21), hl
	ld	hl, (_cx)
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 18)
	add	hl, de
	ld	(ix - 15), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 58)
	ld	de, (ix - 12)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 30), hl
	bit	0, a
	jr	nz, BB36_39
	ld	hl, (ix - 15)
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_39
	ld	hl, (ix - 15)
	ld	de, (ix - 30)
	or	a, a
	sbc	hl, de
	jr	c, BB36_39
	ld	de, (ix - 21)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 18), hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, -8388608
	ld	iy, (ix - 18)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_39
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
BB36_39:
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 15), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 6)
	ld	de, (ix - 42)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 18), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 27), hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 27)
	ld	(iy + 30), e
	ld	(iy + 31), d
	ld	(iy + 32), l
	ld	(iy + 33), h
	ld	hl, (ix - 18)
	ld	(iy + 34), l
	ld	(iy + 35), h
	ld	hl, (_sx)
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 9)
	add	hl, de
	ld	(ix - 9), hl
	ld	hl, (_cx)
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 24)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	bit	0, (iy + 58)
	jr	nz, BB36_44
	push	bc
	pop	hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB36_44
	push	bc
	pop	hl
	ld	de, (ix - 30)
	or	a, a
	sbc	hl, de
	jr	c, BB36_44
	ld	de, (ix - 9)
	push	de
	pop	hl
	ld	(ix - 3), bc
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 15), hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 2868
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ld	bc, (ix - 3)
	ld	de, -8388608
	ld	iy, (ix - 15)
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	c, BB36_44
	ld	iy, (ix + 6)
	ld	(iy + 58), 1
	ld	bc, (ix - 3)
BB36_44:
	push	bc
	ld	hl, 701963
	push	hl
	call	_fp_div
	ld	(ix - 3), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 6)
	ld	de, (ix - 39)
	add	hl, de
	push	hl
	call	_approx_sqrt_a
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	pop	de
	ld.sis	de, 160
	add.sis	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fp_mul
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld.sis	hl, 120
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, (ix - 12)
	ld	(iy + 36), e
	ld	(iy + 37), d
	ld	(iy + 38), l
	ld	(iy + 39), h
	ld	hl, (ix - 6)
	ld	(iy + 40), l
	ld	(iy + 41), h
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object6moveByE7Fixed24S0_S0_
__ZN6object6moveByE7Fixed24S0_S0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy + 49)
	add	hl, de
	ld	(iy + 49), hl
	ld	de, (ix + 12)
	ld	hl, (iy + 52)
	add	hl, de
	ld	(iy + 52), hl
	ld	de, (ix + 15)
	ld	hl, (iy + 55)
	add	hl, de
	ld	(iy + 55), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object6moveToE7Fixed24S0_S0_
__ZN6object6moveToE7Fixed24S0_S0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	iy, (ix + 6)
	lea	bc, ix + 9
	lea	hl, ix + 12
	ld	(ix - 6), hl
	lea	hl, ix + 15
	ld	(ix - 3), hl
	lea	de, iy + 49
	push	bc
	pop	hl
	ld	a, (hl)
	ex	de, hl
	ld	(hl), a
	ld	a, (ix + 10)
	ld	(iy + 50), a
	ld	a, (ix + 11)
	ld	(iy + 51), a
	lea	de, iy + 52
	ld	hl, (ix - 6)
	ld	a, (hl)
	ex	de, hl
	ld	(hl), a
	ld	a, (ix + 13)
	ld	(iy + 53), a
	ld	a, (ix + 14)
	ld	(iy + 54), a
	lea	de, iy + 55
	ld	hl, (ix - 3)
	ld	a, (hl)
	ex	de, hl
	ld	(hl), a
	ld	a, (ix + 16)
	ld	(iy + 56), a
	ld	a, (ix + 17)
	ld	(iy + 57), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__ZN6object11getDistanceEv
__ZN6object11getDistanceEv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 9
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 4)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB39_2
	ld	hl, (iy + 49)
	ld	de, (iy + 52)
	ld	(ix - 9), de
	ld	de, (iy + 55)
	ld	(ix - 6), de
	ld	de, (_cameraXYZ)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 3), hl
	pop	hl
	ld	de, (_cameraXYZ+3)
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 9), hl
	pop	hl
	ld	de, (_cameraXYZ+6)
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	call	__imulu
	ld	(ix - 3), hl
	ld	bc, (ix - 9)
	push	bc
	pop	hl
	call	__imulu
	push	hl
	pop	iy
	ld	bc, (ix - 3)
	add	iy, bc
	push	de
	pop	hl
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	iy
	call	_approx_sqrt_a
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 4), l
	ld	(iy + 5), h
BB39_2:
	ld	de, 0
	ld	e, l
	ld	d, h
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16getPointDistance5point
__Z16getPointDistance5point:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	de, (_cameraXYZ)
	ld	hl, (ix + 6)
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 3), hl
	pop	hl
	ld	de, (_cameraXYZ+3)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 6), hl
	pop	hl
	ld	de, (_cameraXYZ+6)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	call	__imulu
	ld	(ix - 3), hl
	ld	bc, (ix - 6)
	push	bc
	pop	hl
	call	__imulu
	push	hl
	pop	iy
	ld	bc, (ix - 3)
	add	iy, bc
	push	de
	pop	hl
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	iy
	call	_approx_sqrt_a
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15distanceComparePKvS0_
__Z15distanceComparePKvS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 15
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	scf
	sbc	hl, hl
	ld	bc, (iy)
	push	de
	pop	iy
	ld	de, (iy)
	push	bc
	pop	iy
	ld	(ix - 6), iy
	ld	b, (iy + 48)
	push	de
	pop	iy
	ld	(ix - 3), iy
	ld	c, (iy + 48)
	ld	a, b
	cp	a, 15
	jr	z, BB41_2
	ld	a, b
	cp	a, 23
	jr	nz, BB41_6
BB41_2:
	ld	a, c
	cp	a, 15
	jr	z, BB41_8
	ld	a, c
	cp	a, 23
	jr	z, BB41_8
	ld	hl, 1
BB41_5:
	ld	sp, ix
	pop	ix
	ret
BB41_6:
	ld	a, c
	cp	a, 15
	jr	z, BB41_8
	ld	a, c
	cp	a, 23
	jr	nz, BB41_10
BB41_8:
	ld	a, b
	cp	a, 15
	jr	z, BB41_10
	ld	a, b
	cp	a, 23
	jr	nz, BB41_5
BB41_10:
	ld	iy, (ix - 6)
	ld	hl, (iy + 4)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB41_12
	ld	hl, (iy + 49)
	ld	de, (iy + 52)
	ld	(ix - 15), de
	ld	de, (iy + 55)
	ld	(ix - 12), de
	ld	de, (_cameraXYZ)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 9), hl
	pop	hl
	ld	de, (_cameraXYZ+3)
	ld	hl, (ix - 15)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 15), hl
	pop	hl
	ld	de, (_cameraXYZ+6)
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld	bc, (ix - 9)
	push	bc
	pop	hl
	call	__imulu
	ld	(ix - 9), hl
	ld	bc, (ix - 15)
	push	bc
	pop	hl
	call	__imulu
	push	hl
	pop	iy
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	iy
	call	_approx_sqrt_a
	pop	de
	ld	iy, (ix - 6)
	ld	(iy + 4), l
	ld	(iy + 5), h
BB41_12:
	ld	de, 0
	push	de
	pop	bc
	ld	c, l
	ld	b, h
	ld	iy, (ix - 3)
	ld	hl, (iy + 4)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB41_14
	ld	iy, (ix - 3)
	ld	hl, (iy + 49)
	ld	de, (iy + 52)
	ld	(ix - 15), de
	ld	de, (iy + 55)
	ld	(ix - 12), de
	ld	de, (_cameraXYZ)
	or	a, a
	sbc	hl, de
	push	hl
	ld	(ix - 6), bc
	call	_fp_to_int
	ld	(ix - 9), hl
	pop	hl
	ld	de, (_cameraXYZ+3)
	ld	hl, (ix - 15)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	ld	(ix - 15), hl
	pop	hl
	ld	de, (_cameraXYZ+6)
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, de
	push	hl
	call	_fp_to_int
	push	hl
	pop	de
	pop	hl
	ld	bc, (ix - 9)
	push	bc
	pop	hl
	call	__imulu
	ld	(ix - 9), hl
	ld	bc, (ix - 15)
	push	bc
	pop	hl
	call	__imulu
	push	hl
	pop	iy
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	iy
	call	_approx_sqrt_a
	ld	bc, (ix - 6)
	pop	de
	ld	de, 0
	ld	iy, (ix - 3)
	ld	(iy + 4), l
	ld	(iy + 5), h
BB41_14:
	ld	e, l
	ld	d, h
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8xComparePKvS0_
__Z8xComparePKvS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 6)
	ld	iy, (ix + 9)
	ld	hl, (hl)
	ld	iy, (iy)
	ld	de, (iy + 49)
	push	hl
	pop	iy
	ld	hl, (iy + 49)
	sbc	hl, de
	ld	(ix + 6), hl
	pop	ix
	jp	_fp_to_int
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16deleteEverythingv
__Z16deleteEverythingv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 9
	ld	sp, hl
	ld	bc, 0
	ld	de, (_numberOfObjects)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB43_5
	ld	hl, (_objects)
	ld	(ix - 9), hl
	push	bc
	pop	iy
	ld	(ix - 3), bc
BB43_2:
	ld	(ix - 6), iy
	lea	bc, iy
	ld	hl, (ix - 9)
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB43_4
	push	hl
	call	__ZdlPv
	pop	hl
	ld	hl, (_objects)
	ld	(ix - 9), hl
	ld	de, (_numberOfObjects)
BB43_4:
	ld	hl, (ix - 3)
	inc	hl
	ld	bc, 3
	ld	iy, (ix - 6)
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	ld	bc, 0
	jr	c, BB43_2
BB43_5:
	ld	(_numberOfObjects), bc
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z10drawScreenb
__Z10drawScreenb:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	iy, 0
	bit	0, (ix + 6)
	jr	z, BB44_2
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	ld	iy, 0
	pop	hl
BB44_2:
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB44_5
	ld	(ix - 3), iy
BB44_4:
	ld	(ix - 6), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 6)
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jr	c, BB44_4
BB44_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12rotateCameraff
__Z12rotateCameraff:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jr	z, BB45_3
	ld	bc, (_angleX)
	ld	a, (_angleX+3)
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	lea	hl, iy
	ld	e, d
	ld	bc, -4980736
	ld	a, -62
	call	__fcmp
	jp	m, BB45_3
	ld	e, 66
	ld	hl, -4980736
	lea	bc, iy
	ld	a, d
	call	__fcmp
	jp	p, BB45_19
BB45_3:
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jp	z, BB45_18
BB45_4:
	ld	bc, (_angleY)
	ld	a, (_angleY+3)
BB45_5:
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	ld	hl, -7929856
	ld	e, 67
	call	__fcmp
	jp	p, BB45_7
	lea	bc, iy
	ld	a, d
	ld	hl, -4980736
	ld	e, -61
	jr	BB45_5
BB45_7:
	ld	(_angleY), iy
	ld	a, d
	ld	(_angleY+3), a
	lea	hl, iy
	ld	e, d
	ld	bc, -4980736
	ld	a, -62
	call	__fcmp
	jp	p, BB45_10
BB45_8:
	lea	bc, iy
	ld	a, d
	ld	hl, -4980736
	ld	e, 67
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	lea	hl, iy
	ld	e, d
	ld	bc, -4980736
	ld	a, -62
	call	__fcmp
	jp	m, BB45_8
	ld	(_angleY), iy
	ld	a, d
	ld	(_angleY+3), a
BB45_10:
	ld	bc, (_degRadRatio)
	ld	a, (_degRadRatio+3)
	lea	hl, iy
	ld	e, d
	call	__fmul
	ld	(ix - 3), bc
	ld	l, a
	ld	(ix - 6), hl
	push	hl
	push	bc
	call	_cosf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_cy), bc
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_sinf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_sy), bc
BB45_11:
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB45_14
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 3), hl
BB45_13:
	ld	(ix - 6), iy
	ld	hl, (_objects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object14generatePointsEv
	ld	iy, (ix - 6)
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jr	c, BB45_13
BB45_14:
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	ld	iy, 0
	pop	hl
	ld	hl, (_numberOfObjects)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB45_17
	ld	(ix - 3), iy
BB45_16:
	ld	(ix - 6), iy
	ld	hl, (_zSortedObjects)
	lea	de, iy
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	__ZN6object16generatePolygonsEv
	ld	iy, (ix - 6)
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	de, (_numberOfObjects)
	ld	bc, 3
	add	iy, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jr	c, BB45_16
BB45_17:
	ld	hl, (_cursorBackground)
	ld	de, (_playerCursorX)
	ld	bc, (_playerCursorY)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	call	__Z10drawCursorv
BB45_18:
	ld	sp, ix
	pop	ix
	ret
BB45_19:
	ld	(_angleX), iy
	ld	a, d
	ld	(_angleX+3), a
	ld	bc, (_degRadRatio)
	ld	a, (_degRadRatio+3)
	lea	hl, iy
	ld	e, d
	call	__fmul
	ld	(ix - 3), bc
	ld	l, a
	ld	(ix - 6), hl
	push	hl
	push	bc
	call	_cosf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_cx), bc
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_sinf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_sx), bc
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jp	nz, BB45_4
	jp	BB45_11
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11resetCamerav
__Z11resetCamerav:
	ld	hl, -1048576
	ld	a, 65
	ld	iyl, 66
	ld	bc, 2896
	ld	de, -409600
	ld	(_angleX), hl
	ld	(_angleX+3), a
	ld	hl, 3407872
	ld	(_angleY), hl
	ld	a, iyl
	ld	(_angleY+3), a
	ld	hl, 3547
	ld	(_cx), hl
	ld	hl, 2048
	ld	(_sx), hl
	ld	(_cy), bc
	ld	(_sy), bc
	ld	(_cameraXYZ), de
	ld	hl, 614400
	ld	(_cameraXYZ+3), hl
	ld	(_cameraXYZ+6), de
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9drawImageiiiiPt
__Z9drawImageiiiiPt:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 21
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	de, -8388608
	add	iy, de
	ld	bc, -8388288
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jp	nc, BB47_27
	ld	hl, (ix + 9)
	add	hl, de
	ld	bc, -8388368
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, bc
	jp	nc, BB47_27
	ld	hl, (ix + 12)
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	jp	c, BB47_27
	ld	hl, (ix + 15)
	add	hl, de
	or	a, a
	sbc	hl, bc
	jp	c, BB47_27
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	add	hl, bc
	ld	(ix - 6), hl
	add	hl, de
	or	a, a
	sbc	hl, de
	jp	c, BB47_27
	ld	bc, (ix + 9)
	ld	hl, (ix + 15)
	add	hl, bc
	ld	bc, -8388607
	ld	(ix - 9), hl
	add	hl, de
	or	a, a
	sbc	hl, de
	jp	c, BB47_27
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB47_8
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
BB47_8:
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix + 6)
	push	hl
	pop	bc
	jr	nc, BB47_10
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB47_10:
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 12), hl
	ld	hl, 320
	ld	(ix - 21), bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 15), hl
	ld	bc, 320
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, bc
	jr	nc, BB47_12
	ld	hl, (ix - 6)
	ld	(ix - 15), hl
BB47_12:
	ld	hl, (ix - 3)
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	hl, (ix + 9)
	ld	(ix - 12), hl
	jr	nc, BB47_14
	or	a, a
	sbc	hl, hl
	ld	(ix - 12), hl
BB47_14:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 9)
	jr	c, BB47_16
	ld	hl, (ix + 15)
BB47_16:
	ld	(ix - 9), hl
	ld	bc, (ix - 12)
	add	hl, bc
	ld	(ix - 18), hl
	ld	hl, 240
	ld	bc, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	bc, 240
	ld	hl, (ix - 18)
	or	a, a
	sbc	hl, bc
	jr	nc, BB47_18
	ld	hl, (ix - 9)
	ld	(ix - 6), hl
BB47_18:
	ld	c, 1
	ld	hl, (ix - 15)
	call	__ishl
	ld	(ix - 15), hl
	ld	hl, (ix - 6)
	ld	bc, 255
	call	__iand
	ld	a, l
	or	a, a
	jp	z, BB47_27
	ld	(ix - 9), hl
	ld	hl, -2883584
	ld	(ix - 6), hl
	ld	a, 1
	ld	hl, (ix - 21)
	ld	c, a
	call	__ishl
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	bc, 640
	ld	hl, (ix - 12)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	ld	bc, (ix + 6)
	sbc	hl, bc
	push	hl
	pop	bc
	lea	hl, iy
	sbc	hl, de
	jr	c, BB47_21
	ld	bc, 0
BB47_21:
	push	bc
	pop	hl
	ld	c, a
	call	__ishl
	push	hl
	pop	bc
	ld	iy, (ix + 18)
	add	iy, bc
	ld	hl, (ix + 9)
	ld	bc, (ix + 12)
	call	__imulu
	push	hl
	pop	bc
	or	a, a
	sbc	hl, hl
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	sbc	hl, de
	jr	c, BB47_23
	ld	bc, 0
BB47_23:
	push	bc
	pop	hl
	ld	c, a
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	ld	bc, (ix - 9)
	dec	bc
	ld	de, 239
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	c, BB47_25
	ld	bc, 239
BB47_25:
	inc	bc
BB47_26:
	ld	(ix - 3), iy
	ld	(ix - 9), bc
	ld	hl, (ix - 15)
	push	hl
	push	iy
	ld	hl, (ix - 6)
	push	hl
	call	_memcpy
	ld	iy, (ix - 3)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	de, 640
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	ld	c, 1
	call	__ishl
	ld	bc, (ix - 9)
	push	hl
	pop	de
	add	iy, de
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB47_26
BB47_27:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z13drawRectangleiiiit
__Z13drawRectangleiiiit:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 15
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	bc, -8388608
	add	iy, bc
	ld	de, -8388288
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	nc, BB48_26
	ld	hl, (ix + 9)
	add	hl, bc
	ld	de, -8388368
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	jp	nc, BB48_26
	ld	hl, (ix + 12)
	add	hl, bc
	ld	de, -8388607
	or	a, a
	sbc	hl, de
	jp	c, BB48_26
	ld	hl, (ix + 15)
	add	hl, bc
	or	a, a
	sbc	hl, de
	jp	c, BB48_26
	ld	de, (ix + 6)
	ld	hl, (ix + 12)
	add	hl, de
	ld	(ix - 6), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	c, BB48_26
	ld	de, (ix + 9)
	ld	hl, (ix + 15)
	add	hl, de
	ld	de, -8388607
	ld	(ix - 12), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	c, BB48_26
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB48_8
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
BB48_8:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	ld	hl, (ix + 6)
	ex	de, hl
	jr	nc, BB48_10
	or	a, a
	sbc	hl, hl
	ex	de, hl
BB48_10:
	ld	iy, (ix - 6)
	add	iy, de
	ld	hl, 320
	ld	(ix - 15), de
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	de, 320
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB48_12
	ld	hl, (ix - 6)
	ld	(ix - 9), hl
BB48_12:
	ld	iy, (ix - 3)
	lea	hl, iy
	ld	de, -8388607
	or	a, a
	sbc	hl, de
	ld	hl, (ix + 9)
	ex	de, hl
	jr	nc, BB48_14
	or	a, a
	sbc	hl, hl
	ex	de, hl
BB48_14:
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 12)
	jr	c, BB48_16
	ld	hl, (ix + 15)
BB48_16:
	push	hl
	pop	iy
	add	iy, de
	push	hl
	pop	bc
	ld	hl, 240
	ld	(ix - 6), de
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	ld	de, 240
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB48_18
	ld	(ix - 3), bc
BB48_18:
	ld	c, 1
	ld	hl, (ix - 15)
	call	__ishl
	push	hl
	pop	de
	ld	iy, -2883584
	add	iy, de
	ld	bc, 640
	ld	hl, (ix - 6)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	de, 255
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	hl, (ix - 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB48_21
	ld	bc, (ix + 18)
	ld	iy, (ix - 6)
	ld	hl, (ix - 9)
BB48_20:
	ld	(iy), c
	ld	(iy + 1), b
	dec	hl
	lea	iy, iy + 2
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB48_20
BB48_21:
	ld	c, 1
	ld	hl, (ix - 9)
	call	__ishl
	push	hl
	pop	iy
	ld	hl, (ix - 3)
	ld	bc, 255
	call	__iand
	push	hl
	pop	bc
	ld	a, c
	or	a, a
	jr	z, BB48_26
	dec	bc
	ld	de, 239
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	c, BB48_24
	ld	bc, 239
BB48_24:
	inc	bc
	ld	(ix - 9), iy
BB48_25:
	ld	(ix - 3), bc
	push	iy
	ld	hl, (ix - 6)
	push	hl
	ld	de, 640
	add	hl, de
	ld	(ix - 6), hl
	push	hl
	call	_memcpy
	ld	bc, (ix - 3)
	ld	iy, (ix - 9)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	dec	bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB48_25
BB48_26:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12failedToSavev
__Z12failedToSavev:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB49_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB49_1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16failedToLoadSavev
__Z16failedToLoadSavev:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	hl, _.str.102
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.102
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	call	_gfx_GetTextY
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB50_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB50_1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4savePKc
__Z4savePKc:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -168
	add	hl, sp
	ld	sp, hl
	ld	bc, -143
	lea	iy, ix
	add	iy, bc
	xor	a, a
	ld	bc, -150
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	lea	hl, ix - 15
	push	ix
	ld	bc, -153
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	ld	bc, -149
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 110
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	__Z8fillDirtv
	ld	hl, _.str.103
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.103
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB51_1:
	call	_os_GetCSC
	cp	a, 26
	jp	z, BB51_43
	cp	a, 34
	jr	nz, BB51_1
	ld	hl, _playerCursor+49
	ld	a, (hl)
	ld	bc, -153
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy), a
	ld	a, (_playerCursor+50)
	ld	(ix - 14), a
	ld	a, (_playerCursor+51)
	ld	(ix - 13), a
	lea	de, iy + 3
	ld	hl, _playerCursor+52
	ld	a, (hl)
	ex	de, hl
	ld	(hl), a
	ld	a, (_playerCursor+53)
	ld	(ix - 11), a
	ld	a, (_playerCursor+54)
	ld	(ix - 10), a
	lea	iy, iy + 6
	ld	hl, _playerCursor+55
	ld	a, (hl)
	ld	(iy), a
	ld	a, (_playerCursor+56)
	ld	(ix - 8), a
	ld	a, (_playerCursor+57)
	ld	(ix - 7), a
	ld	de, -2806784
	ld	hl, _.str.105
	ld	bc, 7
	ldir
	ld	hl, 3
	ld	(-2806777), hl
	ld	hl, (_numberOfObjects)
	ld	(-2806774), hl
	ld	de, (_numberOfObjects)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB51_5
	ld	iy, -2806771
	jp	BB51_7
BB51_5:
	ld	bc, -149
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 3
	push	ix
	ld	bc, -165
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy + 6
	ld	bc, -168
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, (_objects)
	ld	iy, -2806771
BB51_6:
	ld	(ix - 3), de
	ld	de, -146
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -159
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	ld	de, (ix - 3)
	push	ix
	ld	bc, -162
	add	ix, bc
	ld	(ix), de
	pop	ix
	push	ix
	ld	de, -159
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	iy, (hl)
	lea	hl, iy + 49
	ld	a, (hl)
	ld	de, -149
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), a
	push	hl
	pop	bc
	ld	a, (iy + 50)
	lea	hl, iy
	ld	(ix - 3), bc
	ld	bc, -156
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	pop	iy
	ld	(iy + 1), a
	push	hl
	pop	iy
	ld	a, (iy + 51)
	push	de
	pop	iy
	ld	(iy + 2), a
	push	hl
	pop	iy
	lea	hl, iy + 52
	ld	a, (hl)
	ld	bc, -165
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ld	a, (iy + 53)
	lea	hl, iy
	push	de
	pop	iy
	ld	(iy + 4), a
	push	hl
	pop	iy
	ld	a, (iy + 54)
	push	de
	pop	iy
	ld	(iy + 5), a
	push	hl
	pop	iy
	lea	hl, iy + 55
	ld	a, (hl)
	ld	bc, -168
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ld	bc, (ix - 3)
	ld	a, (iy + 56)
	lea	hl, iy
	push	de
	pop	iy
	ld	(iy + 7), a
	push	hl
	pop	iy
	ld	a, (iy + 57)
	push	de
	pop	iy
	ld	(iy + 8), a
	push	hl
	pop	iy
	ld	a, (iy + 48)
	ld	de, -146
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	lea	de, iy
	push	bc
	pop	hl
	ld	bc, 9
	ldir
	ld	bc, -162
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	hl, 81920
	ld	(iy + 9), hl
	ld	(iy + 12), a
	lea	iy, iy + 13
	lea	bc, iy
	dec	de
	ld	(ix - 3), de
	ld	de, -159
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	lea	iy, iy + 3
	lea	hl, iy
	push	bc
	pop	iy
	push	hl
	pop	bc
	ld	de, (ix - 3)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB51_6
BB51_7:
	ld	a, (_selectedObject)
	ld	(iy), a
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	inc	iy
	lea	de, iy
	ld	hl, _cameraXYZ
	ld	bc, 9
	ldir
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	de, iy + 10
	push	ix
	ld	bc, -153
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	bc, 9
	ldir
	ld	hl, (_angleX)
	ld	a, (_angleX+3)
	ld	(iy + 19), hl
	ld	(iy + 22), a
	ld	hl, (_angleY)
	ld	a, (_angleY+3)
	ld	(iy + 23), hl
	ld	(iy + 26), a
	lea	bc, iy
	ld	de, 2806811
	add	iy, de
	ld	de, -8388608
	ld	(ix - 3), bc
	ld	bc, -153
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	add	iy, de
	inc	de
	lea	hl, iy
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, de
	ld	e, d
	ld	hl, 0
	jp	c, BB51_11
	ld	hl, -2806784
	push	hl
	pop	iy
	ld	bc, -1
	ld	e, b
BB51_9:
	ld	(ix - 3), de
	ld	de, -159
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	push	ix
	ld	de, -162
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ld	d, h
	push	bc
	pop	hl
	push	ix
	ld	bc, -156
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	bc, 255
	xor	a, a
	call	__land
	ld	(ix - 3), de
	push	ix
	ld	de, -162
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	a, d
	call	__lxor
	ld	c, 2
	call	__ishl
	push	hl
	pop	de
	lea	hl, iy
	ld	iy, _crc32_tab
	add	iy, de
	ld	de, (iy)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -162
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	e, (iy + 3)
	push	hl
	pop	iy
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	ld	de, -159
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	ix
	ld	de, -156
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	l, 8
	call	__lshru
	push	ix
	ld	de, -162
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lxor
	push	hl
	pop	bc
	ld	(ix - 3), bc
	push	ix
	ld	bc, -153
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	dec	hl
	inc	iy
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 3)
	jp	nz, BB51_9
	push	bc
	pop	hl
	call	__lnot
	ld	bc, -146
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
BB51_11:
	ld	(iy + 27), hl
	ld	(iy + 30), e
	ld	de, (_numberOfObjects)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB51_16
	ld	hl, (_objects)
	ld	bc, -159
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -153
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -156
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB51_13:
	ld	(ix - 3), de
	ld	de, -153
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, -159
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jr	z, BB51_15
	push	hl
	call	__ZdlPv
	pop	hl
	ld	hl, (_objects)
	ld	bc, -159
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (_numberOfObjects)
BB51_15:
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	inc	iy
	ld	bc, 3
	ld	(ix - 3), de
	push	ix
	ld	de, -153
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add	hl, bc
	push	ix
	ld	bc, -153
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jp	c, BB51_13
BB51_16:
	or	a, a
	sbc	hl, hl
	ld	(_numberOfObjects), hl
	ld	de, 2806815
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	ld	bc, -153
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
BB51_17:
	call	__Z8fillDirtv
	ld	hl, 105
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.106
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.106
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.107
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.107
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.108
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.108
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB51_18:
	call	_os_GetCSC
	ld	l, a
	or	a, a
	jr	z, BB51_18
	ld	a, l
	cp	a, 15
	jp	nz, BB51_23
	call	__Z8fillDirtv
	ld	hl, 110
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.120
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.120
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB51_21:
	call	_os_GetCSC
	ld	l, a
	or	a, a
	jr	z, BB51_21
	ld	a, l
	cp	a, 34
	jp	z, BB51_43
	jp	BB51_41
BB51_23:
	ld	a, l
	cp	a, 26
	jp	nz, BB51_28
	call	__Z8fillDirtv
	ld	hl, 110
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.111
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.111
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.112
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.112
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	_init_USB
	bit	0, a
	jp	z, BB51_32
	ld	hl, _.str.113
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.113
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	call	_usb_WaitForEvents
	ld	hl, 16
	push	hl
	ld	hl, _.str.115
	push	hl
	ld	hl, _.str.114
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Create
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(_faterr), hl
	ld	hl, 128
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -149
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 16), 0
	ld	bc, -149
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 128
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, _.str.116
	push	hl
	ld	bc, -149
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -2806784
	push	hl
	ld	bc, -153
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -149
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.117
	push	hl
	call	_writeFile
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB51_27
	call	_usb_WaitForEvents
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
BB51_27:
	ld	a, (_global+1795)
	bit	0, a
	call	nz, _usb_WaitForEvents
	call	_usb_Cleanup
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	bit	0, (hl)
	ld	bc, -150
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	a, (iy)
	jp	nz, BB51_44
	jp	BB51_42
BB51_28:
	ld	a, l
	cp	a, 34
	jp	nz, BB51_41
	ld	hl, _.str.109
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Open
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	or	a, a
	jp	z, BB51_41
	push	de
	ld	bc, -153
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, -2806784
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	call	_ti_Write
	ld	bc, -146
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	ld	(ix - 3), de
	ld	de, -153
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jp	nz, BB51_37
	push	de
	ld	hl, 1
	push	hl
	call	_ti_SetArchiveStatus
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Close
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	pop	hl
	ld	a, 1
	ld	bc, -150
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	jp	BB51_40
BB51_32:
	ld	hl, _.str.118
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.118
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -146
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB51_33:
	call	_os_GetCSC
	or	a, a
	jr	z, BB51_33
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB51_36
	call	_usb_WaitForEvents
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
BB51_36:
	ld	a, (_global+1795)
	bit	0, a
	call	nz, _usb_WaitForEvents
	call	_usb_Cleanup
	jp	BB51_41
BB51_37:
	push	de
	call	_ti_Close
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Delete
	pop	hl
	ld	hl, _.str.110
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -156
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.110
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -156
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.100
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -156
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB51_38:
	call	_os_GetCSC
	or	a, a
	jr	z, BB51_38
	ld	bc, -146
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB51_40:
	push	de
	call	_ti_Close
	pop	hl
BB51_41:
	ld	bc, -150
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
BB51_42:
	ld	bc, -150
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	and	a, 1
	bit	0, a
	jp	z, BB51_17
BB51_43:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	ld	sp, ix
	pop	ix
	ret
BB51_44:
	ld	hl, _.str.119
	push	hl
	call	__Z30printStringAndMoveDownCenteredPKc
	pop	hl
	ld	hl, _.str.101
	push	hl
	call	__Z30printStringAndMoveDownCenteredPKc
	pop	hl
BB51_45:
	call	_os_GetCSC
	or	a, a
	jr	z, BB51_45
	jr	BB51_43
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8fillDirtv
__Z8fillDirtv:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	bc, 256
	ld	hl, (_cursorBackground)
	ld	(hl), 16
	ld	iy, (_cursorBackground)
	ld	(iy + 1), 16
	ld	iy, (_cursorBackground)
	lea	de, iy + 2
	ld	hl, (_dirt_texture)
	ldir
	ld	bc, 2
	ld	de, 258
BB52_1:
	ld	hl, (_cursorBackground)
	add	hl, bc
	ld	a, (hl)
	add	a, 126
	ld	(hl), a
	inc	bc
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB52_1
	ld	iy, -16
BB52_3:
	ld	hl, 16
	ex	de, hl
	add	iy, de
	ld	(ix - 3), iy
	ld	hl, (_cursorBackground)
	ld	de, 0
	push	de
	push	iy
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 16
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 32
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 48
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 64
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 80
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 96
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, 112
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -128
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -112
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -96
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -80
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -64
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -48
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (_cursorBackground)
	ld	de, -32
	push	de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	iy, (ix - 3)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	lea	hl, iy
	ld	de, 304
	or	a, a
	sbc	hl, de
	jp	c, BB52_3
	ld	hl, (_cursorBackground)
	ld	(hl), 96
	ld	iy, (_cursorBackground)
	ld	(iy + 1), 10
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9checkSavePKcb
__Z9checkSavePKcb:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -150
	add	hl, sp
	ld	sp, hl
	ld	bc, -134
	lea	hl, ix
	add	hl, bc
	ld	bc, -137
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	bit	0, (ix + 9)
	jp	z, BB53_6
	call	_init_USB
	bit	0, a
	ld	hl, 0
	ld	a, h
	ld	bc, -138
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	(iy), a
	ld	a, h
	push	ix
	ld	bc, -141
	push	af
	add	ix, bc
	pop	af
	ld	(ix), a
	pop	ix
	jp	z, BB53_3
	ld	hl, 128
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 7), 0
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 128
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, _.str.116
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -2806784
	push	hl
	ld	hl, 76800
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.117
	push	hl
	call	_readFile
	ld	e, a
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	and	a, 1
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	bit	0, e
	ld	bc, -137
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.117
	push	hl
	ld	hl, 0
	call	nz, _getSizeOf
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
BB53_3:
	ld	bc, -144
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB53_5
	call	_usb_WaitForEvents
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
BB53_5:
	ld	a, (_global+1795)
	bit	0, a
	call	nz, _usb_WaitForEvents
	call	_usb_Cleanup
	jp	BB53_13
BB53_6:
	xor	a, a
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	hl, _.str.125
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Open
	ld	e, a
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	or	a, a
	jp	z, BB53_25
	push	de
	ld	bc, -144
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	call	_ti_GetSize
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, -147
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, -144
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	push	de
	ld	hl, 1
	push	hl
	ld	hl, -2806784
	push	hl
	call	_ti_Read
	ld	bc, -150
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	bc, -144
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_GetSize
	ld	bc, -147
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	e, l
	ld	d, h
	pop	hl
	ld	bc, -150
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	(ix), de
	pop	ix
	or	a, a
	sbc	hl, de
	jr	z, BB53_9
	ld	a, 0
	jr	BB53_10
BB53_9:
	ld	a, 1
BB53_10:
	ld	de, -141
	lea	hl, ix
	add	hl, de
	ld	(hl), a
	ld	iy, 0
	push	ix
	ld	de, -144
	add	ix, de
	ld	bc, (ix)
	pop	ix
	push	ix
	ld	de, -150
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jr	nz, BB53_12
	push	bc
	call	_ti_GetSize
	ld	de, -144
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	ld	iy, 0
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB53_12:
	ld	de, -144
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	push	bc
	call	_ti_Close
	pop	hl
BB53_13:
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	bit	0, (hl)
	ld	bc, -137
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	jp	z, BB53_25
	ld	bc, 7
	lea	de, iy
	ld	hl, -2806784
	ldir
	ld	hl, _.str.105
	push	hl
	push	iy
	call	_strcmp
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, (-2806777)
	ld	de, 4
	or	a, a
	sbc	hl, de
	jp	nc, BB53_21
	ld	de, -4
	ld	(ix - 3), de
	ld	de, -144
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	bc
	pop	iy
	ld	de, (ix - 3)
	add	iy, de
	ld	de, -8388608
	lea	hl, iy
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	ld	a, d
	ld	e, a
	ld	hl, 0
	jp	c, BB53_19
	ld	a, -1
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	de, -2806784
	ld	bc, -1
BB53_17:
	ld	(ix - 3), de
	ld	de, -150
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	push	ix
	ld	de, -137
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ex	de, hl
	push	ix
	ld	de, -147
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -137
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	e, (hl)
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	push	ix
	ld	bc, -141
	add	ix, bc
	ld	d, (ix)
	pop	ix
	ld	e, d
	ld	bc, 255
	xor	a, a
	call	__land
	ld	(ix - 3), de
	push	ix
	ld	de, -137
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lxor
	ld	c, 2
	call	__ishl
	push	hl
	pop	bc
	lea	hl, iy
	ld	iy, _crc32_tab
	add	iy, bc
	ld	bc, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -137
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	de, (ix - 3)
	ld	e, (iy + 3)
	push	hl
	pop	iy
	ld	(ix - 3), de
	ld	de, -150
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, (ix - 3)
	ld	a, d
	ld	l, 8
	call	__lshru
	ld	(ix - 3), bc
	push	ix
	ld	bc, -137
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__lxor
	xor	a, a
	push	hl
	pop	bc
	ld	(ix - 3), bc
	push	ix
	ld	bc, -141
	add	ix, bc
	ld	(ix), e
	pop	ix
	dec	iy
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	de, (ix)
	pop	ix
	inc	de
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 3)
	jp	nz, BB53_17
	push	bc
	pop	hl
	ld	bc, -141
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	call	__lnot
	ld	(ix - 3), de
	push	ix
	ld	de, -144
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
BB53_19:
	ld	(ix - 3), de
	ld	de, -138
	lea	iy, ix
	add	iy, de
	ld	(iy), a
	ld	iy, -2806784
	add	iy, bc
	ld	bc, (iy - 4)
	ld	a, (iy - 1)
	ld	de, (ix - 3)
	call	__lcmpu
	jr	nz, BB53_22
	ld	a, 1
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	jp	BB53_25
BB53_21:
	ld	hl, _.str.123
	jr	BB53_23
BB53_22:
	ld	hl, _.str.124
BB53_23:
	ld	bc, -137
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -141
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.102
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -137
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.102
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -137
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -137
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
BB53_24:
	call	_os_GetCSC
	or	a, a
	jr	z, BB53_24
BB53_25:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4loadv
__Z4loadv:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 22
	ld	sp, hl
	sbc	hl, hl
	ld	(ix - 9), hl
	ld	a, 65
	ld	iy, -2806771
	ld	de, (-2806777)
	ld	hl, (-2806774)
	ld	(_numberOfObjects), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), de
	jr	nz, BB54_2
	ld	(ix - 3), iy
	jp	BB54_6
BB54_2:
	or	a, a
	sbc	hl, hl
	ld	(ix - 12), hl
BB54_3:
	ld	hl, (iy)
	ld	(ix - 15), hl
	ld	hl, (iy + 3)
	ld	(ix - 18), hl
	ld	hl, (iy + 6)
	ld	(ix - 21), hl
	lea	hl, iy + 13
	ld	(ix - 3), hl
	ld	a, (iy + 12)
	ld	(ix - 22), a
	ld	hl, 60
	push	hl
	call	__Znwj
	push	hl
	pop	iy
	pop	hl
	ld.sis	hl, 0
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	(iy + 10), l
	ld	(iy + 11), h
	ld	(iy + 16), l
	ld	(iy + 17), h
	ld	(iy + 22), l
	ld	(iy + 23), h
	ld	(iy + 28), l
	ld	(iy + 29), h
	ld	(iy + 34), l
	ld	(iy + 35), h
	ld	(iy + 40), l
	ld	(iy + 41), h
	ld	(iy + 46), l
	ld	(iy + 47), h
	ld	hl, (ix - 15)
	ld	(iy + 49), hl
	ld	hl, (ix - 18)
	ld	(iy + 52), hl
	ld	hl, (ix - 21)
	ld	(iy + 55), hl
	ld	a, (ix - 22)
	ld	(iy + 48), a
	ld	(iy + 59), 0
	ld	(iy + 58), 1
	ld	hl, (_objects)
	ld	bc, (ix - 9)
	push	bc
	pop	de
	add	hl, de
	ld	(hl), iy
	ld	hl, 3
	ex	de, hl
	push	bc
	pop	iy
	add	iy, de
	ld	bc, (ix - 12)
	push	bc
	pop	hl
	ld	de, 999
	or	a, a
	sbc	hl, de
	lea	de, iy
	jr	nc, BB54_5
	inc	bc
	ld	iy, (_numberOfObjects)
	ld	(ix - 12), bc
	push	bc
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), de
	ld	iy, (ix - 3)
	ld	de, (ix - 6)
	ld	a, 65
	jp	c, BB54_3
	jr	BB54_6
BB54_5:
	ld	de, (ix - 6)
	ld	a, 65
BB54_6:
	ld	hl, -1048576
	ld	(_angleX), hl
	ld	(_angleX+3), a
	ld	hl, 3407872
	ld	(_angleY), hl
	ld	a, 66
	ld	(_angleY+3), a
	ld	hl, 3547
	ld	(_cx), hl
	ld	hl, 2048
	ld	(_sx), hl
	ld	hl, 2896
	ld	(_cy), hl
	ld	(_sy), hl
	ld	hl, -409600
	push	hl
	pop	iy
	ld	(_cameraXYZ), iy
	ld	hl, 614400
	ld	(_cameraXYZ+3), hl
	ld	(_cameraXYZ+6), iy
	ld	bc, 2
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 3)
	jp	c, BB54_9
	ld	de, _cameraXYZ
	ld	a, (hl)
	ld	(_selectedObject), a
	ld	iy, (ix - 3)
	inc	iy
	lea	hl, iy
	ld	iy, (ix - 3)
	ld	bc, 9
	ldir
	lea	hl, iy + 10
	ld	a, (hl)
	ld	hl, _playerCursor+49
	ld	(hl), a
	ld	a, (iy + 11)
	ld	(_playerCursor+50), a
	ld	a, (iy + 12)
	ld	(_playerCursor+51), a
	lea	hl, iy + 13
	ld	a, (hl)
	ld	hl, _playerCursor+52
	ld	(hl), a
	ld	a, (iy + 14)
	ld	(_playerCursor+53), a
	ld	a, (iy + 15)
	ld	(_playerCursor+54), a
	lea	hl, iy + 16
	ld	a, (hl)
	ld	hl, _playerCursor+55
	ld	(hl), a
	ld	a, (iy + 17)
	ld	(_playerCursor+56), a
	ld	a, (iy + 18)
	ld	(_playerCursor+57), a
	ld	hl, (ix - 6)
	ld	de, 2
	or	a, a
	sbc	hl, de
	jp	z, BB54_9
	ld	hl, (iy + 19)
	ld	e, (iy + 22)
	ld	(_angleX), hl
	ld	a, e
	ld	(_angleX+3), a
	ld	bc, (iy + 23)
	ld	(ix - 6), bc
	ld	a, (iy + 26)
	ld	(ix - 3), a
	ld	(_angleY), bc
	ld	(_angleY+3), a
	ld	bc, (_degRadRatio)
	ld	(ix - 9), bc
	ld	a, (_degRadRatio+3)
	ld	(ix - 12), a
	call	__fmul
	ld	(ix - 15), bc
	ld	l, a
	ld	(ix - 18), hl
	push	hl
	push	bc
	call	_cosf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_cx), bc
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_sinf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_sx), bc
	ld	bc, (ix - 9)
	ld	a, (ix - 12)
	ld	hl, (ix - 6)
	ld	e, (ix - 3)
	call	__fmul
	ld	(ix - 3), bc
	ld	l, a
	ld	(ix - 6), hl
	push	hl
	push	bc
	call	_cosf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_cy), bc
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_sinf
	push	hl
	pop	bc
	ld	a, e
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, -8388608
	ld	e, 69
	call	__fmul
	call	__ftol
	ld	(_sy), bc
BB54_9:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8gfxStartv
__Z8gfxStartv:
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	jp	__Z11initPalettev
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8mainMenuPcj
__Z8mainMenuPcj:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -247
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 9)
	xor	a, a
	ld	c, a
	ld	de, 9
	sbc	hl, de
	jr	nc, BB56_2
	ld	a, c
	ld	sp, ix
	pop	ix
	ret
BB56_2:
	ld	de, 1
	ld	l, e
	ld	bc, -238
	lea	iy, ix
	add	iy, bc
	ld	(iy), l
	lea	hl, ix - 106
	push	ix
	inc	bc
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -234
	lea	hl, ix
	add	hl, bc
	push	ix
	ld	bc, -247
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(_offset), a
	ld	(_selectedSave), a
	push	de
	call	_gfx_SetDraw
	pop	hl
BB56_3:
	call	__Z17redrawSaveOptionsv
BB56_4:
	call	_os_GetCSC
	dec	a
	cp	a, 56
	jr	nc, BB56_4
	ld	de, 0
	ld	e, a
	ld	hl, JTI56_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB56_6:
	ld	a, (_selectedSave)
	ld	iyl, a
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, iyl
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -244
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ex	de, hl
	ld	bc, 57
	call	__imulu
	ld	de, 10
	add	hl, de
	ld	a, iyl
	and	a, 1
	ld	de, 0
	ld	e, a
	add	hl, de
	push	hl
	pop	bc
	ld	a, iyl
	cp	a, 2
	sbc	hl, hl
	push	hl
	pop	de
	inc	de
	push	bc
	pop	hl
	add	hl, de
	ld	de, -241
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	bc, (_cursorBackground)
	push	hl
	ld	de, 110
	push	de
	push	bc
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	de, 16
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), bc
	ld	bc, -241
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	ld	de, -244
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedSave)
	ld	l, a
	cp	a, 3
	ld	a, 1
	jr	c, BB56_8
	ld	a, -3
BB56_8:
	add	a, l
	ld	e, a
	jp	BB56_12
BB56_9:
	ld	a, (_selectedSave)
	ld	iyl, a
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, iyl
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -244
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ex	de, hl
	ld	bc, 57
	call	__imulu
	ld	de, 10
	add	hl, de
	ld	a, iyl
	and	a, 1
	ld	de, 0
	ld	e, a
	add	hl, de
	push	hl
	pop	bc
	ld	a, iyl
	cp	a, 2
	sbc	hl, hl
	push	hl
	pop	de
	inc	de
	push	bc
	pop	hl
	add	hl, de
	ld	de, -241
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	bc, (_cursorBackground)
	push	hl
	ld	de, 110
	push	de
	push	bc
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	de, 16
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), bc
	ld	bc, -241
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	ld	de, -244
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedSave)
	ld	l, a
	dec	l
	or	a, a
	ld	e, 3
	jr	z, BB56_11
	ld	e, l
BB56_11:
	ld	a, e
BB56_12:
	ld	(_selectedSave), a
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	push	bc
	pop	iy
	ld	iyl, e
	ld	a, (_offset)
	ld	c, a
	lea	hl, iy
	add	hl, bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -244
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy
	ld	bc, 57
	call	__imulu
	push	hl
	pop	iy
	ld	bc, 10
	add	iy, bc
	ld	a, e
	and	a, 1
	ld	bc, 0
	ld	c, a
	add	iy, bc
	ld	a, e
	cp	a, 2
	sbc	hl, hl
	push	hl
	pop	de
	inc	de
	add	iy, de
	push	ix
	ld	bc, -241
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	bc, -241
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, 16
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	(ix - 3), bc
	ld	bc, -241
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	ld	de, -244
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	jp	BB56_4
BB56_13:
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	call	__Z8fillDirtv
	ld	bc, -237
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	hl, ___const._Z8mainMenuPcj.buffer
	ld	bc, 100
	ldir
	ld	a, (_selectedSave)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _saveNames
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -237
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_strcat
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	bc, -237
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	(ix - 3), de
	ld	de, -237
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	bc
	pop	hl
	ld	de, (ix - 3)
	add	hl, de
	ld.sis	de, 63
	ld	(hl), e
	inc	hl
	ld	(hl), d
	push	bc
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 110
	push	de
	push	hl
	ld	de, -237
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 120
	push	de
	push	hl
	ld	hl, _.str.104
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	xor	a, a
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB56_14:
	call	_os_GetCSC
	ld	l, a
	or	a, a
	jp	z, BB56_33
	ld	a, l
	cp	a, 26
	jp	z, BB56_31
	ld	a, l
	cp	a, 34
	jp	nz, BB56_32
	xor	a, a
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB56_18:
	call	__Z8fillDirtv
	ld	hl, _.str.126
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 105
	push	de
	push	hl
	ld	hl, _.str.126
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.127
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 115
	push	de
	push	hl
	ld	hl, _.str.127
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.128
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 125
	push	de
	push	hl
	ld	hl, _.str.128
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
BB56_19:
	call	_os_GetCSC
	ld	l, a
	or	a, a
	jr	z, BB56_19
	ld	a, l
	cp	a, 26
	jp	nz, BB56_23
	ld	hl, _.str.113
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -244
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.113
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.129
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -244
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.129
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	call	_init_USB
	bit	0, a
	jp	z, BB56_24
	ld	a, (_selectedSave)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _saveNames
	add	hl, de
	ld	hl, (hl)
	ld	de, 128
	push	de
	push	hl
	ld	de, -247
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 107), 0
	ld	bc, -247
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 128
	or	a, a
	sbc	hl, de
	push	hl
	ld	hl, _.str.116
	push	hl
	ld	bc, -247
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -247
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.117
	push	hl
	call	_deleteFile
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	a, 1
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	jp	BB56_26
BB56_23:
	ld	a, l
	cp	a, 34
	jp	z, BB56_30
	jp	BB56_29
BB56_24:
	ld	hl, _.str.118
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	a, 1
	ld	c, a
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -244
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.118
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, -244
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_gfx_GetTextY
	push	hl
	ld	bc, -244
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, _.str.101
	push	hl
	call	_gfx_PrintString
	pop	hl
	call	_gfx_GetTextY
	ld	de, 10
	add	hl, de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
BB56_25:
	call	_os_GetCSC
	or	a, a
	jr	z, BB56_25
BB56_26:
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB56_28
	call	_usb_WaitForEvents
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
BB56_28:
	ld	a, (_global+1795)
	bit	0, a
	call	nz, _usb_WaitForEvents
	call	_usb_Cleanup
BB56_29:
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	and	a, 1
	bit	0, a
	jp	z, BB56_18
	jr	BB56_31
BB56_30:
	ld	a, (_selectedSave)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _saveNames
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_ti_Delete
	pop	hl
BB56_31:
	call	__Z17redrawSaveOptionsv
	ld	a, 1
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB56_32:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
BB56_33:
	ld	bc, -241
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	and	a, 1
	bit	0, a
	jp	nz, BB56_4
	jp	BB56_14
BB56_34:
	ld	a, (_offset)
	ld	l, a
	cp	a, 4
	ld	a, -4
	jr	nc, BB56_38
	ld	a, 96
	jr	BB56_38
BB56_36:
	ld	a, (_offset)
	ld	l, a
	cp	a, 96
	ld	a, 4
	jr	c, BB56_38
	ld	a, -96
BB56_38:
	add	a, l
	ld	(_offset), a
	jp	BB56_3
BB56_39:
	ld	a, (_selectedSave)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	a, (_offset)
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _saveNames
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_strcpy
	ld	de, 0
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	jr	BB56_41
BB56_40:
	xor	a, a
	ld	bc, -238
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	or	a, a
	sbc	hl, hl
	ex	de, hl
BB56_41:
	push	de
	call	_gfx_SetDraw
	pop	hl
	ld	bc, -238
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI56_0
JTI56_0:
	dl	BB56_6
	dl	BB56_34
	dl	BB56_36
	dl	BB56_9
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_39
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_40
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_36
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_6
	dl	BB56_39
	dl	BB56_9
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_34
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_40
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_4
	dl	BB56_13

	section	.text,"ax",@progbits
	public	__Z17redrawSaveOptionsv
__Z17redrawSaveOptionsv:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	call	__Z8fillDirtv
	ld	a, (_selectedSave)
	ld	e, a
	ld	a, (_offset)
	ld	iy, 0
	lea	hl, iy
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), hl
	ld	a, e
	or	a, a
	ld	hl, -2
	jr	nz, BB57_2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, 10
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	jr	BB57_3
BB57_2:
	push	iy
	call	_gfx_SetTextFGColor
BB57_3:
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 26
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedSave)
	ld	e, a
	ld	a, (_offset)
	ld	iy, 0
	lea	hl, iy
	ld	l, a
	inc	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), hl
	ld	a, e
	cp	a, 1
	jr	nz, BB57_5
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, 68
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	jr	BB57_6
BB57_5:
	push	iy
	call	_gfx_SetTextFGColor
BB57_6:
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 84
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedSave)
	ld	iyl, a
	ld	a, (_offset)
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	bc, 2
	add	hl, bc
	inc	bc
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), hl
	ld	a, iyl
	cp	a, 2
	ex	de, hl
	jr	nz, BB57_8
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, 125
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	jr	BB57_9
BB57_8:
	push	hl
	call	_gfx_SetTextFGColor
BB57_9:
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 141
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	a, (_selectedSave)
	ld	iyl, a
	ld	a, (_offset)
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	bc, 3
	add	hl, bc
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _saveNames
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), hl
	ld	a, iyl
	cp	a, 3
	ex	de, hl
	jr	nz, BB57_11
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, 183
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	jr	BB57_12
BB57_11:
	push	hl
	call	_gfx_SetTextFGColor
BB57_12:
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, 199
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_PrintStringXY
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z14drawSaveOptionjbPKcb
__Z14drawSaveOptionjbPKcb:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 7
	ld	sp, hl
	ld	de, (ix + 6)
	ld	a, (ix + 9)
	ld	(ix - 7), a
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
	ld	a, (ix + 15)
	ld	bc, 57
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	iy
	ld	bc, 10
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 1
	call	__iand
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, 2
	ex	de, hl
	or	a, a
	sbc	hl, bc
	sbc	hl, hl
	push	hl
	pop	de
	inc	de
	add	iy, de
	bit	0, a
	ld	(ix - 3), iy
	jr	z, BB58_2
	ld	hl, (_cursorBackground)
	push	iy
	ld	de, 110
	push	de
	push	hl
	call	_gfx_Sprite_NoClip
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
BB58_2:
	bit	0, (ix - 7)
	jr	z, BB58_4
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_cursorBackground)
	ld	de, (ix - 3)
	push	de
	ld	de, 110
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	jr	BB58_5
BB58_4:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
BB58_5:
	pop	hl
	ld	de, 16
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_GetStringWidth
	pop	de
	ld	c, 1
	call	__ishru
	push	hl
	pop	de
	ld	hl, 160
	or	a, a
	sbc	hl, de
	ld	de, (ix - 6)
	ld	(ix + 6), de
	ld	(ix + 9), hl
	ld	hl, (ix - 3)
	ld	(ix + 12), hl
	ld	sp, ix
	pop	ix
	jp	_gfx_PrintStringXY
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11initPalettev
__Z11initPalettev:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	hl, _.str.125
	ld	de, (_texturePackName)
	push	hl
	push	de
	call	_ti_Open
	ld	e, a
	ld	(ix - 3), de
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	push	de
	call	_ti_GetDataPtr
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 19
	ld	(_texPalette), hl
	ld	hl, (ix - 3)
	push	hl
	call	_ti_Close
	pop	hl
	ld	iy, (_texPalette)
	ld	de, -1900032
	lea	hl, iy
	ld	bc, 512
	ldir
	ld	de, 514
	lea	bc, iy
	push	bc
	pop	hl
	add	hl, de
	ld	(_bedrock_texture), hl
	ld	(_bedrock_texture+3), hl
	ld	(_bedrock_texture+6), hl
	ld	(_bedrock_texture+9), hl
	ld	(_bedrock_texture+12), hl
	ld	(_bedrock_texture+15), hl
	ld	de, 6658
	push	bc
	pop	hl
	add	hl, de
	ld	(_bookshelf_texture), hl
	push	hl
	pop	iy
	ld	de, 770
	push	bc
	pop	hl
	add	hl, de
	ld	(_bookshelf_texture+3), hl
	ld	(_bookshelf_texture+6), hl
	ld	(_bookshelf_texture+9), hl
	ld	(_bookshelf_texture+12), hl
	ld	(_bookshelf_texture+15), iy
	ld	(ix - 3), iy
	ld	de, 1026
	push	bc
	pop	hl
	add	hl, de
	ld	(_bricks_texture), hl
	ld	(_bricks_texture+3), hl
	ld	(_bricks_texture+6), hl
	ld	(_bricks_texture+9), hl
	ld	(_bricks_texture+12), hl
	ld	(_bricks_texture+15), hl
	ld	de, 1282
	push	bc
	pop	hl
	add	hl, de
	ld	(_coal_ore_texture), hl
	ld	(_coal_ore_texture+3), hl
	ld	(_coal_ore_texture+6), hl
	ld	(_coal_ore_texture+9), hl
	ld	(_coal_ore_texture+12), hl
	ld	(_coal_ore_texture+15), hl
	ld	de, 1538
	push	bc
	pop	hl
	add	hl, de
	ld	(_cobblestone_texture), hl
	ld	(_cobblestone_texture+3), hl
	ld	(_cobblestone_texture+6), hl
	ld	(_cobblestone_texture+9), hl
	ld	(_cobblestone_texture+12), hl
	ld	(_cobblestone_texture+15), hl
	ld	de, 1794
	push	bc
	pop	hl
	add	hl, de
	ld	(_cobblestone_mossy_texture), hl
	ld	(_cobblestone_mossy_texture+3), hl
	ld	(_cobblestone_mossy_texture+6), hl
	ld	(_cobblestone_mossy_texture+9), hl
	ld	(_cobblestone_mossy_texture+12), hl
	ld	(_cobblestone_mossy_texture+15), hl
	ld	de, 2050
	push	bc
	pop	hl
	add	hl, de
	ld	(_crafting_table_texture), hl
	ld	de, 2306
	push	bc
	pop	hl
	add	hl, de
	ld	(_crafting_table_texture+3), hl
	ld	de, 2562
	push	bc
	pop	hl
	add	hl, de
	ld	(_crafting_table_texture+6), hl
	ld	(_crafting_table_texture+9), hl
	ld	(_crafting_table_texture+12), hl
	ld	(_crafting_table_texture+15), iy
	ld	de, 2818
	push	bc
	pop	iy
	add	iy, de
	ld	(_dirt_texture), iy
	ld	(_dirt_texture+3), iy
	ld	(_dirt_texture+6), iy
	ld	(_dirt_texture+9), iy
	ld	(_dirt_texture+12), iy
	ld	(_dirt_texture+15), iy
	ld	de, 3074
	push	bc
	pop	hl
	add	hl, de
	ld	(ix - 6), hl
	ld	(_furnace_texture), hl
	push	bc
	pop	hl
	ld	de, 3330
	add	hl, de
	ld	(_furnace_texture+3), hl
	ld	de, 3586
	push	bc
	pop	hl
	add	hl, de
	ld	(_furnace_texture+6), hl
	ld	(_furnace_texture+9), hl
	ld	(_furnace_texture+12), hl
	ld	hl, (ix - 6)
	ld	(_furnace_texture+15), hl
	ld	de, 3842
	push	bc
	pop	hl
	add	hl, de
	ld	(_gold_block_texture), hl
	ld	(_gold_block_texture+3), hl
	ld	(_gold_block_texture+6), hl
	ld	(_gold_block_texture+9), hl
	ld	(_gold_block_texture+12), hl
	ld	(_gold_block_texture+15), hl
	ld	de, 4098
	push	bc
	pop	hl
	add	hl, de
	ld	(_grass_texture), hl
	ld	de, 4354
	push	bc
	pop	hl
	add	hl, de
	ld	(_grass_texture+3), hl
	ld	(_grass_texture+6), hl
	ld	(_grass_texture+9), hl
	ld	(_grass_texture+12), hl
	ld	(_grass_texture+15), iy
	ld	de, 4610
	push	bc
	pop	hl
	add	hl, de
	ld	(_gravel_texture), hl
	ld	(_gravel_texture+3), hl
	ld	(_gravel_texture+6), hl
	ld	(_gravel_texture+9), hl
	ld	(_gravel_texture+12), hl
	ld	(_gravel_texture+15), hl
	ld	de, 4866
	push	bc
	pop	hl
	add	hl, de
	ld	(_iron_block_texture), hl
	ld	(_iron_block_texture+3), hl
	ld	(_iron_block_texture+6), hl
	ld	(_iron_block_texture+9), hl
	ld	(_iron_block_texture+12), hl
	ld	(_iron_block_texture+15), hl
	ld	de, 5122
	push	bc
	pop	hl
	add	hl, de
	ld	(_iron_ore_texture), hl
	ld	(_iron_ore_texture+3), hl
	ld	(_iron_ore_texture+6), hl
	ld	(_iron_ore_texture+9), hl
	ld	(_iron_ore_texture+12), hl
	ld	(_iron_ore_texture+15), hl
	ld	de, 5378
	push	bc
	pop	hl
	add	hl, de
	ld	(_jukebox_texture), hl
	ld	de, 5634
	push	bc
	pop	hl
	add	hl, de
	ld	(_jukebox_texture+3), hl
	ld	(_jukebox_texture+6), hl
	ld	(_jukebox_texture+9), hl
	ld	(_jukebox_texture+12), hl
	ld	(_jukebox_texture+15), hl
	ld	de, 5890
	push	bc
	pop	hl
	add	hl, de
	ld	(_leaves_oak_texture), hl
	ld	(_leaves_oak_texture+3), hl
	ld	(_leaves_oak_texture+6), hl
	ld	(_leaves_oak_texture+9), hl
	ld	(_leaves_oak_texture+12), hl
	ld	(_leaves_oak_texture+15), hl
	ld	de, 6146
	push	bc
	pop	hl
	add	hl, de
	ld	(_log_oak_texture), hl
	ld	de, 6402
	push	bc
	pop	hl
	add	hl, de
	ld	(_log_oak_texture+3), hl
	ld	(_log_oak_texture+6), hl
	ld	(_log_oak_texture+9), hl
	ld	(_log_oak_texture+12), hl
	ld	(_log_oak_texture+15), hl
	ld	hl, (ix - 3)
	ld	(_planks_texture), hl
	ld	(_planks_texture+3), hl
	ld	(_planks_texture+6), hl
	ld	(_planks_texture+9), hl
	ld	(_planks_texture+12), hl
	ld	(_planks_texture+15), hl
	ld	de, 6914
	push	bc
	pop	hl
	add	hl, de
	ld	(_sand_texture), hl
	ld	(_sand_texture+3), hl
	ld	(_sand_texture+6), hl
	ld	(_sand_texture+9), hl
	ld	(_sand_texture+12), hl
	ld	(_sand_texture+15), hl
	ld	de, 7170
	push	bc
	pop	iy
	add	iy, de
	ld	(_smooth_stone_texture), iy
	ld	de, 7426
	push	bc
	pop	hl
	add	hl, de
	ld	(_smooth_stone_texture+3), hl
	ld	(_smooth_stone_texture+6), hl
	ld	(_smooth_stone_texture+9), hl
	ld	(_smooth_stone_texture+12), hl
	ld	(_smooth_stone_texture+15), iy
	ld	de, 7682
	push	bc
	pop	hl
	add	hl, de
	ld	(_sponge_texture), hl
	ld	(_sponge_texture+3), hl
	ld	(_sponge_texture+6), hl
	ld	(_sponge_texture+9), hl
	ld	(_sponge_texture+12), hl
	ld	(_sponge_texture+15), hl
	ld	de, 7938
	push	bc
	pop	hl
	add	hl, de
	ld	(_stone_texture), hl
	ld	(_stone_texture+3), hl
	ld	(_stone_texture+6), hl
	ld	(_stone_texture+9), hl
	ld	(_stone_texture+12), hl
	ld	(_stone_texture+15), hl
	ld	de, 8194
	push	bc
	pop	hl
	add	hl, de
	ld	(_tnt_texture), hl
	ld	de, 8450
	push	bc
	pop	hl
	add	hl, de
	ld	(_tnt_texture+3), hl
	ld	(_tnt_texture+6), hl
	ld	(_tnt_texture+9), hl
	ld	(_tnt_texture+12), hl
	ld	de, 8706
	push	bc
	pop	hl
	add	hl, de
	ld	(_tnt_texture+15), hl
	ld	de, 9218
	push	bc
	pop	hl
	add	hl, de
	ld	(_diamond_texture), hl
	ld	(_diamond_texture+3), hl
	ld	(_diamond_texture+6), hl
	ld	(_diamond_texture+9), hl
	ld	(_diamond_texture+12), hl
	ld	(_diamond_texture+15), hl
	ld	de, 8962
	push	bc
	pop	hl
	add	hl, de
	ld	(_glass_texture), hl
	ld	(_glass_texture+3), hl
	ld	(_glass_texture+6), hl
	ld	(_glass_texture+9), hl
	ld	(_glass_texture+12), hl
	ld	(_glass_texture+15), hl
	ld	de, 9986
	push	bc
	pop	hl
	add	hl, de
	ld	(_stonebrick_texture), hl
	ld	(_stonebrick_texture+3), hl
	ld	(_stonebrick_texture+6), hl
	ld	(_stonebrick_texture+9), hl
	ld	(_stonebrick_texture+12), hl
	ld	(_stonebrick_texture+15), hl
	ld	de, 9730
	push	bc
	pop	hl
	add	hl, de
	ld	(_emerald_texture), hl
	ld	(_emerald_texture+3), hl
	ld	(_emerald_texture+6), hl
	ld	(_emerald_texture+9), hl
	ld	(_emerald_texture+12), hl
	ld	(_emerald_texture+15), hl
	ld	de, 9474
	push	bc
	pop	hl
	add	hl, de
	ld	(_lapis_texture), hl
	ld	(_lapis_texture+3), hl
	ld	(_lapis_texture+6), hl
	ld	(_lapis_texture+9), hl
	ld	(_lapis_texture+12), hl
	ld	(_lapis_texture+15), hl
	ld	de, 10498
	push	bc
	pop	iy
	add	iy, de
	ld	(_pumpkin_texture), iy
	ld	de, 11010
	push	bc
	pop	hl
	add	hl, de
	ld	(_pumpkin_texture+3), hl
	ld	de, 10754
	push	bc
	pop	hl
	add	hl, de
	ld	(_pumpkin_texture+6), hl
	ld	(_pumpkin_texture+9), hl
	ld	(_pumpkin_texture+12), hl
	ld	(_pumpkin_texture+15), iy
	ld	de, 10242
	push	bc
	pop	hl
	add	hl, de
	ld	(_snow_texture), hl
	ld	(_snow_texture+3), hl
	ld	(_snow_texture+6), hl
	ld	(_snow_texture+9), hl
	ld	(_snow_texture+12), hl
	ld	(_snow_texture+15), hl
	ld	de, 11266
	push	bc
	pop	hl
	add	hl, de
	ld	(_red_wool_texture), hl
	ld	(_red_wool_texture+3), hl
	ld	(_red_wool_texture+6), hl
	ld	(_red_wool_texture+9), hl
	ld	(_red_wool_texture+12), hl
	ld	(_red_wool_texture+15), hl
	ld	de, 11522
	push	bc
	pop	hl
	add	hl, de
	ld	(_orange_wool_texture), hl
	ld	(_orange_wool_texture+3), hl
	ld	(_orange_wool_texture+6), hl
	ld	(_orange_wool_texture+9), hl
	ld	(_orange_wool_texture+12), hl
	ld	(_orange_wool_texture+15), hl
	ld	de, 11778
	push	bc
	pop	hl
	add	hl, de
	ld	(_yellow_wool_texture), hl
	ld	(_yellow_wool_texture+3), hl
	ld	(_yellow_wool_texture+6), hl
	ld	(_yellow_wool_texture+9), hl
	ld	(_yellow_wool_texture+12), hl
	ld	(_yellow_wool_texture+15), hl
	ld	de, 12034
	push	bc
	pop	hl
	add	hl, de
	ld	(_lime_green_wool_texture), hl
	ld	(_lime_green_wool_texture+3), hl
	ld	(_lime_green_wool_texture+6), hl
	ld	(_lime_green_wool_texture+9), hl
	ld	(_lime_green_wool_texture+12), hl
	ld	(_lime_green_wool_texture+15), hl
	ld	de, 12290
	push	bc
	pop	hl
	add	hl, de
	ld	(_green_wool_texture), hl
	ld	(_green_wool_texture+3), hl
	ld	(_green_wool_texture+6), hl
	ld	(_green_wool_texture+9), hl
	ld	(_green_wool_texture+12), hl
	ld	(_green_wool_texture+15), hl
	ld	de, 12546
	push	bc
	pop	hl
	add	hl, de
	ld	(_cyan_wool_texture), hl
	ld	(_cyan_wool_texture+3), hl
	ld	(_cyan_wool_texture+6), hl
	ld	(_cyan_wool_texture+9), hl
	ld	(_cyan_wool_texture+12), hl
	ld	(_cyan_wool_texture+15), hl
	ld	de, 12802
	push	bc
	pop	hl
	add	hl, de
	ld	(_light_blue_wool_texture), hl
	ld	(_light_blue_wool_texture+3), hl
	ld	(_light_blue_wool_texture+6), hl
	ld	(_light_blue_wool_texture+9), hl
	ld	(_light_blue_wool_texture+12), hl
	ld	(_light_blue_wool_texture+15), hl
	ld	de, 13058
	push	bc
	pop	hl
	add	hl, de
	ld	(_blue_wool_texture), hl
	ld	(_blue_wool_texture+3), hl
	ld	(_blue_wool_texture+6), hl
	ld	(_blue_wool_texture+9), hl
	ld	(_blue_wool_texture+12), hl
	ld	(_blue_wool_texture+15), hl
	ld	de, 13314
	push	bc
	pop	hl
	add	hl, de
	ld	(_pink_wool_texture), hl
	ld	(_pink_wool_texture+3), hl
	ld	(_pink_wool_texture+6), hl
	ld	(_pink_wool_texture+9), hl
	ld	(_pink_wool_texture+12), hl
	ld	(_pink_wool_texture+15), hl
	ld	de, 13570
	push	bc
	pop	hl
	add	hl, de
	ld	(_magenta_wool_texture), hl
	ld	(_magenta_wool_texture+3), hl
	ld	(_magenta_wool_texture+6), hl
	ld	(_magenta_wool_texture+9), hl
	ld	(_magenta_wool_texture+12), hl
	ld	(_magenta_wool_texture+15), hl
	ld	de, 14082
	push	bc
	pop	hl
	add	hl, de
	ld	(_black_wool_texture), hl
	ld	(_black_wool_texture+3), hl
	ld	(_black_wool_texture+6), hl
	ld	(_black_wool_texture+9), hl
	ld	(_black_wool_texture+12), hl
	ld	(_black_wool_texture+15), hl
	ld	de, 14338
	push	bc
	pop	hl
	add	hl, de
	ld	(_brown_wool_texture), hl
	ld	(_brown_wool_texture+3), hl
	ld	(_brown_wool_texture+6), hl
	ld	(_brown_wool_texture+9), hl
	ld	(_brown_wool_texture+12), hl
	ld	(_brown_wool_texture+15), hl
	ld	de, 14594
	push	bc
	pop	hl
	add	hl, de
	ld	(_grey_wool_texture), hl
	ld	(_grey_wool_texture+3), hl
	ld	(_grey_wool_texture+6), hl
	ld	(_grey_wool_texture+9), hl
	ld	(_grey_wool_texture+12), hl
	ld	(_grey_wool_texture+15), hl
	ld	de, 14850
	push	bc
	pop	hl
	add	hl, de
	ld	(_light_grey_wool_texture), hl
	ld	(_light_grey_wool_texture+3), hl
	ld	(_light_grey_wool_texture+6), hl
	ld	(_light_grey_wool_texture+9), hl
	ld	(_light_grey_wool_texture+12), hl
	ld	(_light_grey_wool_texture+15), hl
	ld	de, 15106
	push	bc
	pop	hl
	add	hl, de
	ld	(_white_wool_texture), hl
	ld	(_white_wool_texture+3), hl
	ld	(_white_wool_texture+6), hl
	ld	(_white_wool_texture+9), hl
	ld	(_white_wool_texture+12), hl
	ld	(_white_wool_texture+15), hl
	ld	de, 15362
	push	bc
	pop	hl
	add	hl, de
	ld	(_quartz_texture), hl
	ld	(_quartz_texture+3), hl
	ld	(_quartz_texture+6), hl
	ld	(_quartz_texture+9), hl
	ld	(_quartz_texture+12), hl
	ld	(_quartz_texture+15), hl
	ld	de, 15618
	push	bc
	pop	hl
	add	hl, de
	ld	(_hay_block_texture), hl
	ld	de, 15874
	push	bc
	pop	hl
	add	hl, de
	ld	(_hay_block_texture+3), hl
	ld	(_hay_block_texture+6), hl
	ld	(_hay_block_texture+9), hl
	ld	(_hay_block_texture+12), hl
	ld	(_hay_block_texture+15), hl
	ld	de, 16130
	push	bc
	pop	hl
	add	hl, de
	ld	(_bacon_texture), hl
	ld	(_bacon_texture+3), hl
	ld	(_bacon_texture+6), hl
	ld	(_bacon_texture+9), hl
	ld	(_bacon_texture+12), hl
	ld	(_bacon_texture+15), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_crc32_tab
_crc32_tab:
	dd	0
	dd	1996959894
	dd	3993919788
	dd	2567524794
	dd	124634137
	dd	1886057615
	dd	3915621685
	dd	2657392035
	dd	249268274
	dd	2044508324
	dd	3772115230
	dd	2547177864
	dd	162941995
	dd	2125561021
	dd	3887607047
	dd	2428444049
	dd	498536548
	dd	1789927666
	dd	4089016648
	dd	2227061214
	dd	450548861
	dd	1843258603
	dd	4107580753
	dd	2211677639
	dd	325883990
	dd	1684777152
	dd	4251122042
	dd	2321926636
	dd	335633487
	dd	1661365465
	dd	4195302755
	dd	2366115317
	dd	997073096
	dd	1281953886
	dd	3579855332
	dd	2724688242
	dd	1006888145
	dd	1258607687
	dd	3524101629
	dd	2768942443
	dd	901097722
	dd	1119000684
	dd	3686517206
	dd	2898065728
	dd	853044451
	dd	1172266101
	dd	3705015759
	dd	2882616665
	dd	651767980
	dd	1373503546
	dd	3369554304
	dd	3218104598
	dd	565507253
	dd	1454621731
	dd	3485111705
	dd	3099436303
	dd	671266974
	dd	1594198024
	dd	3322730930
	dd	2970347812
	dd	795835527
	dd	1483230225
	dd	3244367275
	dd	3060149565
	dd	1994146192
	dd	31158534
	dd	2563907772
	dd	4023717930
	dd	1907459465
	dd	112637215
	dd	2680153253
	dd	3904427059
	dd	2013776290
	dd	251722036
	dd	2517215374
	dd	3775830040
	dd	2137656763
	dd	141376813
	dd	2439277719
	dd	3865271297
	dd	1802195444
	dd	476864866
	dd	2238001368
	dd	4066508878
	dd	1812370925
	dd	453092731
	dd	2181625025
	dd	4111451223
	dd	1706088902
	dd	314042704
	dd	2344532202
	dd	4240017532
	dd	1658658271
	dd	366619977
	dd	2362670323
	dd	4224994405
	dd	1303535960
	dd	984961486
	dd	2747007092
	dd	3569037538
	dd	1256170817
	dd	1037604311
	dd	2765210733
	dd	3554079995
	dd	1131014506
	dd	879679996
	dd	2909243462
	dd	3663771856
	dd	1141124467
	dd	855842277
	dd	2852801631
	dd	3708648649
	dd	1342533948
	dd	654459306
	dd	3188396048
	dd	3373015174
	dd	1466479909
	dd	544179635
	dd	3110523913
	dd	3462522015
	dd	1591671054
	dd	702138776
	dd	2966460450
	dd	3352799412
	dd	1504918807
	dd	783551873
	dd	3082640443
	dd	3233442989
	dd	3988292384
	dd	2596254646
	dd	62317068
	dd	1957810842
	dd	3939845945
	dd	2647816111
	dd	81470997
	dd	1943803523
	dd	3814918930
	dd	2489596804
	dd	225274430
	dd	2053790376
	dd	3826175755
	dd	2466906013
	dd	167816743
	dd	2097651377
	dd	4027552580
	dd	2265490386
	dd	503444072
	dd	1762050814
	dd	4150417245
	dd	2154129355
	dd	426522225
	dd	1852507879
	dd	4275313526
	dd	2312317920
	dd	282753626
	dd	1742555852
	dd	4189708143
	dd	2394877945
	dd	397917763
	dd	1622183637
	dd	3604390888
	dd	2714866558
	dd	953729732
	dd	1340076626
	dd	3518719985
	dd	2797360999
	dd	1068828381
	dd	1219638859
	dd	3624741850
	dd	2936675148
	dd	906185462
	dd	1090812512
	dd	3747672003
	dd	2825379669
	dd	829329135
	dd	1181335161
	dd	3412177804
	dd	3160834842
	dd	628085408
	dd	1382605366
	dd	3423369109
	dd	3138078467
	dd	570562233
	dd	1426400815
	dd	3317316542
	dd	2998733608
	dd	733239954
	dd	1555261956
	dd	3268935591
	dd	3050360625
	dd	752459403
	dd	1541320221
	dd	2607071920
	dd	3965973030
	dd	1969922972
	dd	40735498
	dd	2617837225
	dd	3943577151
	dd	1913087877
	dd	83908371
	dd	2512341634
	dd	3803740692
	dd	2075208622
	dd	213261112
	dd	2463272603
	dd	3855990285
	dd	2094854071
	dd	198958881
	dd	2262029012
	dd	4057260610
	dd	1759359992
	dd	534414190
	dd	2176718541
	dd	4139329115
	dd	1873836001
	dd	414664567
	dd	2282248934
	dd	4279200368
	dd	1711684554
	dd	285281116
	dd	2405801727
	dd	4167216745
	dd	1634467795
	dd	376229701
	dd	2685067896
	dd	3608007406
	dd	1308918612
	dd	956543938
	dd	2808555105
	dd	3495958263
	dd	1231636301
	dd	1047427035
	dd	2932959818
	dd	3654703836
	dd	1088359270
	dd	936918000
	dd	2847714899
	dd	3736837829
	dd	1202900863
	dd	817233897
	dd	3183342108
	dd	3401237130
	dd	1404277552
	dd	615818150
	dd	3134207493
	dd	3453421203
	dd	1423857449
	dd	601450431
	dd	3009837614
	dd	3294710456
	dd	1567103746
	dd	711928724
	dd	3020668471
	dd	3272380065
	dd	1510334235
	dd	755167117

	section	.bss,"aw",@nobits
	private	_global
_global:
	rb	1797

	section	.bss,"aw",@nobits
	public	_usberr
_usberr:
	rb	3

	section	.bss,"aw",@nobits
	public	_msderr
_msderr:
	rb	3

	section	.bss,"aw",@nobits
	public	_msdinfo
_msdinfo:
	rb	8

	section	.bss,"aw",@nobits
	private	_partitions
_partitions:
	rb	256

	section	.bss,"aw",@nobits
	public	_num_partitions
_num_partitions:
	rb	1

	section	.bss,"aw",@nobits
	public	_faterr
_faterr:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Failed to create file", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Failed to open file", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Failed to set size", 0

	section	.bss,"aw",@nobits
	public	_playerCursorX
_playerCursorX:
	rb	3

	section	.bss,"aw",@nobits
	public	_playerCursorY
_playerCursorY:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"WARNING!! Not enough free user mem to run TICRAFT! Continuing may result in corruption or your calculator crashing and resetting. Try deleting or archiving some programs or AppVars. Press ""Enter"" to continue or press any other key to exit.", 0

	section	.rodata,"a",@progbits
	private	_.str.1.5
_.str.1.5:
	db	"Would you like to load from archive or USB?", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"Do not unplug the drive until", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"the save is loaded.", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"Press any key to cancel loading from USB", 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"(Doing so will result in the genration of", 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"a new world)", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"Loading...", 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"Welcome to TICraft v1.0.0! While you wait:", 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"Controls:", 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"Graph/Clear: Exit/Emergency Exit", 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"Cursor controls:", 0

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"5: Place/Remove a block", 0

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	"8/2/4/6: Move forwards/backwards/left/right", 0

	section	.rodata,"a",@progbits
	private	_.str.17
_.str.17:
	db	"Multiply/Subtract: Move up/down", 0

	section	.rodata,"a",@progbits
	private	_.str.18
_.str.18:
	db	"9/1: Move diagonally forward/backward", 0

	section	.rodata,"a",@progbits
	private	_.str.19
_.str.19:
	db	"7/3: Move diagonally left/right", 0

	section	.rodata,"a",@progbits
	private	_.str.20
_.str.20:
	db	"Camera controls:", 0

	section	.rodata,"a",@progbits
	private	_.str.21
_.str.21:
	db	"Up/Down: Move forwards/backwards", 0

	section	.rodata,"a",@progbits
	private	_.str.22
_.str.22:
	db	"Left/Right: Move left/right", 0

	section	.rodata,"a",@progbits
	private	_.str.23
_.str.23:
	db	"Del/Stat: Move up/down", 0

	section	.rodata,"a",@progbits
	private	_.str.24
_.str.24:
	db	"Prgm/Cos/Sin/Tan: Rotate up/down/left/right", 0

	section	.rodata,"a",@progbits
	private	_.str.25
_.str.25:
	db	"Alpha: Move to show the cursor", 0

	section	.rodata,"a",@progbits
	private	_.str.26
_.str.26:
	db	"Enter: Show the block selection menu", 0

	section	.rodata,"a",@progbits
	private	_.str.27
_.str.27:
	db	"Mode: Perform a full re-render of the screen", 0

	section	.rodata,"a",@progbits
	private	_.str.28
_.str.28:
	db	"Made by Logan C.", 0

	section	.rodata,"a",@progbits
	private	_.str.29
_.str.29:
	db	"Press any key to begin.", 0

	section	.rodata,"a",@progbits
	private	_.str.30
_.str.30:
	db	"Loaded!", 0

	section	.rodata,"a",@progbits
	private	_.str.31
_.str.31:
	db	"Texture pack is invalid (", 0

	section	.rodata,"a",@progbits
	private	_.str.32
_.str.32:
	db	"). Please select another texture pack or load on the texture pack again. Press any key to continue.", 0

	section	.rodata,"a",@progbits
	private	_.str.33
_.str.33:
	db	"TICRAFT_TEXTURES", 0

	section	.rodata,"a",@progbits
	private	_.str.35
_.str.35:
	db	"none were found", 0

	section	.rodata,"a",@progbits
	private	_.str.36
_.str.36:
	db	"Please select a", 0

	section	.rodata,"a",@progbits
	private	_.str.37
_.str.37:
	db	"texture pack.", 0

	section	.rodata,"a",@progbits
	private	_.str.38
_.str.38:
	db	"Verifying texture pack, please wait...", 0

	section	.rodata,"a",@progbits
	private	_.str.39
_.str.39:
	db	"bad magic bytes", 0

	section	.rodata,"a",@progbits
	private	_.str.40
_.str.40:
	db	"for the wrong version of TICRAFT", 0

	section	.rodata,"a",@progbits
	private	_.str.41
_.str.41:
	db	"bad checksum", 0

	section	.bss,"aw",@nobits
	public	_zSortedObjects
_zSortedObjects:
	rb	3

	section	.bss,"aw",@nobits
	public	_buffer
_buffer:
	rb	200

	section	.bss,"aw",@nobits
	public	_outOfBoundsPolygons
_outOfBoundsPolygons:
	rb	3

	section	.bss,"aw",@nobits
	public	_obscuredPolygons
_obscuredPolygons:
	rb	3

	section	.data,"aw",@progbits
	public	_face5points
_face5points:
	db	""

	section	.data,"aw",@progbits
	public	_face4points
_face4points:
	db	""

	section	.data,"aw",@progbits
	public	_face3points
_face3points:
	db	""

	section	.data,"aw",@progbits
	public	_face2Points
_face2Points:
	db	0, ""

	section	.data,"aw",@progbits
	public	_face1Points
_face1Points:
	db	"", 0, ""

	section	.data,"aw",@progbits
	public	_face0Points
_face0Points:
	db	"", 0

	section	.rodata,"a",@progbits
	private	__ZL12cubePolygons
__ZL12cubePolygons:
	dl	_face0Points
	db	0
	dw	0
	dw	0
	dw	0
	dl	_face1Points
	db	1
	dw	0
	dw	0
	dw	0
	dl	_face2Points
	db	2
	dw	0
	dw	0
	dw	0
	dl	_face3points
	db	3
	dw	0
	dw	0
	dw	0
	dl	_face4points
	db	4
	dw	0
	dw	0
	dw	0
	dl	_face5points
	db	5
	dw	0
	dw	0
	dw	0

	section	.data,"aw",@progbits
	public	_selectedObject
_selectedObject:
	db	10

	section	.data,"aw",@progbits
	public	_playerCursor
_playerCursor:
	db	48 dup 0
	db	10
	dl	81920
	dl	81920
	dl	81920
	db	1
	db	1

	section	.rodata,"a",@progbits
	private	_.str.57
_.str.57:
	db	"WORLD1", 0

	section	.rodata,"a",@progbits
	private	_.str.1.58
_.str.1.58:
	db	"WORLD2", 0

	section	.rodata,"a",@progbits
	private	_.str.2.59
_.str.2.59:
	db	"WORLD3", 0

	section	.rodata,"a",@progbits
	private	_.str.3.60
_.str.3.60:
	db	"WORLD4", 0

	section	.rodata,"a",@progbits
	private	_.str.4.61
_.str.4.61:
	db	"WORLD5", 0

	section	.rodata,"a",@progbits
	private	_.str.5.62
_.str.5.62:
	db	"WORLD6", 0

	section	.rodata,"a",@progbits
	private	_.str.6.63
_.str.6.63:
	db	"WORLD7", 0

	section	.rodata,"a",@progbits
	private	_.str.7.64
_.str.7.64:
	db	"WORLD8", 0

	section	.rodata,"a",@progbits
	private	_.str.8.65
_.str.8.65:
	db	"WORLD9", 0

	section	.rodata,"a",@progbits
	private	_.str.9.66
_.str.9.66:
	db	"WORLD10", 0

	section	.rodata,"a",@progbits
	private	_.str.10.67
_.str.10.67:
	db	"WORLD11", 0

	section	.rodata,"a",@progbits
	private	_.str.11.68
_.str.11.68:
	db	"WORLD12", 0

	section	.rodata,"a",@progbits
	private	_.str.12.69
_.str.12.69:
	db	"WORLD13", 0

	section	.rodata,"a",@progbits
	private	_.str.13.70
_.str.13.70:
	db	"WORLD14", 0

	section	.rodata,"a",@progbits
	private	_.str.14.71
_.str.14.71:
	db	"WORLD15", 0

	section	.rodata,"a",@progbits
	private	_.str.15.72
_.str.15.72:
	db	"WORLD16", 0

	section	.rodata,"a",@progbits
	private	_.str.16.73
_.str.16.73:
	db	"WORLD17", 0

	section	.rodata,"a",@progbits
	private	_.str.17.74
_.str.17.74:
	db	"WORLD18", 0

	section	.rodata,"a",@progbits
	private	_.str.18.75
_.str.18.75:
	db	"WORLD19", 0

	section	.rodata,"a",@progbits
	private	_.str.19.76
_.str.19.76:
	db	"WORLD20", 0

	section	.rodata,"a",@progbits
	private	_.str.20.77
_.str.20.77:
	db	"WORLD21", 0

	section	.rodata,"a",@progbits
	private	_.str.21.78
_.str.21.78:
	db	"WORLD22", 0

	section	.rodata,"a",@progbits
	private	_.str.22.79
_.str.22.79:
	db	"WORLD23", 0

	section	.rodata,"a",@progbits
	private	_.str.23.80
_.str.23.80:
	db	"WORLD24", 0

	section	.rodata,"a",@progbits
	private	_.str.24.81
_.str.24.81:
	db	"WORLD25", 0

	section	.rodata,"a",@progbits
	private	_.str.25.82
_.str.25.82:
	db	"WORLD26", 0

	section	.rodata,"a",@progbits
	private	_.str.26.83
_.str.26.83:
	db	"WORLD27", 0

	section	.rodata,"a",@progbits
	private	_.str.27.84
_.str.27.84:
	db	"WORLD28", 0

	section	.rodata,"a",@progbits
	private	_.str.28.85
_.str.28.85:
	db	"WORLD29", 0

	section	.rodata,"a",@progbits
	private	_.str.29.86
_.str.29.86:
	db	"WORLD30", 0

	section	.rodata,"a",@progbits
	private	_.str.30.87
_.str.30.87:
	db	"WORLD31", 0

	section	.rodata,"a",@progbits
	private	_.str.31.88
_.str.31.88:
	db	"WORLD32", 0

	section	.rodata,"a",@progbits
	private	_.str.32.89
_.str.32.89:
	db	"WORLD33", 0

	section	.rodata,"a",@progbits
	private	_.str.33.90
_.str.33.90:
	db	"WORLD34", 0

	section	.rodata,"a",@progbits
	private	_.str.34.91
_.str.34.91:
	db	"WORLD35", 0

	section	.rodata,"a",@progbits
	private	_.str.35.92
_.str.35.92:
	db	"WORLD36", 0

	section	.rodata,"a",@progbits
	private	_.str.36.93
_.str.36.93:
	db	"WORLD37", 0

	section	.rodata,"a",@progbits
	private	_.str.37.94
_.str.37.94:
	db	"WORLD38", 0

	section	.rodata,"a",@progbits
	private	_.str.38.95
_.str.38.95:
	db	"WORLD39", 0

	section	.rodata,"a",@progbits
	private	_.str.39.96
_.str.39.96:
	db	"WORLD40", 0

	section	.rodata,"a",@progbits
	private	_.str.40.97
_.str.40.97:
	db	"WORLD41", 0

	section	.rodata,"a",@progbits
	private	_.str.41.98
_.str.41.98:
	db	"WORLD42", 0

	section	.rodata,"a",@progbits
	private	_.str.42
_.str.42:
	db	"WORLD43", 0

	section	.rodata,"a",@progbits
	private	_.str.43
_.str.43:
	db	"WORLD44", 0

	section	.rodata,"a",@progbits
	private	_.str.44
_.str.44:
	db	"WORLD45", 0

	section	.rodata,"a",@progbits
	private	_.str.45
_.str.45:
	db	"WORLD46", 0

	section	.rodata,"a",@progbits
	private	_.str.46
_.str.46:
	db	"WORLD47", 0

	section	.rodata,"a",@progbits
	private	_.str.47
_.str.47:
	db	"WORLD48", 0

	section	.rodata,"a",@progbits
	private	_.str.48
_.str.48:
	db	"WORLD49", 0

	section	.rodata,"a",@progbits
	private	_.str.49
_.str.49:
	db	"WORLD50", 0

	section	.rodata,"a",@progbits
	private	_.str.50
_.str.50:
	db	"WORLD51", 0

	section	.rodata,"a",@progbits
	private	_.str.51
_.str.51:
	db	"WORLD52", 0

	section	.rodata,"a",@progbits
	private	_.str.52
_.str.52:
	db	"WORLD53", 0

	section	.rodata,"a",@progbits
	private	_.str.53
_.str.53:
	db	"WORLD54", 0

	section	.rodata,"a",@progbits
	private	_.str.54
_.str.54:
	db	"WORLD55", 0

	section	.rodata,"a",@progbits
	private	_.str.55
_.str.55:
	db	"WORLD56", 0

	section	.rodata,"a",@progbits
	private	_.str.56
_.str.56:
	db	"WORLD57", 0

	section	.rodata,"a",@progbits
	private	_.str.57.99
_.str.57.99:
	db	"WORLD58", 0

	section	.rodata,"a",@progbits
	private	_.str.58
_.str.58:
	db	"WORLD59", 0

	section	.rodata,"a",@progbits
	private	_.str.59
_.str.59:
	db	"WORLD60", 0

	section	.rodata,"a",@progbits
	private	_.str.60
_.str.60:
	db	"WORLD61", 0

	section	.rodata,"a",@progbits
	private	_.str.61
_.str.61:
	db	"WORLD62", 0

	section	.rodata,"a",@progbits
	private	_.str.62
_.str.62:
	db	"WORLD63", 0

	section	.rodata,"a",@progbits
	private	_.str.63
_.str.63:
	db	"WORLD64", 0

	section	.rodata,"a",@progbits
	private	_.str.64
_.str.64:
	db	"WORLD65", 0

	section	.rodata,"a",@progbits
	private	_.str.65
_.str.65:
	db	"WORLD66", 0

	section	.rodata,"a",@progbits
	private	_.str.66
_.str.66:
	db	"WORLD67", 0

	section	.rodata,"a",@progbits
	private	_.str.67
_.str.67:
	db	"WORLD68", 0

	section	.rodata,"a",@progbits
	private	_.str.68
_.str.68:
	db	"WORLD69", 0

	section	.rodata,"a",@progbits
	private	_.str.69
_.str.69:
	db	"WORLD70", 0

	section	.rodata,"a",@progbits
	private	_.str.70
_.str.70:
	db	"WORLD71", 0

	section	.rodata,"a",@progbits
	private	_.str.71
_.str.71:
	db	"WORLD72", 0

	section	.rodata,"a",@progbits
	private	_.str.72
_.str.72:
	db	"WORLD73", 0

	section	.rodata,"a",@progbits
	private	_.str.73
_.str.73:
	db	"WORLD74", 0

	section	.rodata,"a",@progbits
	private	_.str.74
_.str.74:
	db	"WORLD75", 0

	section	.rodata,"a",@progbits
	private	_.str.75
_.str.75:
	db	"WORLD76", 0

	section	.rodata,"a",@progbits
	private	_.str.76
_.str.76:
	db	"WORLD77", 0

	section	.rodata,"a",@progbits
	private	_.str.77
_.str.77:
	db	"WORLD78", 0

	section	.rodata,"a",@progbits
	private	_.str.78
_.str.78:
	db	"WORLD79", 0

	section	.rodata,"a",@progbits
	private	_.str.79
_.str.79:
	db	"WORLD80", 0

	section	.rodata,"a",@progbits
	private	_.str.80
_.str.80:
	db	"WORLD81", 0

	section	.rodata,"a",@progbits
	private	_.str.81
_.str.81:
	db	"WORLD82", 0

	section	.rodata,"a",@progbits
	private	_.str.82
_.str.82:
	db	"WORLD83", 0

	section	.rodata,"a",@progbits
	private	_.str.83
_.str.83:
	db	"WORLD84", 0

	section	.rodata,"a",@progbits
	private	_.str.84
_.str.84:
	db	"WORLD85", 0

	section	.rodata,"a",@progbits
	private	_.str.85
_.str.85:
	db	"WORLD86", 0

	section	.rodata,"a",@progbits
	private	_.str.86
_.str.86:
	db	"WORLD87", 0

	section	.rodata,"a",@progbits
	private	_.str.87
_.str.87:
	db	"WORLD88", 0

	section	.rodata,"a",@progbits
	private	_.str.88
_.str.88:
	db	"WORLD89", 0

	section	.rodata,"a",@progbits
	private	_.str.89
_.str.89:
	db	"WORLD90", 0

	section	.rodata,"a",@progbits
	private	_.str.90
_.str.90:
	db	"WORLD91", 0

	section	.rodata,"a",@progbits
	private	_.str.91
_.str.91:
	db	"WORLD92", 0

	section	.rodata,"a",@progbits
	private	_.str.92
_.str.92:
	db	"WORLD93", 0

	section	.rodata,"a",@progbits
	private	_.str.93
_.str.93:
	db	"WORLD94", 0

	section	.rodata,"a",@progbits
	private	_.str.94
_.str.94:
	db	"WORLD95", 0

	section	.rodata,"a",@progbits
	private	_.str.95
_.str.95:
	db	"WORLD96", 0

	section	.rodata,"a",@progbits
	private	_.str.96
_.str.96:
	db	"WORLD97", 0

	section	.rodata,"a",@progbits
	private	_.str.97
_.str.97:
	db	"WORLD98", 0

	section	.rodata,"a",@progbits
	private	_.str.98
_.str.98:
	db	"WORLD99", 0

	section	.rodata,"a",@progbits
	private	_.str.99
_.str.99:
	db	"WORLD100", 0

	section	.data,"aw",@progbits
	public	_saveNames
_saveNames:
	dl	_.str.57
	dl	_.str.1.58
	dl	_.str.2.59
	dl	_.str.3.60
	dl	_.str.4.61
	dl	_.str.5.62
	dl	_.str.6.63
	dl	_.str.7.64
	dl	_.str.8.65
	dl	_.str.9.66
	dl	_.str.10.67
	dl	_.str.11.68
	dl	_.str.12.69
	dl	_.str.13.70
	dl	_.str.14.71
	dl	_.str.15.72
	dl	_.str.16.73
	dl	_.str.17.74
	dl	_.str.18.75
	dl	_.str.19.76
	dl	_.str.20.77
	dl	_.str.21.78
	dl	_.str.22.79
	dl	_.str.23.80
	dl	_.str.24.81
	dl	_.str.25.82
	dl	_.str.26.83
	dl	_.str.27.84
	dl	_.str.28.85
	dl	_.str.29.86
	dl	_.str.30.87
	dl	_.str.31.88
	dl	_.str.32.89
	dl	_.str.33.90
	dl	_.str.34.91
	dl	_.str.35.92
	dl	_.str.36.93
	dl	_.str.37.94
	dl	_.str.38.95
	dl	_.str.39.96
	dl	_.str.40.97
	dl	_.str.41.98
	dl	_.str.42
	dl	_.str.43
	dl	_.str.44
	dl	_.str.45
	dl	_.str.46
	dl	_.str.47
	dl	_.str.48
	dl	_.str.49
	dl	_.str.50
	dl	_.str.51
	dl	_.str.52
	dl	_.str.53
	dl	_.str.54
	dl	_.str.55
	dl	_.str.56
	dl	_.str.57.99
	dl	_.str.58
	dl	_.str.59
	dl	_.str.60
	dl	_.str.61
	dl	_.str.62
	dl	_.str.63
	dl	_.str.64
	dl	_.str.65
	dl	_.str.66
	dl	_.str.67
	dl	_.str.68
	dl	_.str.69
	dl	_.str.70
	dl	_.str.71
	dl	_.str.72
	dl	_.str.73
	dl	_.str.74
	dl	_.str.75
	dl	_.str.76
	dl	_.str.77
	dl	_.str.78
	dl	_.str.79
	dl	_.str.80
	dl	_.str.81
	dl	_.str.82
	dl	_.str.83
	dl	_.str.84
	dl	_.str.85
	dl	_.str.86
	dl	_.str.87
	dl	_.str.88
	dl	_.str.89
	dl	_.str.90
	dl	_.str.91
	dl	_.str.92
	dl	_.str.93
	dl	_.str.94
	dl	_.str.95
	dl	_.str.96
	dl	_.str.97
	dl	_.str.98
	dl	_.str.99

	section	.bss,"aw",@nobits
	public	_selectedSave
_selectedSave:
	rb	1

	section	.bss,"aw",@nobits
	public	_offset
_offset:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.100
_.str.100:
	db	"Failed to save.", 0

	section	.rodata,"a",@progbits
	private	_.str.101
_.str.101:
	db	"Press any key to continue.", 0

	section	.rodata,"a",@progbits
	private	_.str.102
_.str.102:
	db	"Failed to load save.", 0

	section	.rodata,"a",@progbits
	private	_.str.103
_.str.103:
	db	"Would you like to save?", 0

	section	.rodata,"a",@progbits
	private	_.str.104
_.str.104:
	db	"Press 1 for yes, 2 for no.", 0

	section	.rodata,"a",@progbits
	private	_.str.105
_.str.105:
	db	"BLOCKS", 0

	section	.bss,"aw",@nobits
	public	_numberOfObjects
_numberOfObjects:
	rb	3

	section	.bss,"aw",@nobits
	public	_objects
_objects:
	rb	3

	section	.data,"aw",@progbits
	public	_cameraXYZ
_cameraXYZ:
	dl	16367616
	dl	614400
	dl	16367616

	section	.data,"aw",@progbits
	public	_angleX
_angleX:
	dd	0x41f00000

	section	.data,"aw",@progbits
	public	_angleY
_angleY:
	dd	0x42340000

	section	.rodata,"a",@progbits
	private	_.str.106
_.str.106:
	db	"Would you like to save to archive or USB?", 0

	section	.rodata,"a",@progbits
	private	_.str.107
_.str.107:
	db	"Press 1 for archive, press 2 for USB.", 0

	section	.rodata,"a",@progbits
	private	_.str.108
_.str.108:
	db	"Or press clear to cancel.", 0

	section	.rodata,"a",@progbits
	private	_.str.109
_.str.109:
	db	"w+", 0

	section	.rodata,"a",@progbits
	private	_.str.110
_.str.110:
	db	"Failed to write save", 0

	section	.rodata,"a",@progbits
	private	_.str.111
_.str.111:
	db	"Please plug in a FAT32 formatted USB drive now.", 0

	section	.rodata,"a",@progbits
	private	_.str.112
_.str.112:
	db	"Press any key to cancel", 0

	section	.rodata,"a",@progbits
	private	_.str.113
_.str.113:
	db	"Please do not disconnect the USB drive.", 0

	section	.rodata,"a",@progbits
	private	_.str.114
_.str.114:
	db	"/", 0

	section	.rodata,"a",@progbits
	private	_.str.115
_.str.115:
	db	"saves", 0

	section	.rodata,"a",@progbits
	private	_.str.116
_.str.116:
	db	".bin", 0

	section	.rodata,"a",@progbits
	private	_.str.117
_.str.117:
	db	"/saves", 0

	section	.rodata,"a",@progbits
	private	_.str.118
_.str.118:
	db	"Failed to init USB.", 0

	section	.rodata,"a",@progbits
	private	_.str.119
_.str.119:
	db	"You may now remove the drive.", 0

	section	.rodata,"a",@progbits
	private	_.str.120
_.str.120:
	db	"Are you sure you don't want to save?", 0

	section	.rodata,"a",@progbits
	private	_.str.123
_.str.123:
	db	"Wrong save file version", 0

	section	.rodata,"a",@progbits
	private	_.str.124
_.str.124:
	db	"Bad checksum.", 0

	section	.data,"aw",@progbits
	public	_degRadRatio
_degRadRatio:
	dd	0x3c8efa35

	section	.data,"aw",@progbits
	public	_cx
_cx:
	dl	3547

	section	.data,"aw",@progbits
	public	_sx
_sx:
	dl	2048

	section	.data,"aw",@progbits
	public	_cy
_cy:
	dl	2896

	section	.data,"aw",@progbits
	public	_sy
_sy:
	dl	2896

	section	.rodata,"a",@progbits
	private	___const._Z8mainMenuPcj.buffer
___const._Z8mainMenuPcj.buffer:
	db	"Are you sure you'd like to delete "
	db	66 dup 0

	section	.rodata,"a",@progbits
	private	_.str.126
_.str.126:
	db	"Would you like to delete the save from", 0

	section	.rodata,"a",@progbits
	private	_.str.127
_.str.127:
	db	"USB or archive?", 0

	section	.rodata,"a",@progbits
	private	_.str.128
_.str.128:
	db	"Press 1 for archive, 2 for USB.", 0

	section	.rodata,"a",@progbits
	private	_.str.129
_.str.129:
	db	"Press any key to cancel.", 0

	section	.bss,"aw",@nobits
	public	_cursorBackground
_cursorBackground:
	rb	3

	section	.bss,"aw",@nobits
	public	_texturePackName
_texturePackName:
	rb	3

	section	.bss,"aw",@nobits
	public	_texPalette
_texPalette:
	rb	3

	section	.bss,"aw",@nobits
	public	_bedrock_texture
_bedrock_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_bookshelf_texture
_bookshelf_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_bricks_texture
_bricks_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_coal_ore_texture
_coal_ore_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_cobblestone_texture
_cobblestone_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_cobblestone_mossy_texture
_cobblestone_mossy_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_crafting_table_texture
_crafting_table_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_dirt_texture
_dirt_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_furnace_texture
_furnace_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_gold_block_texture
_gold_block_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_grass_texture
_grass_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_gravel_texture
_gravel_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_iron_block_texture
_iron_block_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_iron_ore_texture
_iron_ore_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_jukebox_texture
_jukebox_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_leaves_oak_texture
_leaves_oak_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_log_oak_texture
_log_oak_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_planks_texture
_planks_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_sand_texture
_sand_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_smooth_stone_texture
_smooth_stone_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_sponge_texture
_sponge_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_stone_texture
_stone_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_tnt_texture
_tnt_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_diamond_texture
_diamond_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_glass_texture
_glass_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_stonebrick_texture
_stonebrick_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_emerald_texture
_emerald_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_lapis_texture
_lapis_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_pumpkin_texture
_pumpkin_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_snow_texture
_snow_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_red_wool_texture
_red_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_orange_wool_texture
_orange_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_yellow_wool_texture
_yellow_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_lime_green_wool_texture
_lime_green_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_green_wool_texture
_green_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_cyan_wool_texture
_cyan_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_light_blue_wool_texture
_light_blue_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_blue_wool_texture
_blue_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_pink_wool_texture
_pink_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_magenta_wool_texture
_magenta_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_black_wool_texture
_black_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_brown_wool_texture
_brown_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_grey_wool_texture
_grey_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_light_grey_wool_texture
_light_grey_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_white_wool_texture
_white_wool_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_quartz_texture
_quartz_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_hay_block_texture
_hay_block_texture:
	rb	18

	section	.bss,"aw",@nobits
	public	_bacon_texture
_bacon_texture:
	rb	18

	section	.data,"aw",@progbits
	public	_textures
_textures:
	dl	_bedrock_texture
	dl	_bookshelf_texture
	dl	_bricks_texture
	dl	_coal_ore_texture
	dl	_cobblestone_texture
	dl	_cobblestone_mossy_texture
	dl	_crafting_table_texture
	dl	_dirt_texture
	dl	_furnace_texture
	dl	_gold_block_texture
	dl	_grass_texture
	dl	_gravel_texture
	dl	_iron_block_texture
	dl	_iron_ore_texture
	dl	_jukebox_texture
	dl	_leaves_oak_texture
	dl	_log_oak_texture
	dl	_planks_texture
	dl	_sand_texture
	dl	_smooth_stone_texture
	dl	_sponge_texture
	dl	_stone_texture
	dl	_tnt_texture
	dl	_glass_texture
	dl	_diamond_texture
	dl	_lapis_texture
	dl	_emerald_texture
	dl	_stonebrick_texture
	dl	_snow_texture
	dl	_pumpkin_texture
	dl	_red_wool_texture
	dl	_orange_wool_texture
	dl	_yellow_wool_texture
	dl	_lime_green_wool_texture
	dl	_green_wool_texture
	dl	_cyan_wool_texture
	dl	_light_blue_wool_texture
	dl	_blue_wool_texture
	dl	_pink_wool_texture
	dl	_magenta_wool_texture
	dl	_black_wool_texture
	dl	_brown_wool_texture
	dl	_grey_wool_texture
	dl	_light_grey_wool_texture
	dl	_white_wool_texture
	dl	_quartz_texture
	dl	_hay_block_texture
	dl	_bacon_texture

	section	.rodata,"a",@progbits
	private	_.str.125
_.str.125:
	db	"r", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	_ti_Detect
	extern	_gfx_Line
	extern	_fat_Close
	extern	_strncat
	extern	_msd_Open
	extern	__idivs
	extern	_digits
	extern	_gfx_Blit
	extern	_gfx_Sprite
	extern	_cosf
	extern	__ZdlPv
	extern	_os_FontSelect
	extern	_fat_SetFileSize
	extern	_memmove
	extern	_ti_Write
	extern	__Znwj
	extern	__fmul
	extern	_fat_SetFileBlockOffset
	extern	_gfx_FillScreen
	extern	_fp_to_int_floor
	extern	__imulu
	extern	__lxor
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	__bshru
	extern	_drawTextureLineNewA
	extern	__ZdaPv
	extern	_fat_GetFileSize
	extern	_fp_sqrt
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	__sshl
	extern	_strncpy
	extern	_os_DrawStatusBar
	extern	__sshru
	extern	_strlen
	extern	_ti_Read
	extern	_msd_FindPartitions
	extern	_fat_ReadFile
	extern	__iand
	extern	_gfx_FillRectangle
	extern	_os_SetDrawBGColor
	extern	_fat_Open
	extern	_os_GetCSC
	extern	_os_HomeUp
	extern	_usb_Cleanup
	extern	_msd_Close
	extern	_fat_Create
	extern	_gfx_GetPixel
	extern	_fp_mul
	extern	_fp_div
	extern	_ti_CleanAll
	extern	_qsort
	extern	_os_FontGetWidth
	extern	_strcat
	extern	_os_NewLine
	extern	_ti_GetDataPtr
	extern	_os_ClrLCDFull
	extern	_usb_Init
	extern	__Unwind_SjLj_Register
	extern	_usb_WaitForInterrupt
	extern	_usb_ResetDevice
	extern	__fadd
	extern	_drawTextureLineNewA_NoClip
	extern	_fp_sqr
	extern	_memcpy
	extern	__ixor
	extern	_fat_WriteFile
	extern	_os_PutStrFull
	extern	_ti_Open
	extern	_sinf
	extern	_ti_GetSize
	extern	_fat_Delete
	extern	_usb_WaitForEvents
	extern	_strcmp
	extern	_gfx_GetSprite
	extern	__ishru
	extern	_gfx_GetTextY
	extern	_ti_SetArchiveStatus
	extern	_strcpy
	extern	_os_SetDrawFGColor
	extern	_msd_Info
	extern	__lcmpu
	extern	_fp_to_int
	extern	__fcmp
	extern	_msd_Write
	extern	_msd_Read
	extern	_ti_Close
	extern	_shadeScreen
	extern	_gfx_PrintString
	extern	__ishl
	extern	__ladd
	extern	__ftol
	extern	__Znaj
	extern	_exit
	extern	_ti_SetGCBehavior
	extern	_gfx_Sprite_NoClip
	extern	__lshru
	extern	_ti_MemChk
	extern	_gfx_SetTextBGColor
	extern	_fat_CloseFile
	extern	_ti_Delete
	extern	_gfx_GetStringWidth
	extern	__lnot
	extern	_approx_sqrt_a
	extern	_div
	extern	_bsearch
	extern	_gfx_SetDraw
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_SetColor
	extern	__land
	extern	_os_FontDrawText
	extern	_fat_OpenFile
	extern	_gfx_PrintStringXY
	extern	_gfx_SetTextScale
