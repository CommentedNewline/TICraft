#include <cstdint>
#include <graphx.h>
#include "textures.hpp"

volatile uint16_t* palette = gfx_palette;

uint16_t texPalette[] = {
	gfx_RGBTo1555( 16, 11,  8),
	gfx_RGBTo1555( 25, 20, 13),
	gfx_RGBTo1555( 32, 21, 10),
	gfx_RGBTo1555( 39, 31,  9),
	gfx_RGBTo1555( 39, 32, 17),
	gfx_RGBTo1555( 43, 36, 22),
	gfx_RGBTo1555( 79, 37, 20),
	gfx_RGBTo1555( 75, 43, 22),
	gfx_RGBTo1555( 89, 45, 27),
	gfx_RGBTo1555( 67, 52, 32),
	gfx_RGBTo1555( 78, 52, 32),
	gfx_RGBTo1555( 83, 56, 37),
	gfx_RGBTo1555( 76, 60, 36),
	gfx_RGBTo1555(104, 84, 49),
	gfx_RGBTo1555(114, 88, 54),
	gfx_RGBTo1555(126, 87, 46),
	gfx_RGBTo1555(147, 83, 45),
	gfx_RGBTo1555(114, 94, 58),
	gfx_RGBTo1555(121, 95, 61),
	gfx_RGBTo1555(158, 92, 48),
	gfx_RGBTo1555(152,104, 59),
	gfx_RGBTo1555(161,107, 63),
	gfx_RGBTo1555(165,112, 65),
	gfx_RGBTo1555(173,110, 63),
	gfx_RGBTo1555(177,114, 73),
	gfx_RGBTo1555(158,133, 77),
	gfx_RGBTo1555(179,140, 88),
	gfx_RGBTo1555(182,143, 91),
	gfx_RGBTo1555(186,153, 99),
	gfx_RGBTo1555(180,182,179),
	gfx_RGBTo1555(214,217,213),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255),
	gfx_RGBTo1555(255,255,255)
};

const uint8_t planks_oak[] = {
    28,25,25,25,25,28,28,27,25,28,28,28,28,28,28,25,
    28,28,27,18,27,27,25,25,25,25,25,27,25,27,28,25,
    28,27,25,25,25,25,27,27,18,27,28,27,28,28,28,25,
    14,13,14,18,14,18,17,17,17,17,14,13,13,14,14,18,
    28,25,25,25,25,28,28,25,28,25,25,14,26,28,26,28,
    25,25,17,27,26,27,28,25,27,26,26,28,25,25,25,25,
    27,28,28,28,27,28,28,25,25,25,17,27,28,27,28,28,
    17,14,13,14,13,14,14,18,17,14,14,13,14,13,18,18,
    28,27,28,28,28,17,25,27,28,27,27,26,28,28,28,25,
    25,25,25,25,25,28,26,28,25,25,25,17,28,25,25,25,
    28,27,26,26,28,28,25,25,25,25,27,27,26,26,27,25,
    17,13,17,17,13,14,13,18,17,17,17,17,13,13,13,18,
    28,28,28,27,28,25,28,25,25,17,25,25,27,27,28,28,
    27,25,17,28,28,27,27,25,28,27,27,25,25,25,25,27,
    28,28,25,25,25,28,28,25,28,28,25,27,28,28,28,28,
    18,18,18,18,14,14,18,14,17,17,18,14,12,14,14,17
};

const uint8_t crafting_table_top[] = {
	1,1,0,1,1,1,0,0,0,1,1,0,1,1,1,1,
	1,27,26,5,24,24,23,23,23,23,24,23,5,28,27,1,
	0,28,4,22,22,21,21,21,22,21,21,22,21,4,27,1,
	1,3,21,10,6,11,11,11,7,7,11,11,7,22,3,0,
	0,23,23,11,19,19,10,24,24,7,19,24,11,21,23,1,
	0,24,21,11,24,21,7,16,22,10,16,19,11,21,24,1,
	0,24,22,11,11,10,11,11,7,11,10,7,7,22,24,0,
	0,21,22,11,23,21,11,23,24,11,21,23,11,21,22,2,
	1,23,19,11,24,22,11,24,22,11,21,22,11,24,24,1,
	1,24,16,7,10,7,11,12,8,11,10,11,11,21,24,1,
	1,21,21,7,19,23,10,22,16,7,23,23,11,22,24,1,
	0,24,21,11,19,24,7,24,22,10,19,23,11,21,22,1,
	1,5,22,11,11,7,11,11,11,11,11,11,11,23,5,0,
	0,26,4,21,22,21,23,23,23,21,22,22,22,4,26,0,
	1,26,27,5,24,24,21,21,23,24,23,23,5,28,26,1,
	1,1,0,2,1,6,6,6,8,6,6,1,0,0,0,1
};

const uint8_t crafting_table_front[] {
	1,25,25,25,25,5,24,8,8,24,5,28,28,28,28,1,
	1,28,27,18,27,27,5,8,8,4,25,27,25,27,28,1,
	1,28,25,25,15,25,28,3,5,28,28,27,17,28,28,1,
	1,14,13,12,12,17,17,1,1,18,12,3,3,3,18,1,
	1,25,25,15,25,28,28,5,5,25,15,3,14,3,14,1,
	1,25,17,3,26,27,28,4,5,26,21,3,4,3,13,1,
	1,27,28,3,28,28,27,4,4,25,12,30,30,29,17,1,
	1,17,14,3,14,14,13,2,1,14,14,31,30,29,9,1,
	2,28,27,3,29,17,25,5,5,26,26,14,30,29,18,1,
	0,25,29,30,29,18,27,5,4,25,25,14,31,29,13,1,
	1,27,14,14,29,17,25,2,5,25,28,26,30,29,14,1,
	0,13,17,17,9,9,14,0,2,14,17,14,5,29,9,1,
	1,28,28,22,28,25,28,1,4,25,25,25,20,31,17,1,
	1,25,17,22,28,27,28,4,5,27,27,25,25,13,13,1,
	1,28,25,15,25,27,28,4,5,28,25,26,28,28,28,1,
	1,17,17,18,13,13,18,1,2,18,14,14,9,13,14,1
};

const uint8_t crafting_table_side[] {
	1,25,25,25,25,5,24,8,8,24,5,28,28,28,28,1,
	1,28,27,18,27,27,5,8,8,4,25,27,25,27,28,1,
	1,28,25,25,15,25,28,3,5,28,28,27,17,28,28,1,
	1,14,13,12,12,17,17,1,1,18,9,14,13,14,18,1,
	1,25,25,15,25,28,28,5,5,25,15,17,26,26,27,1,
	1,25,17,3,26,3,28,4,5,27,20,26,25,25,25,1,
	1,27,28,3,18,3,14,5,4,25,12,28,28,28,28,1,
	1,17,13,14,30,14,14,2,1,17,13,9,13,14,17,1,
	2,28,28,30,14,30,13,5,5,27,27,26,28,28,28,1,
	0,25,25,29,13,29,13,5,4,25,25,17,28,25,25,1,
	1,27,26,26,28,28,25,2,4,25,28,26,21,26,27,1,
	0,14,17,17,13,14,14,0,1,14,17,13,9,14,13,1,
	1,28,28,22,28,25,28,2,4,25,25,25,20,17,28,1,
	1,25,17,22,28,27,28,4,5,27,27,25,25,25,25,1,
	1,28,25,15,25,28,28,4,5,28,25,27,27,28,28,1,
	1,17,17,17,13,14,18,1,2,17,18,13,12,14,14,1
};

// assuming textures are 16x16;
const uint8_t* crafting_table_texture[6] = {crafting_table_top, crafting_table_front, planks_oak, crafting_table_side, crafting_table_side, crafting_table_side};

void initPalette() {
    for (unsigned int i = 0; i < 256; i++) {
        palette[i] = texPalette[i];
    }
}